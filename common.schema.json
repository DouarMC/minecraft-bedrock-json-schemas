{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "type": "object",
    "definitions": {
        "vanilla_item_groups_id": {
            "$comment": "Liste des identifiants des groupes d'items vanilla.",
            "enum": [
                "itemGroup.name.anvil", "itemGroup.name.arrow", "itemGroup.name.axe", "itemGroup.name.banner", "itemGroup.name.banner_pattern", "itemGroup.name.bed",
                "itemGroup.name.boat", "itemGroup.name.boots", "itemGroup.name.buttons", "itemGroup.name.candles", "itemGroup.name.chalkboard", "itemGroup.name.chest",
                "itemGroup.name.chestboat", "itemGroup.name.chestplate", "itemGroup.name.concrete", "itemGroup.name.concretePowder", "itemGroup.name.cookedFood", "itemGroup.name.copper",
                "itemGroup.name.coral", "itemGroup.name.coral_decorations", "itemGroup.name.crop", "itemGroup.name.door", "itemGroup.name.dye", "itemGroup.name.enchantedBook",
                "itemGroup.name.fence", "itemGroup.name.fenceGate", "itemGroup.name.firework", "itemGroup.name.fireworkStars", "itemGroup.name.flower", "itemGroup.name.glass",
                "itemGroup.name.glassPane", "itemGroup.name.glazedTerracotta", "itemGroup.name.goatHorn", "itemGroup.name.grass", "itemGroup.name.hanging_sign", "itemGroup.name.helmet",
                "itemGroup.name.hoe", "itemGroup.name.horseArmor", "itemGroup.name.leaves", "itemGroup.name.leggings", "itemGroup.name.lingeringPotion", "itemGroup.name.log",
                "itemGroup.name.minecart", "itemGroup.name.miscFood", "itemGroup.name.mobEgg", "itemGroup.name.monsterStoneEgg", "itemGroup.name.mushroom", "itemGroup.name.netherWartBlock",
                "itemGroup.name.ore", "itemGroup.name.permission", "itemGroup.name.pickaxe", "itemGroup.name.planks", "itemGroup.name.potion", "itemGroup.name.potterySherds",
                "itemGroup.name.pressurePlate", "itemGroup.name.rail", "itemGroup.name.rawFood", "itemGroup.name.record", "itemGroup.name.sandstone", "itemGroup.name.sapling",
                "itemGroup.name.sculk", "itemGroup.name.seed", "itemGroup.name.shovel", "itemGroup.name.shulkerBox", "itemGroup.name.sign", "itemGroup.name.skull",
                "itemGroup.name.slab", "itemGroup.name.smithing_templates", "itemGroup.name.splashPotion", "itemGroup.name.stainedClay", "itemGroup.name.stairs", "itemGroup.name.stone",
                "itemGroup.name.stoneBrick", "itemGroup.name.sword", "itemGroup.name.trapdoor", "itemGroup.name.walls", "itemGroup.name.wood", "itemGroup.name.wool",
                "itemGroup.name.woolCarpet"
            ]
        },
        "vanilla_cooldown_categories_id": {
            "$comment": "Liste des identifiants des catégories de cooldown vanilla.",
            "enum": [
                "minecraft:chorusfruit", "minecraft:ender_pearl", "minecraft:goat_horn", "minecraft:shield", "minecraft:wind_charge"
            ]
        },
        "entity_damage_causes_id": {
            "$comment": "Listes des causes de dégâts possibles.",
            "enum": [
                "all", "anvil", "attack", "block_explosion", "contact", "drowning", "entity_explosion", "fall", "falling_block", "fatal", "fire", "fire_tick", "fly_into_wall", 
                "lava", "magic", "none", "override", "piston", "projectile", "self_destruct", "sonic_boom", "stalactite", "stalagmite", "starve", "suffocation", "thorns", 
                "void", "wither"
            ]
        },
        "vanilla_item_tags_id": {
            "$comment": "Liste des identifiants des tags d'items.",
            "enum": [
                "minecraft:is_armor", "minecraft:arrow", "minecraft:banner", "minecraft:boats", "minecraft:bookshelf_books", "minecraft:chainmail_tier", "minecraft:chest_boat",
                "minecraft:coals", "minecraft:is_cooked", "minecraft:crimson_stems", "minecraft:diamond_tier", "minecraft:digger", "minecraft:door", "minecraft:is_fish",
                "minecraft:is_food", "minecraft:golden_tier", "minecraft:hanging_actor", "minecraft:hanging_sign", "minecraft:is_axe", "minecraft:is_hoe", "minecraft:horse_armor",
                "minecraft:iron_tier", "minecraft:leather_tier", "minecraft:lectern_books", "minecraft:logs", "minecraft:logs_that_burn", "minecraft:mangrove_logs", "minecraft:is_meat",
                "minecraft:is_minecart", "minecraft:music_disc", "minecraft:netherite_tier", "minecraft:is_pickaxe", "minecraft:piglin_loved", "minecraft:piglin_repellents",
                "minecraft:planks", "minecraft:sand", "minecraft:is_shovel", "minecraft:sign", "minecraft:soul_fire_base_blocks", "minecraft:spawn_egg", "minecraft:stone_bricks",
                "minecraft:stone_crafting_materials", "minecraft:stone_tier", "minecraft:stone_tool_materials", "minecraft:is_sword", "minecraft:is_tool", "minecraft:vibration_damper",
                "minecraft:warped_stems", "minecraft:wooden_slabs", "minecraft:wooden_tier", "minecraft:wool"
            ]
        },

        "format_version": {
            "$comment": "La version du Format à utiliser (ex: 1.21.50).",
            "examples": ["1.21.50"],
            "type": "string",
            "pattern": "^\\d+\\.\\d+(\\.\\d+)?$"
        },

        "color_rgb": {
            "$comment": "Définit une couleur RGB.",
            "type": "array",
            "minItems": 3,
            "maxItems": 3,
            "items": {
                "type": "integer",
                "minimum": 0,
                "maximum": 255
            }
        },
        "color_hex": {
            "$comment": "Définit une couleur hexadécimale.",
            "type": "string",
            "pattern": "^#[0-9a-fA-F]{6}$"
        },
        "color_format": {
            "$comment": "Définit une couleur RGB ou hexadécimale.",
            "oneOf": [
                {
                    "$ref": "#/definitions/color_rgb"
                },
                {
                    "$ref": "#/definitions/color_hex"
                }
            ]
        },
        "color_rgba": {
            "$comment": "Définit une couleur RGBA.",
            "type": "array",
            "minItems": 4,
            "maxItems": 4,
            "items": {
                "type": "integer",
                "minimum": 0,
                "maximum": 255
            }
        },
        "color_hex_alpha": {
            "$comment": "Définit une couleur hexadécimale avec canal alpha.",
            "type": "string",
            "pattern": "^#[0-9a-fA-F]{8}$"
        },
        "color_format_alpha": {
            "$comment": "Définit une couleur RGBA ou hexadécimale avec canal alpha.",
            "oneOf": [
                {
                    "$ref": "#/definitions/color_rgba"
                },
                {
                    "$ref": "#/definitions/color_hex_alpha"
                }
            ]
        },
        "string_with_namespace": {
            "$comment": "Définit une chaîne de caractères avec un espace de noms.",
            "type": "string",
            "pattern": "^[a-zA-Z0-9_]+:[a-zA-Z0-9_]+$"
        },
        "uuid": {
            "$comment": "Définit un UUID.",
            "type": "string",
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
        },
        "item_descriptor": {
            "$comment": "Définit un descripteur d'item.",
            "oneOf": [
                {
                    "type": "string"
                },
                {
                    "type": "object",
                    "properties": {
                        "item": {
                            "description": "L'identifiant de l'item. \n Type: String",
                            "type": "string"
                        },
                        "tag": {
                            "description": "L'identifiant du tag des items qui peuvent être utilisés dans ce contexte. Type: String",
                            "type": "string",
                            "$ref": "#/definitions/vanilla_item_tags_id"
                        },
                        "data": {
                            "description": "La donnée de l'item. \n Type: Integer",
                            "type": "integer"
                        },
                        "count": {
                            "description": "Le nombre d'items. \n Type: Integer",
                            "type": "integer"
                        }
                    }
                }
            ]
        },
        "menu_category": {
            "$comment": "Définit les propriétés de catégorie de menu (pour blocs et items).",
            "type": "object",
            "properties": {
                "category": {
                    "description": "Dans quelle catégorie le bloc ou l'item doit-il apparaître dans le menu créatif.",
                    "type": "string",
                    "enum": ["construction", "nature", "equipment", "items", "none"]
                },
                "group": {
                    "description": "Dans quel groupe le bloc ou l'item doit-il apparaître dans le menu créatif.",
                    "type": "string",
                    "examples": [
                        "itemGroup.name.anvil", "itemGroup.name.arrow", "itemGroup.name.axe", "itemGroup.name.banner", "itemGroup.name.banner_pattern", "itemGroup.name.bed",
                        "itemGroup.name.boat", "itemGroup.name.boots", "itemGroup.name.buttons", "itemGroup.name.candles", "itemGroup.name.chalkboard", "itemGroup.name.chest",
                        "itemGroup.name.chestboat", "itemGroup.name.chestplate", "itemGroup.name.concrete", "itemGroup.name.concretePowder", "itemGroup.name.cookedFood", "itemGroup.name.copper",
                        "itemGroup.name.coral", "itemGroup.name.coral_decorations", "itemGroup.name.crop", "itemGroup.name.door", "itemGroup.name.dye", "itemGroup.name.enchantedBook",
                        "itemGroup.name.fence", "itemGroup.name.fenceGate", "itemGroup.name.firework", "itemGroup.name.fireworkStars", "itemGroup.name.flower", "itemGroup.name.glass",
                        "itemGroup.name.glassPane", "itemGroup.name.glazedTerracotta", "itemGroup.name.goatHorn", "itemGroup.name.grass", "itemGroup.name.hanging_sign", "itemGroup.name.helmet",
                        "itemGroup.name.hoe", "itemGroup.name.horseArmor", "itemGroup.name.leaves", "itemGroup.name.leggings", "itemGroup.name.lingeringPotion", "itemGroup.name.log",
                        "itemGroup.name.minecart", "itemGroup.name.miscFood", "itemGroup.name.mobEgg", "itemGroup.name.monsterStoneEgg", "itemGroup.name.mushroom", "itemGroup.name.netherWartBlock",
                        "itemGroup.name.ore", "itemGroup.name.permission", "itemGroup.name.pickaxe", "itemGroup.name.planks", "itemGroup.name.potion", "itemGroup.name.potterySherds",
                        "itemGroup.name.pressurePlate", "itemGroup.name.rail", "itemGroup.name.rawFood", "itemGroup.name.record", "itemGroup.name.sandstone", "itemGroup.name.sapling",
                        "itemGroup.name.sculk", "itemGroup.name.seed", "itemGroup.name.shovel", "itemGroup.name.shulkerBox", "itemGroup.name.sign", "itemGroup.name.skull",
                        "itemGroup.name.slab", "itemGroup.name.smithing_templates", "itemGroup.name.splashPotion", "itemGroup.name.stainedClay", "itemGroup.name.stairs", "itemGroup.name.stone",
                        "itemGroup.name.stoneBrick", "itemGroup.name.sword", "itemGroup.name.trapdoor", "itemGroup.name.walls", "itemGroup.name.wood", "itemGroup.name.wool",
                        "itemGroup.name.woolCarpet"
                    ]
                },
                "is_hidden_in_commands": {
                    "description": "Si le bloc ou l'item doit être caché dans les commandes.",
                    "type": "boolean"
                }
            }
        },
        "block_descriptor": {
            "$comment": "Définit un descripteur de bloc.",
            "oneOf": [
                {
                    "type": "string"
                },
                {
                    "type": "object",
                    "properties": {
                        "name": {
                            "description": "Le nom du bloc. \n Type: String",
                            "type": "string"
                        },
                        "states": {
                            "description": "Les états du bloc. \n Type: Object",
                            "type": "object",
                            "additionalProperties": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "integer"
                                    },
                                    {
                                        "type": "number"
                                    },
                                    {
                                        "type": "boolean"
                                    }
                                ]
                            }
                        },
                        "tags": {
                            "description": "Les tags du bloc. \n Type: Molang String",
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "item_functions": {
            "$comment": "Contient les différentes fonctions qui appliqueront des modifications à l'Item.",
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "function": {
                        "description": "Le type de fonction.",
                        "type": "string",
                        "enum": [
                            "enchant_book_for_trading", "enchant_random_gear", "enchant_randomly", "enchant_with_levels", "specific_enchants", "looting_enchant",
                            "random_aux_value", "random_block_state", "random_dye", "set_actor_id", "set_banner_details", "set_book_contents", "set_count",
                            "set_damage", "set_data", "set_data_from_color_index", "set_lore", "set_name", "exploration_map", "fill_container", "furnace_smelt",
                            "trader_material_type", "set_ominous_bottle_amplifier", "set_armor_trim", "set_potion"
                        ]
                    }
                },
                "dependencies": {
                    "function": {
                        "oneOf": [
                            {
                                "properties": {
                                    "function": {"enum": ["enchant_book_for_trading", "random_dye", "set_data_from_color_index", "furnace_smelt", "trader_material_type"]}
                                }
                            },
                            {
                                "properties": {
                                    "function": {"enum": ["enchant_book_for_trading"]},
                                    "base_cost": {"type": "number"},
                                    "base_random_cost": {"type": "number"},
                                    "per_level_random_cost": {"type": "number"},
                                    "per_level_cost": {"type": "number"}
                                }
                            },
                            {
                                "properties": {
                                    "function": {"enum": ["enchant_random_gear"]},
                                    "chance": {"type": "number"}
                                }
                            },
                            {
                                "properties": {
                                    "function": {"enum": ["enchant_randomly", "enchant_with_levels"]},
                                    "treasure": {"type": "boolean"}
                                }
                            },
                            {
                                "properties": {
                                    "function": {"enum": ["enchant_with_levels"]},
                                    "levels": {
                                        "type": "object", 
                                        "properties": {
                                            "min": {"type": "number"},
                                            "max": {"type": "number"}
                                        }
                                    }
                                }
                            },
                            {
                                "properties": {
                                    "function": {"enum": ["specific_enchants"]},
                                    "enchants": {
                                        "type": "array",
                                        "items": {
                                            "oneOf": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {"type": "string"},
                                                        "level": {"type": "number"}
                                                    }
                                                },
                                                {"type": "string"}
                                            ]
                                        }
                                    }
                                }
                            },
                            {
                                "properties": {
                                    "function": {"enum": ["looting_enchant", "set_count"]},
                                    "count": {
                                        "oneOf": [
                                            {
                                                "type": "object", 
                                                "properties": {
                                                    "min": {"type": "number"},
                                                    "max": {"type": "number"}
                                                }
                                            },
                                            {"type": "number"}
                                        ]
                                    }
                                }
                            },
                            {
                                "properties": {
                                    "function": {"enum": ["random_aux_value", "random_block_state"]},
                                    "values": {
                                        "type": "object", 
                                        "properties": {
                                            "min": {"type": "number"},
                                            "max": {"type": "number"}
                                        }
                                    }
                                }
                            },
                            {
                                "properties": {
                                    "function": {"enum": ["random_block_state"]},
                                    "block_state": {"type": "string"}
                                }
                            },
                            {
                                "properties": {
                                    "function": {"enum": ["set_actor_id"]},
                                    "id": {"type": "string"}
                                }
                            },
                            {
                                "properties": {
                                    "function": {"enum": ["set_banner_details"]},
                                    "type": {"type": "number", "const": 1}
                                }
                            },
                            {
                                "properties": {
                                    "function": {"enum": ["set_book_contents"]},
                                    "author": {"type": "string"},
                                    "title": {"type": "string"},
                                    "pages": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            {
                                "properties": {
                                    "function": {"enum": ["set_damage"]},
                                    "damage": {
                                        "oneOf": [
                                            {
                                                "type": "object", 
                                                "properties": {
                                                    "min": {"type": "number"},
                                                    "max": {"type": "number"}
                                                }
                                            },
                                            {"type": "number"}
                                        ]
                                    }
                                }
                            },
                            {
                                "properties": {
                                    "function": {"enum": ["set_data"]},
                                    "data": {"type": "number"}
                                }
                            },
                            {
                                "properties": {
                                    "function": {"enum": ["set_lore"]},
                                    "lore": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            {
                                "properties": {
                                    "function": {"enum": ["set_name"]},
                                    "name": {"type": "string"}
                                }
                            },
                            {
                                "properties": {
                                    "function": {"enum": ["exploration_map"]},
                                    "destination": {
                                        "type": "string", 
                                        "enum": [
                                            "buriedtreasure", "endcity", "fortress", "mansion", "mineshaft", "monument", "pillageroutpost",
                                            "ruins", "shipwreck", "stronghold", "temple", "village", "trial_chambers"
                                        ]
                                    }
                                }
                            },
                            {
                                "properties": {
                                    "function": {"enum": ["fill_container"]},
                                    "loot_table": {"type": "string"},
                                    "set_name": {"type": "string"}
                                }
                            },
                            {
                                "properties": {
                                    "function": {"enum": ["set_ominous_bottle_amplifier"]},
                                    "amplifier": {
                                        "oneOf": [
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "min": {"type": "integer"},
                                                    "max": {"type": "integer"}
                                                }
                                            },
                                            {"type": "integer"}
                                        ]
                                    }
                                }
                            },
                            {
                                "properties": {
                                    "function": {"enum": ["set_armor_trim"]},
                                    "material": {
                                        "anyOf": [
                                            {"type": "string", "enum": ["amethyst", "copper", "diamond", "emerald", "gold", "iron", "lapis", "netherite", "quartz", "redstone"]},
                                            {"type": "string"}
                                        ]
                                    },
                                    "pattern": {
                                        "anyOf": [
                                            {
                                                "type": "string", 
                                                "enum": [
                                                    "sentry", "vex", "wild", "coast", "dune", "wayfinder", "raiser", "shaper", "host", "ward", "silence", "tide", "snout",
                                                    "rib", "eye", "spire", "flow", "bolt"
                                                ]
                                            },
                                            {"type": "string"}
                                        ]
                                    }
                                }
                            },
                            {
                                "properties": {
                                    "function": {"enum": ["set_potion"]},
                                    "id": {"type": "string", "enum": [
                                        "water", "mundane", "long_mundane", "thick", "awkward", "nightvision", "long_nightvision", "invisibility", "long_invisibility", 
                                        "leaping", "long_leaping", "strong_leaping", "fire_resistance", "long_fire_resistance", "swiftness", "long_swiftness", "strong_swiftness", 
                                        "slowness", "long_slowness", "strong_slowness", "water_breathing", "long_water_breathing", "healing", "strong_healing", "harming", 
                                        "strong_harming", "poison", "long_poison", "strong_poison", "regeneration", "long_regeneration", "strong_regeneration", "strength", 
                                        "long_strength", "strong_strength", "weakness", "long_weakness", "wither", "turtle_master", "long_turtle_master", "strong_turtle_master", 
                                        "slow_falling", "long_slow_falling", "wind_charged", "weaving", "oozing", "infested"
                                    ]}
                                }
                            }
                        ]
                    }
                }
            }
        }
    }
}