{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "type": "object",
    "required": ["format_version", "minecraft:entity"],
    "properties": {
        "format_version": {"$ref": "#/definitions/format_version-def"},
        "minecraft:entity": {"$ref": "#/definitions/minecraft:entity-def", "properties": {
            "description": {"$ref": "#/definitions/description-def"},
            "component_groups": {"$ref": "#/definitions/component_groups-def"},
            "components": {"$ref": "#/definitions/components-def"},
            "events": {"$ref": "#/definitions/events-def"}
        }}
    },

    "definitions": {
        "format_version-def": {"type": "string", "pattern": "^\\d+\\.\\d+\\.\\d+$", "description": "La version du Format à utiliser."},
        "minecraft:entity-def": {"type": "object", "description": "Contient toute la définition de l'Entité.", "required": ["description", "component_groups", "components", "events"]},
        "description-def": {"type": "object", "description": "Contient les propeiétés de Descriptions de l'Entité.", "properties": {
            "identifier": {"type": "string", "description": "L'identifiant de l'Entité."},
            "runtime_identifier": {"type": "string", "description": "L'identifiant de l'Entité à utiliser comme Runtime, ce qui permettra que notre Entité possède certains comportement Hardcoded."},
            "spawn_category": {"type": "string", "description": "NON-FONCTIONEL", "enum": ["creature", "axolotls", "ambient", "monster", "water_creature", "water_ambient", "underground_water_creature", "misc"]},
            "is_spawnable": {"type": "boolean", "description": "Crée un Oeuf d'apparition pour cette Entité si vraie."},
            "is_summonable": {"type": "boolean", "description": "Si vraie, l'Entité peut apparaitre à l'aide la commande /summon."},
            "is_experimental": {"type": "boolean", "description": "Définit si cette Entité existera uniquement si les options expérimentales sont activés."},
            "properties": {"type": "object", "description": "Définit les propriétés d'Entités pour cette Entité.",
                "additionalProperties": {"type": "object", "properties": {
                    "type": {"type": "string", "description": "Le Type de Propeiétés d'Entités.", "enum": ["int", "float", "bool", "enum"]},
                    "range": {"type": "array", "description": "La Range de valeurs numériques.", "items": [{"type": "number"}, {"type": "number"}]},
                    "values": {"type": "array", "description": "Les valeurs possibles pour l'Enum.", "items": {"type": "string"}},
                    "default": {"description": "La valeur par défaut.", "anyOf": [
                        {"type": "string"},
                        {"type": "number"},
                        {"type": "boolean"}
                    ]},
                    "client_sync": {"type": "boolean", "description": "Définit si les données de propriétés d'ntités sont envoyé au Pack de Ressources."}
                }}
            },
            "animations": {"type": "object", "description": "Les animations et controlleurs d'animations à référencer.", "additionalProperties": {
                "type": "string"
            }},
            "scripts": {"type": "object", "description": "Définie certains script que l'entité execute à certains moments.", "properties": {
                "initialize": {"type": "array", "items": {"type": "string"}, "description": "Ce script s'exécute lors de la première initialisation de l'entité, c'est-à-dire lorsqu'elle apparaît et à chaque fois qu'elle est chargée."},
                "pre_animation": {"type": "array", "items": {"type": "string"}, "description": "Ce script s'exécute chaque image avant la lecture des animations. Ceci est utile pour calculer les variables qui seront utilisées dans les animations et qui doivent être calculées avant l'exécution de l'animation."},
                "animate": {"type": "array", "description": "Ce script s'exécute chaque image après pre_animation. C'est ici que vous exécutez des animations et des contrôleurs d'animation. Chaque image, chaque animation ou contrôleur d'animation de cette clé sera exécuté.", "items": {"oneOf": [
                    {"type": "string"},
                    {"type": "object", "additionalProperties": {"type": "string"}}
                ]}}
            }}
        }},

        "component_groups-def": {"type": "object", "description": "Contient les Components_Groups appliquable sur cette Entité.",
            "additionalProperties": {"$ref": "#/definitions/components-def"}
        },

        "components-def": {"type": "object", "description": "Tous les Components de l'Entité.", "properties": {
            "minecraft:addrider": {"type": "object", "description": "Ajoute un Chevaucheur à cette Entité. Nécesite le component 'minecraft:rideable'.", "properties": {
                "entity_type": {"type": "string", "description": "Le Type d'Entité qui chevauchera notre Entité."},
                "spawn_event": {"type": "string", "description": "L'event de spawn qui sera utlilisé pour notre Entité quand son chevaucheur sera crée."}
            }},
            "minecraft:admire_item": {"type": "object", "description": "Oblige notre Entité à ignorer les cibles attaquables pendant une durée donnée.", "properties": {
                "cooldown_after_being_attacked": {"type": "integer", "description": "Durée en secondes pendant laquelle notre Entité n'admirera pas les Items si elle a été bléssée."},
                "duration": {"type": "integer", "description": "Durée en secondes pendant laquelle notre Entité ne sera plus aggressif."}
            }},
            "minecraft:ageable": {"type": "object", "description": "Ajoute un timer pour que notre Entité grandisse. Le Timer peut être accéléré en donnant à notre Entité les Items qu'elle aime tels que définis par la propriété 'feed_items'.", "properties": {
                "drop_items": {"type": "array", "description": "Liste des Items que notre Entité droppe quand elle grandira.", "items": {"anyOf": [
                    {"type": "string"},
                    {"type": "object", "properties": {
                        "item": {"type": "string"},
                        "count": {"type": "integer"},
                        "data": {"oneOf": [
                            {"type": "number"},
                            {"type": "string"}
                        ]}
                    }}
                ]}},
                "duration": {"type": "number", "description": "Le temps en secondes pour que l'Entité grandisse. La valeur -1 fera en sorte que notre Entité sera toujours un bébé."},
                "feed_items": {"type": "array", "description": "Liste des Items pouvant être utilisé sur notre Entité. Pour chaque Item, on peut définir le temps d'accélération de croissance.", "items": {"anyOf": [
                    {"type": "string"},
                    {"type": "object", "properties": {
                        "item": {"type": "string"},
                        "count": {"type": "integer"},
                        "data": {"oneOf": [
                            {"type": "number"},
                            {"type": "string"}
                        ]}
                    }},
                    {"type": "object", "properties": {
                        "item": {"description": "L'Item.", "anyOf": [
                            {"type": "string"},
                            {"type": "object", "properties": {
                                "item": {"type": "string"},
                                "count": {"type": "integer"},
                                "data": {"oneOf": [
                                    {"type": "number"},
                                    {"type": "string"}
                                ]}
                            }}
                        ]},
                        "growth": {"type": "number", "description": "Combien de temps la croissance est accélérée."}
                    }}
                ]}},
                "grow_up": {"description": "L'Evenement à déclencher quand l'Entité a fini sa croissance.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                "interact_filters": {"description": "Une liste de conditions à remplir pour que l'Entité soit nourit.", "$ref": "#/definitions/minecraft_filter-ref"},
                "transform_to_item": {"description": "L'Item de nourriture se transformera en Item spécifié si l'intéraction réussi.", "anyOf": [
                    {"type": "string"},
                    {"type": "object", "properties": {
                        "item": {"type": "string"},
                        "count": {"type": "integer"},
                        "data": {"oneOf": [
                            {"type": "number"},
                            {"type": "string"}
                        ]}
                    }}
                ]}
            }},
            "minecraft:ambient_sound_interval": {"type": "object", "description": "Définit le delai de l'Entité entre la lecture de son son ambient.", "properties": {
                "event_name": {"type": "string", "description": "Evénement sonore de niveau à jouer comme son ambient."},
                "event_names": {"type": "array", "description": "Liste des événements sonores de niveau dynamique, avec des conditions de choix entre eux. Evalué dans l'ordre, le premier gagne. Si aucun n'est évalué à vrai, 'event_name' aura la priorité.", "items": {"type": "object", "properties": {
                    "condition": {"type": "string", "description": "La condition Molang a remplir."},
                    "event_name": {"type": "string", "description": "Evénement sonore de niveau à jouer comme son ambient."}
                }}},
                "range": {"type": "number", "description": "Temps maximum en secondes à ajouter de manière aléatoire au temps de retard su son ambient."},
                "value": {"type": "number", "description": "Temps minimum en secondes avant que l'Entité ne rejoue son son ambient."}
            }},
            "minecraft:anger_level": {"type": "object", "description": "Gérer le niveau de colère de l'Entité envers des nuisances spécifiques.", "properties": {
                "anger_decrement_interval": {"type": "number", "description": "Détermine la fréquence à laquelle le niveau de colère diminue au fil du temps."},
                "angry_boost": {"type": "integer", "description": "Augmentation appliquée au seuil de colère lorsque l'entité devient en colère."},
                "angry_threshold": {"type": "integer", "description": "Niveau de colère à partir duquel l'Entité est considérée en colère contre une nuisance."},
                "default_annoyingness": {"type": "integer", "description": "Quantité par défaut pour augmenter le niveau de colère à chaque provocation."},
                "default_projectile_annoyingness": {"type": "integer", "description": "Quantité par défaut pour augmenter le niveau de colère à chaque coup de projectile."},
                "max_anger": {"type": "integer", "description": "Niveau maximum de colère pouvant être atteint."},
                "nuisance_filter": {"description": "Filtre appliqué pour déterminer si une autre Entité peut être considérée comme une nuisance.", "$ref": "#/definitions/minecraft_filter-ref"},
                "on_increase_sounds": {"type": "array", "description": "Sons à jouer lorsque l'entité est provoquée, évalués dans l'ordre jusqu'à ce qu'une condition soit remplie.", "items": {"type": "object", "properties": {
                    "condition": {"type": "string", "description": "La condition Molang a remplir."},
                    "sound": {"type": "string", "description": "Le son à jouer."}
                }}},
                "remove_targets_below_angry_threshold": {"type": "boolean", "description": "Indique si l'entité doit retirer sa cible si le niveau de colère tombe en dessous du seuil de colère."}
            }},
            "minecraft:angry": {"type": "object", "description": "Définit l'état de colère d'une Entité en utilisant un miniteur. Ce component contrôle divers aspects du comportement de l'Entité lorsqu'elle est en colère, comme la diffusion de la colère à d'autres entités et les sons qu'elle émet.", "properties": {
                "angry_sound": {"type": "string", "description": "L'événement de son à jouer quand l'entité est en colère."},
                "broadcast_anger": {"type": "boolean", "description": "Si vrai, d'autres entités de la même définition dans le rayon de diffusion deviendront également en colère."},
                "broadcast_anger_on_attack": {"type": "boolean", "description": "Si vrai, d'autres entités de la même définition dans le rayon de diffusion deviendront également en colère chaque fois que cette entité attaque."},
                "broadcast_anger_on_being_attacked": {"type": "boolean", "description": "Si vrai, d'autres entités de la même définition dans le rayon de diffusion deviendront également en colère chaque fois que cette entité est attaquée."},
                "broadcast_anger_when_dying": {
                    "description": "Si False, lorsque cette Entité est tuée, elle ne propage pas sa colère aux autres entités de la même définition d'Entité dans le broadcastRange.",
                    "default": true,
                    "type": "boolean"
                },
                "broadcast_filters": {"description": "Conditions qui rendent cette entrée valide dans la liste.", "$ref": "#/definitions/minecraft_filter-ref"},
                "broadcast_range": {"type": "integer", "description": "Distance en blocs dans laquelle d'autres entités de la même définition deviendront en colère."},
                "broadcast_targets": {"type": "array", "description": "Une liste de familles d'entités auxquelles diffuser la colère.", "items": {"type": "string"}},
                "calm_event": {"description": "Evenement à executer après le nombre de secondes spécifiés dans la 'duration' qui expire (quand l'entité arrête d'être énervé).", "$ref": "#/definitions/trigger_event_parameters-ref"},
                "duration": {"type": "integer", "description": "Le temps en secondes pendant lequel l'entité restera en colère."},
                "duration_delta": {"type": "integer", "description": "Variance en secondes ajoutée à la durée (intervalle de [-delta, delta])."},
                "filters": {"description": "Filtrer les types de mobs qui ne doivent pas être attaqués pendant que l'entité est en colère.", "$ref": "#/definitions/minecraft_filter-ref"},
                "sound_interval": {"type": "array", "description": "Intervalle de temps en secondes à attendre avant de rejouer le son de colère.", "items": [{"type": "number"}, {"type": "number"}]}
            }},
            "minecraft:annotation.break_door": {"type": "object", "description": "Permet à une entité de casser des portes. Nécessite que le component 'minecraft:navigation.walk' ait le paramètre 'can_break_doors' défini sur True.", "properties": {
                "break_time": {"type": "number", "description": "Le temps en secondes nécessaire pour casser une porte."},
                "min_difficulty": {"type": "string", "description": "La difficulté minimale du monde pour que l'entité puisse casser des portes.", "enum": ["peaceful", "easy", "normal", "hard"]}
            }},
            "minecraft:annotation.open_door": {"type": "object", "description": "Donne la capacité à l'Entité à ouvrir des portes. Nécessite que le component 'minecraft:navigation.walk' ait le paramètre 'can_open_doors' défini sur True."},
            "minecraft:area_attack": {"type": "object", "description": "Infligee des dégâts aux entités se trouvant dans une certaine zone autour de l'Entité qui utilise ce component.", "properties": {
                "cause": {"type": "string", "description": "Le type de dommage appliqué aux entités dans la zone de dommage.", "enum": [
                    "all", "anvil", "attack", "block_explosion", "contact", "drowning", "entity_explosion", "fall", "falling_block", "fatal", "fire", "fire_tick", "fly_into_wall", 
                    "lava", "magic", "none", "override", "piston", "projectile", "self_destruct", "sonic_boom", "stalactite", "stalagmite", "starve", "suffocation", "thorns", 
                    "void", "wither"
                ]},
                "damage_cooldown": {"type": "number", "description": "Temps de recharge d'attaque (en secondes) selon la fréquence à laquelle l'Entité peut attaquer une cible."},
                "damage_per_tick": {"type": "integer", "description": "Le montant de dégâts par tick qui est appliqué aux entités qui entrent dans la range de dégâts."},
                "damage_range": {"type": "number", "description": "La distance auquel l'entité hostile doit être pour que les dégâts soient appliqués."},
                "entity_filter": {"description": "L'ensemble des entités qui sont valides pour leur appliquer les dégats de zone.", "$ref": "#/definitions/minecraft_filter-ref"},
                "play_attack_sound": {"type": "boolean", "description": "Si l'Entité doit jouer son son d'attaque quand il attaque une cible."}
            }},
            "minecraft:attack": {"type": "object", "description": "Définit les attaques de mêlée de l'Entité ainsi que tout effet supplémentaire appliqué lors de ces attaques.", "properties": {
                "damage": {"description": "La quantité minimale et maximale de dégâts infligés par l'attaque de mêlée. Une valeur négative peut soigner l'entité au lieu de la blesser.", "oneOf": [
                    {"type": "number"},
                    {"type": "array", "items": [{"type": "number"}, {"type": "number"}]}
                ]},
                "effect_duration": {"type": "number", "description": "La durée en secondes de l'effet de statut appliqué à l'entité attaqué."},
                "effect_name": {"type": "string", "description": "L'identifiant de l'effet de statut à appliquer à une entité attaquée par l'attaque de mêlée de l'Entité."}
            }},
            "minecraft:attack_cooldown": {"type": "object", "description": "Ajoute un temps de récupération (cooldown) à cet Entité pour empêcher celle-ci de tenter d'acquérir de nouvelles cibles d'attaque pendant une certaine période.", "properties": {
                "attack_cooldown_complete_event": {"description": " L'événement à exécuter lorsque le cooldown est terminé. Cet événement peut déclencher des actions supplémentaires une fois la période de cooldown écoulée.", "$ref": "#/definitions/minecraft_filter-ref"},
                "attack_cooldown_time": {"type": "array", "description": "La durée du cooldown en secondes. Peut être spécifiée comme un nombre unique ou une paire de nombres (minimum et maximum), définissant un intervalle de temps aléatoire.", "items": [{"type": "number"}, {"type": "number"}]}
            }},
            "minecraft:attack_damage": {"type": "object", "description": "Spécifie la quantité de dégâts infligés par l'Entité lorsqu'elle attaque.", "properties": {
                "value": {"type": "number"}
            }},
            "minecraft:balloonable": {"type": "object", "description": "Permet à l'Entité d'avoir un Ballon attaché à elle, et définit les conditions et les événements pour l'Entité quand elle est ballonnée.", "properties": {
                "soft_distance": {"type": "number", "description": "Distance en blocs où l'effet « ressort » soulève l'Entité."},
                "max_distance": {"type": "number", "description": "Distance en blocs où le ballon éclate."},
                "on_balloon": {"type": "string", "description": "L'Evenement à déclencher quand l'Entité est ballonnée."},
                "on_unballoon": {"type": "string", "description": "L'Evenement à déclencher quand le ballon est retiré de l'Entité."},
                "mass": {"type": "number", "description": "La masse que possède l'Entité lors du calcul des forces de traction du ballon."}
            }},
            "minecraft:barter": {"type": "object", "description": "Utilisé pour faire en sorte que l'Entité effectue un échange d'objet (barter) en déposant un objet aléatoire selon une table de butin définie.", "properties": {
                "barter_table": {"type": "string", "description": "Le chemin d'accès de la Loot Table."},
                "cooldown_after_being_attacked": {"type": "integer", "description": "Durée, en secondes, pendant laquelle l'Entité ne pourra pas effectuer d'échange après avoir été attaquée."}
            }},
            "minecraft:block_climber": {"type": "object", "description": "Permet à une entité de détecter et de se déplacer sur le bloc d'échafaudage"},
            "minecraft:block_sensor": {"type": "object", "description": "Permet à l'entité de déclencher un événement spécifié lorsqu'un bloc de la liste définie est cassé dans une certaine plage de détection.", "properties": {
                "on_break": {"type": "array", "description": "Contient les différents événements déclenchable.", "items": {"type": "object", "properties": {
                    "block_list": {"type": "array", "description": "Liste des blocs qui déclencherons l'evenement.","items": {"anyOf": [
                        {"type": "object", "properties": {
                            "name": {"type": "string", "description": "Le nom du Bloc."},
                            "states": {"type": "array", "items": {"type": "object"}, "description": "La paire état de Bloc et sa valeur."},
                            "tags": {"type": "string", "description": "Le tag de Bloc exprimé en Molang."}
                        }},
                        {"type": "string"}
                    ]}},
                    "on_block_broken": {"type": "string", "description": "L'evenement à déclencher."}
                }}},
                "sensor_radius": {"type": "number", "description": "Distance radiale maximale dans laquelle les blocs qui se cassent peuvent être détecté. Le rayon maximale est 32,0."},
                "sources": {"type": "array", "description": "Les sources de cassage de blocs pouvant déclencher ces événements."}
            }},
            "minecraft:body_rotation_blocked": {"type": "object", "description": "L'Entité ne fera plus pivoter visuellement son corps pour correspondre à la direction dans laquelle elle fait face."},
            "minecraft:boostable": {"type": "object", "description": "Définit les conditions et le comportement du boost pour l'Entité montable.", "properties": {
                "boost_items": {"type": "array", "description": "La liste des Items qui peuvent êtr utilisé pour booster l'Entité.", "items": {"type": "object", "properties": {
                    "damage": {"type": "integer", "description": "Le nombre de dégâts de durabilité que subira l'Item chaque fois qu'il sera utilisé."},
                    "item": {"type": "string", "description": "Le nom de l'Item utilisable."},
                    "replace_item": {"type": "string", "description": "L'Item obtenu une fois que l'Item utilisable n'a plus de durabilité."}
                }}},
                "duration": {"type": "number", "description": "La durée de temps de Boost."},
                "speed_multiplier": {"type": "number", "description": "Le multiplicateur de boost."}
            }},
            "minecraft:boss": {"type": "object", "description": "Rend l'Entité comme un Boss.", "properties": {
                "hud_range": {"type": "integer", "description": "La distance maxiamle en blocs auquelle la barre de vie de Boss sera affichée."},
                "name": {"type": "string", "description": "Le nom affiché au dessus de la barre de vie de Boss."},
                "should_darken_sky": {"type": "boolean", "description": "Définit si le ciel doit s'assombrir quand le Boss est proche."}
            }},
            "minecraft:break_blocks": {"type": "object", "description": "Définit quels blocs l'Entité peut casser quand il bouge.", "properties": {
                "breakable_blocks": {"type": "array", "description": "La liste des blocs cassables.", "items": {"anyOf": [
                    {"type": "object", "properties": {
                        "name": {"type": "string", "description": "Le nom du Bloc."},
                        "states": {"type": "array", "items": {"type": "object"}, "description": "La paire état de Bloc et sa valeur."},
                        "tags": {"type": "string", "description": "Le tag de Bloc exprimé en Molang."}
                    }},
                    {"type": "string"}
                ]}}
            }},
            "minecraft:breathable": {"type": "object", "description": "Définit les conditions dans lesquelles l'Entité peut respirer ou suffoquer dans certains blocs.", "properties": {
                "breathe_blocks": {"type": "array", "description": "La liste des blocs auquelles l'Entité peut respirer dedans.", "items": {"anyOf": [
                    {"type": "object", "properties": {
                        "name": {"type": "string", "description": "Le nom du Bloc."},
                        "states": {"type": "array", "items": {"type": "object"}, "description": "La paire état de Bloc et sa valeur."},
                        "tags": {"type": "string", "description": "Le tag de Bloc exprimé en Molang."}
                    }},
                    {"type": "string"}
                ]}},
                "breathes_air": {"type": "boolean", "description": "Définit si l'Entité peut respirer dans l'air."},
                "breathes_lava": {"type": "boolean", "description": "Définit si l'Entité peut respirer dans la lave."},
                "breathes_solids": {"type": "boolean", "description": "Définit si l'Entité peut respirer dans les blocs solides."},
                "breathes_water": {"type": "boolean", "description": "Définit si l'Entité peut respirer dans l'eau."},
                "generates_bubbles": {"type": "boolean", "description": "Définit si l'Entité génère des bulles visibles quand elle est dans l'eau."},
                "inhale_time": {"type": "number", "description": "Temps en secondes pour récupérer la respiration maximale."},
                "non_breathe_blocks": {"type": "array", "description": "La liste des blocs auquelles l'Entité peut respirer dedans.", "items": {"anyOf": [
                    {"type": "object", "properties": {
                        "name": {"type": "string", "description": "Le nom du Bloc."},
                        "states": {"type": "array", "items": {"type": "object"}, "description": "La paire état de Bloc et sa valeur."},
                        "tags": {"type": "string", "description": "Le tag de Bloc exprimé en Molang."}
                    }},
                    {"type": "string"}
                ]}},
                "suffocate_time": {"type": "number", "description": "Temps en secondes entre les dégâts de suffocation."},
                "total_supply": {"type": "integer", "description": "Durée en secondes pendant laquelle l'entité peut retenir sa respiration."}
            }},
            "minecraft:breedable": {"type": "object", "description": "Définit la manière dont une entité peut entrer dans l'état 'love'. Nécessite le component 'minecraft:behavior.breed' pour se reproduire.", "properties": {
                "allow_sitting": {"type": "boolean", "description": "Si 'True', l'Entité peut se reproduire en position assise."},
                "blend_attributes": {"type": "boolean", "description": "Si 'True', les attributs des parents se transmettent à leur progéniture lorsqu'ils se reproduisent."},
                "breed_cooldown": {"type": "number", "description": "Temps en secondes avant que l'Entité puisse se reproduire à nouveau."},
                "breed_items": {"type": "array", "description": "La liste des Items utilisables pour que l'Entité pass en état 'love'.", "items": {"type": "string"}},
                "breeds_with": {"type": "array", "description": "Les entités avec lesquelles l'Entité peut s'accoupler.", "items": {"type": "object", "properties": {
                    "baby_type": {"type": "string", "description": "Le type d'entité du bébé."},
                    "breed_event": {"description": "L'événement à executer quand l'Entité s'accouple.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                    "mate_type": {"type": "string", "description": "Le type d'entité avec laquelle l'Entité peut s'accoupler avec."}
                }}},
                "causes_pregnancy": {"type": "boolean", "description": "Si 'True', l'Entité deviendra enceinte au lieu de faire apparaitre un bébé."},
                "deny_parents_variant": {"type": "object", "description": "Détermine la probabilité que la progéniture de parents ayant la même variante ignore cette variante et adopte une variante aléatoire dans une plage définie.", "properties": {
                    "chance": {"type": "number", "description": "Représente le pourcentage de chances que la progéniture ignore la variante des parents lorsqu'ils ont la même variante."},
                    "max_variant": {"type": "integer", "description": "Maximum inclusif de la plage de variantes parmi lesquelles la progéniture peut choisir si elle rejette la variante des parents."},
                    "min_variant": {"type": "integer", "description": "Minimum inclusif de la plage de variantes parmi lesquelles la progéniture peut choisir si elle rejette la variante des parents."}
                }},
                "environment_requirements": {"type": "array", "description": "Spécifie les conditions environnementales nécessaires pour que l'Entité puisse entrer dans un état de 'love'.", "items": {"type": "object", "properties": {
                    "blocks": {"type": "array", "description": "Enumère les types de blocs qui doivent être présents à proximité de l'entité pour qu'elle puisse entrer dans l'état de 'love'.", "items": {"anyOf": [
                        {"type": "object", "properties": {
                            "name": {"type": "string", "description": "Le nom du Bloc."},
                            "states": {"type": "array", "items": {"type": "object"}, "description": "La paire état de Bloc et sa valeur."},
                            "tags": {"type": "string", "description": "Le tag de Bloc exprimé en Molang."}
                        }},
                        {"type": "string"}
                    ]}},
                    "count": {"type": "integer", "description": "Indique le nombre minimum de blocs requis parmi ceux spécifiés dans blocks qui doivent être présents à proximité de l'Entité pour déclencher l'état de 'love'."},
                    "radius": {"type": "integer", "description": "Spécifie le rayon de recherche autour du centre de l'Entité pour trouver les blocs requis. Le rayon est mesuré en blocs et est borné entre 0 et 16."}
                }}},
                "extra_baby_chance": {"type": "number", "description": "Chance que jusqu'à 16 bébés apparaissent entre 0,0 et 1,0, où 1,0 équivaut à 100 %."},
                "inherit_tamed": {"type": "boolean", "description": "Si 'True', les bébés seront automatiquement apprivoisé si leurs parents le sont."},
                "love_filters": {"description": "Les conditions de filtres à utiliser pour que l'Entité puissent tomber amoureux.", "$ref": "#/definitions/minecraft_filter-ref"},
                "mutation_factor": {"type": "object", "description": "Spécifie la probabilité que la progéniture n'hérite pas des variantes de ses parents et présente des mutations.", "properties": {
                    "color": {"type": "number", "description": "Probabilité, en pourcentage, qu'une mutation affecte la couleur de l'entité."},
                    "extra_baby_chance ": {"type": "number", "description": "Chance que jusqu'à 16 bébés apparaissent."},
                    "extra_variant": {"type": "number", "description": "Probabilité, en pourcentage, qu'une mutation affecte la variante supplémentaire de l'entité."},
                    "inherit_tamed": {"type": "boolean", "description": "Si 'True', les bébés seront automatiquement apprivoisé si leurs parents le sont."},
                    "variant ": {"type": "number", "description": "Probabilité, en pourcentage, qu'une mutation affecte la variante de l'entité."}
                }},
                "mutation_strategy": {"type": "string", "description": "Spécifie la stratégie utilisée pour muter les variantes et les variantes supplémentaires de la progéniture.", "enum": ["random", "none"]},
                "parent_centric_attribute_blending": {"type": "array", "description": "[EXPERIMENTALE] Liste des attribut (sous forme de components basiques) que le bébé bénéficiera de la fusion des attributs centrés sur les parents.", "items": {"type": "string"}},
                "random_extra_variant_mutation_interval": {"type": "array", "description": "Spécifie une plage de valeurs utilisées pour déterminer de manière aléatoire la variante supplémentaire pour le bébé.", "items": [{"type": "integer"}, {"type": "integer"}]},
                "random_variant_mutation_interval": {"type": "array", "description": "Spécifie une plage de valeurs utilisées pour déterminer de manière aléatoire la variante pour le bébé.", "items": [{"type": "integer"}, {"type": "integer"}]},
                "require_full_health": {"type": "boolean", "description": "Définit si l'Entité doit avoir tous les points de vie pour pouvoir s'accoupler."},
                "require_tame": {"type": "boolean", "description": "Définit si les Entités doivent être apprivoisé avant de pouvoir s'accoupler."},
                "transform_to_item": {"type": "string", "description": "L'Item d'accouplement sera transformé en cet Item spécifié quand l'interaction aura réussi."}
            }},
            "minecraft:bribeable": {"type": "object", "description": "Définit des paramètres pour que l'Entité puisse être soudoyée avec certains items, ce qui la met dans un état 'bribed' (soudoyé).", "properties": {
                "bribe_cooldown": {"type": "number", "description": "Temps en secondes avant que l'Entité puisse être soudoyée à nouveau après avoir été soudoyée une première fois."},
                "bribe_items": {"type": "array", "description": "Les Items pour soudoyer l'Entité.", "items": {"type": "string"}}
            }},
            "minecraft:buoyant": {"type": "object", "description": "Permet à l'Entité de flotter sur des blocs liquides spécifiés.", "properties": {
                "apply_gravity": {"type": "boolean", "description": "Indique si la gravité doit être appliquée à l'Entité chaque tick."},
                "base_buoyancy": {"type": "number", "description": "Définit la flottabilité de base utilisée pour calculer dans quelle mesure l'Entité flottera. Plus la flottabilité est élevée, plus l'entité flottera facilement."},
                "big_wave_probability": {"type": "number", "description": "La probabilité qu'une grande vague frappe l'Entité. Ce paramètre est utilisé uniquement si 'simulate_waves' est défini sur 'true'."},
                "big_wave_speed": {"type": "number", "description": "Le multiplicateur de vitesse pour créer une grande vague. Il est déclenché en fonction de 'big_wave_probability'."},
                "drag_down_on_buoyancy_removed": {"type": "number", "description": "Indique combien l'Entité sera entraînée vers le bas lorsque le component 'minecraft:buoyant' est supprimé."},
                "liquid_blocks": {"type": "array", "description": "Spécifie les blocs liquides sur lesquels l'Entité peut flotter.", "items": {"anyOf": [
                    {"type": "object", "properties": {
                        "name": {"type": "string", "description": "Le nom du Bloc."},
                        "states": {"type": "array", "items": {"type": "object"}, "description": "La paire état de Bloc et sa valeur."},
                        "tags": {"type": "string", "description": "Le tag de Bloc exprimé en Molang."}
                    }},
                    {"type": "string"}
                ]}},
                "simulate_waves": {"type": "boolean", "description": " Définit si le mouvement simule des vagues qui passent à travers."}
            }},
            "minecraft:burns_in_daylight": {"type": "object", "description": "Spécifie si l'Entité brule en contact su soleil."},
            "minecraft:can_climb": {"type": "object", "description": "Spécifie si l'Entité peut grimper aux échelles"},
            "minecraft:can_fly": {"type": "object", "description": "Permet à l'Entité de voler, ce qui signifie que son déplacement ne sera pas limité par la nécessité d'avoir un bloc solide en dessous pour le chemin de navigation."},
            "minecraft:can_join_raid": {"type": "object", "description": "Définit si cette Entité peut rejoindre un Raid."},
            "minecraft:can_power_jump": {"type": "object", "description": "Définit si cette Entité peut faire un saut puissant."},
            "minecraft:cannot_be_attacked": {
                "description": "Empêche les entités d'attaquer l'Entité propriétaire.",
                "type": "object"
            },
            "minecraft:celebrate_hunt": {"type": "object", "description": "Oblige l'Entité à célébrer lorsqu'elle chasse une entité spécifique.", "properties": {
                "broadcast": {"type": "boolean", "description": "Indique si la célébration doit être diffusée à d'autres entités dans le rayon spécifié."},
                "celeberation_targets": {"description": "La liste des conditions que la cible d'une chasse doit satisfaire pour initier la célébration.", "$ref": "#/definitions/minecraft_filter-ref"},
                "celebrate_sound": {"type": "string", "description": "Le son à jouer lors de la célébration."},
                "duration": {"type": "integer", "description": "La durée en secondes de la célébration."},
                "radius": {"type": "number", "description": "Si la diffusion est activée, spécifie le rayon dans lequel elle notifiera d'autres entités pour la célébration."},
                "sound_interval": {"type": "array", "description": "La plage de temps, en secondes, à attendre avant de rejouer le son. Il est spécifié par un intervalle minimum et maximum.", "items": [{"type": "integer"}, {"type": "integer"}]}
            }},
            "minecraft:collision_box": {"type": "object", "description": "Permet de définir la largeur et la hauteur de la boîte de collision de l'Entité.", "properties": {
                "height": {"type": "number", "description": "La hauteur."},
                "width": {"type": "number", "description": "La largeur."}
            }},
            "minecraft:color": {"type": "object", "description": "Définit la couleur de l'Entité. Fonctionne uniquement sur les entités vanilla qui possède des valeurs de couleurs prédéfinis.", "properties": {
                "value": {"type": "integer"}
            }},
            "minecraft:color2": {"type": "object", "description": "Définit la couleur secondaire de l'Entité. Fonctionne uniquement sur les entités vanilla qui possède des valeurs de couleurs prédéfinis.", "properties": {
                "value": {"type": "integer"}
            }},
            "minecraft:combat_regeneration": {"type": "object", "description": "Utilisé pour ajouter une régénération et enlever la fatigue minière à l'entité qui tue la cible d'attaque d'un Acteur.", "properties": {
                "apply_to_family": {"type": "boolean", "description": "Indique si les autres entités du même type (famille) recevront la régénération de combat lorsqu'elles tuent la cible."},
                "apply_to_self": {"type": "boolean", "description": "Indique si l'entité elle-même recevra la régénération de combat lorsqu'elle tue la cible."},
                "regeneration_duration": {"type": "integer", "description": "La durée en secondes pendant laquelle l'entité bénéficiera de la régénération de niveau I après avoir tué la cible."}
            }},
            "minecraft:conditional_bandwidth_optimization": {"type": "object", "description": "Utilisé pour définir les optimisations conditionnelles de la bande passante spatiale d'une entité.", "properties": {
                "conditional_values": {"type": "array", "description": "Ces valeurs sont appliquées dans des conditions spécifiques.", "items": {"type": "object", "properties": {
                    "conditional_values": {"type": "array", "description": "Les conditions sous formes de filtre d'entités.", "items": {"$ref": "#/definitions/minecraft_filter-ref"}},
                    "max_dropped_ticks": {"type": "integer", "description": "Détermine le nombre maximum de ticks pendant lesquels les paquets de mise à jour spatiale peuvent ne pas être envoyés."},
                    "max_optimized_distance": {"type": "integer", "description": "La distance maximale prise en compte pour les optimisations de la bande passante. Les valeurs inférieures à cette distance sont interpolées pour trouver une optimisation, tandis que les valeurs égales ou supérieures à cette distance entraînent une optimisation maximale."},
                    "use_motion_prediction_hints": {"type": "boolean", "description": "Lorsqu'il est activé (true), permet l'envoi de plus petits paquets de mouvement pendant les intervalles de suppression des paquets."}
                }}},
                "default_values": {"type": "object", "description": "Utilisées de manière générale, sans condition spécifique.", "properties": {
                    "max_dropped_ticks": {"type": "integer", "description": "Détermine le nombre maximum de ticks pendant lesquels les paquets de mise à jour spatiale peuvent ne pas être envoyés."},
                    "max_optimized_distance": {"type": "integer", "description": "La distance maximale prise en compte pour les optimisations de la bande passante. Les valeurs inférieures à cette distance sont interpolées pour trouver une optimisation, tandis que les valeurs égales ou supérieures à cette distance entraînent une optimisation maximale."},
                    "use_motion_prediction_hints": {"type": "boolean", "description": "Lorsqu'il est activé (true), permet l'envoi de plus petits paquets de mouvement pendant les intervalles de suppression des paquets."}
                }}
            }},
            "minecraft:custom_hit_test": {"type": "object", "description": "Utilisé pour définir une liste de zones de collision (hitboxes) pour les coups de mêlée et à distance contre l'Entité.", "properties": {
                "hitboxes": {"type": "array", "description": "Contenant une liste de hitboxes.", "items": {"type": "object", "properties": {
                    "height": {"type": "number", "description": "La hauteur de la hitbox en blocs. Si une valeur négative est spécifiée, elle sera considérée comme 0."},
                    "width": {"type": "number", "description": "La largeur de la hitbox en blocs. Si une valeur négative est spécifiée, elle sera considérée comme 0."},
                    "pivot": {"type": "array", "description": "Le décalage par rapport à l'ancrage de l'Entité où la hitbox apparaîtra.", "items": [{"type": "number"}, {"type": "number"}, {"type": "number"}]}
                }}}
            }},
            "minecraft:damage_over_time": {"type": "object", "description": "Utilisé pour infliger des dégâts à l'Entité de manière régulière, à des intervalles définis.", "properties": {
                "damage_per_hurt": {"type": "integer", "description": "Détermine la quantité de dégâts infligés à l'entité chaque fois que l'effet se déclenche."},
                "time_between_hurt": {"type": "number", "description": "Spécifie l'intervalle de temps, en secondes, entre chaque application de dégâts."}
            }},
            "minecraft:damage_sensor": {"type": "object", "description": "Permet de définir des actions spécifiques à déclencher lorsque l'Entité subit des dégâts causés par des entités ou des objets spécifiques.", "properties": {
                "triggers": {"type": "array", "description": "Liste de déclencheurs avec les événements à appeler lorsque l'Entité subit des dégâts spécifiques.", "items": {"type": "object", "properties": {
                    "cause": {"type": "string", "description": "Type de dégâts qui déclenche un événement.", "enum": [
                        "all", "anvil", "block_explosion", "contact", "drowning", "entity_attack", "entity_explosion", "fall", "falling_block", "fatal", "fire", "fire_tick", "fly_into_wall", 
                        "lava", "magic", "none", "override", "piston", "projectile", "self_destruct", "sonic_boom", "stalactite", "stalagmite", "starve", "suffocation", "thorns", 
                        "void", "wither"
                    ]},
                    "damage_modifier": {"type": "number", "description": "Modificateur de dégâts qui ajoute ou soustrait des dégâts de base de la cause de dommage. Ne réduit pas les dégâts en dessous de 0."},
                    "damage_multiplier": {"type": "number", "description": "Multiplicateur qui modifie les dégâts de base de la cause de dommage. Si 'deals_damage' est vrai, le multiplicateur ne peut réduire les dégâts à moins de 1."},
                    "deals_damage": {"type": "string", "description": "Définit commment les dégâts affectent l'Entité.", "enum": ["yes", "no", "no_but_side_effects_apply"]},
                    "on_damage": {"type": "object", "description": "Spécifie l'événement à executer lorsque les conditions sous forme de filtres d'entités sont valides.", "properties": {
                        "filters": {"description": "Les Filtres d'Entités servant de conditions.", "$ref": "#/definitions/minecraft_filter-ref"},
                        "event": {"type": "string", "description": "L'Evenement à déclencher."},
                        "target": {"type": "string", "description": "La cible qui subira l'Evenement.", "enum": ["block", "damager", "other", "parent", "player", "self", "target"]}
                    }},
                    "on_damage_sound_event": {"type": "string", "description": "Le son à jouer, lorsque les filtres 'on_damage' sont satisfaits."}
                }}}
            }},
            "minecraft:dash": {"type": "object", "description": "Permet à une entité montable d'effectuer un mouvement rapide appelé 'dash'.", "properties": {
                "cooldown_time": {"type": "number", "description": "Temps de récupération (en secondes) entre chaque dash."},
                "horizontal_momentum": {"type": "number", "description": "Momentum horizontal appliqué lors du dash. C'est une mesure de la force de déplacement latéral."},
                "vertical_momentum": {"type": "number", "description": "Momentum vertical appliqué lors du dash. Cela détermine la force de déplacement vers le haut ou vers le bas."}
            }},
            "minecraft:default_look_angle": {"type": "object", "description": "Permet de définir l'angle de rotation par défaut de la tête de l'Entité. Cela est utilisé pour spécifier la direction dans laquelle l'Entité regarde initialement.", "properties": {
                "value": {"type": "number"}
            }},
            "minecraft:despawn": {"type": "object", "description": "Permet de forcer l'Entité à disparaître lorsqu'un ensemble de règles de disparition ou des filtres optionnels sont évalués comme vrais.", "properties": {
                "despawn_from_chance": {"type": "boolean", "description": "Détermine si 'min_range_random_chance' est utilisé dans les règles de disparition standard."},
                "despawn_from_distance": {"type": "object", "description": "Spécifie si les distances minimale et maximale sont utilisées dans les règles de disparition standard.", "properties": {
                    "max_distance": {"type": "integer", "description": "La distance maximale pour que les règles de disparition standard fassent instantanément disparaître l'Entité."},
                    "min_distance": {"type": "integer", "description": "La distance minimale pour que les règles de disparition standard fassent instantanément disparaître l'Entité."}
                }},
                "despawn_from_inactivity": {"type": "boolean", "description": "Détermine si 'min_range_inactivity_timer' est utilisé dans les règles de disparition standard."},
                "despawn_from_simulation_edge": {"type": "boolean", "description": "Détermine si l'Entité est instantanément supprimée à la limite de la distance de simulation dans les règles de disparition standard."},
                "filters": {"description": "Une liste de conditions sous forme de filtres d'entités qui doivent être satisfaites avant que l'Entité ne disparaisse. Si un filtre est défini, les règles de disparition standard sont ignorées.", "$ref": "#/definitions/minecraft_filter-ref"},
                "min_range_inactivity_timer": {"type": "integer", "description": "Le nombre de secondes pendant lesquelles la créature doit être inactive avant de disparaître."},
                "min_range_random_chance": {"type": "integer", "description": "Une chance aléatoire entre 1 et la valeur donnée pour que l'Entité disparaisse."},
                "remove_child_entities": {"type": "boolean", "description": "S'il est vrai, fait disparaître toutes les entités liées à cette Entité dans une relation enfant (par exemple, les entités attachées par une laisse)."}
            }},
            "minecraft:dimension_bound": {"type": "object", "description": "Empêche l'entité de quitter la dimension auquelle elle s'y trouve."},
            "minecraft:drying_out_timer": {"type": "object", "description": "Permet de configurer un compte à rebours pour le séchage de l'Entité, initiant des événements spécifiques lorsque le séchage est terminé ou lorsque l'Entité entre en contact avec de l'eau ou de la pluie.", "properties": {
                "dried_out_event": {"type": "string", "description": "L'événement à initier lorsque le temps de séchage est terminé."},
                "recover_after_dried_out_event": {"type": "string", "description": "L'événement à initier lorsque l'Entité, déjà séchée, reçoit une augmentation de son approvisionnement en eau."},
                "stopped_drying_out_event": {"type": "string", "description": "L'événement à initier lorsque l'Entité arrête de se dessécher, par exemple, en entrant dans l'eau ou sous la pluie."},
                "total_time": {"type": "number", "description": "Temps total, en secondes, nécessaire pour que l'Entité se dessèche complètement."},
                "water_bottle_refill_time": {"type": "number", "description": "Temps additionnel, en secondes, accordé en utilisant une bouteille d'eau sur l'Entité."}
            }},
            "minecraft:dweller": {"type": "object", "description": "Permet à l'Entité de rejoindre et de migrer entre les villages et autres types de demeures.", "properties": {
                "dwelling_type": {"type": "string", "description": "Le type de demeure que l'Entité souhaite rejoindre.", "enum": ["village"]},
                "dweller_role": {"type": "string", "description": "Le rôle que l'Entité joue dans la demeure.", "enum": ["inhabitant", "defender", "hostile", "passive"]},
                "update_interval_base": {"type": "number", "description": "Fréquence à laquelle l'Entité vérifie son statut de demeure, en ticks."},
                "update_interval_variant": {"type": "number", "description": "Variante en ticks qui sera ajoutée à 'update_interval_base'."},
                "can_find_poi": {"type": "boolean", "description": "Détermine si l'Entité peut trouver et ajouter des POI à la demeure."},
                "first_founding_reward": {"type": "integer", "description": "Détermine combien de réputation les joueurs gagnent lors de la première fondation."},
                "can_migrate": {"type": "boolean", "description": "Détermine si l'Entité peut migrer entre les demeures ou seulement avoir sa demeure initiale."},
                "dwelling_bounds_tolerance": {"type": "number", "description": "Distance de tolérance pour vérifier si l'entité est à l'intérieur de la demeure."},
                "preferred_profession": {"type": "string", "description": "Permet de définir une profession de départ pour cet habitant particulier, au lieu de le laisser choisir de manière organique. (Ils doivent toujours acquérir de l'expérience grâce au commerce avant que cela ne prenne effet)."}
            }},
            "minecraft:economy_trade_table": {"type": "object", "description": "Permet de définir la capacité de l'Entité à commercer avec les joueurs.", "properties": {
                "convert_trades_economy": {"type": "boolean", "description": "Détermine si, lors de la transformation de l'entité, les échanges doivent être convertis si la nouvelle entité a également une 'economy_trade_table'. Les échanges seront recréés avec la nouvelle table de commerce, mais essayeront de conserver les mêmes enchantements et données utilisateur."},
                "cured_discount": {"type": "array", "description": "Le montant de la réduction appliquée lorsque le joueur a guéri un villageois zombie.", "items": [{"type": "integer"}, {"type": "integer"}]},
                "display_name": {"type": "string", "description": "Le nom à afficher lors du commerce avec l'Entité."},
                "hero_demand_discount": {"type": "integer", "description": "Utilisé dans les prix hérités pour déterminer le montant de la réduction lorsque le joueur a l'effet 'Héros du Village'."},
                "max_cured_discount": {"type": "array", "description": "La réduction maximale appliquée lorsque le joueur a guéri un villageois zombie.", "items": [{"type": "integer"}, {"type": "integer"}]},
                "max_nearby_cured_discount": {"type": "integer", "description": "La réduction maximale appliquée lorsque le joueur a guéri un villageois zombie à proximité."},
                "nearby_cured_discount": {"type": "integer", "description": "Le montant de la réduction appliquée lorsque le joueur a guéri un villageois zombie à proximité."},
                "new_screen": {"type": "boolean", "description": "Détermine si le commerce avec l'entité ouvre le nouvel écran de commerce."},
                "persist_trades": {"type": "boolean", "description": "Détermine si les échanges doivent persister lorsque l'Entité se transforme. Cela permet de conserver les échanges lors des transformations futures vers une entité avec une table de commerce."},
                "show_trade_screen": {"type": "boolean", "description": "Affiche un écran de commerce en jeu lors de l'interaction avec l'Entité."},
                "table": {"type": "string", "description": "Le chemin d'accès à la table de Trading."},
                "use_legacy_price_formula": {"type": "boolean", "description": "Détermine si l'ancienne formule de calcul des prix est utilisée."}
            }},
            "minecraft:entity_sensor": {"type": "object", "description": "Permet à l'Entité de posséder plusieurs sous-capteurs, chacun déclenchant un événement lorsqu'un ensemble de conditions est rempli par d'autres entités dans la plage définie.", "properties": {
                "relative_range": {"type": "boolean", "description": "Si vrai, la portée des sous-capteurs est additive par rapport à la taille de l'Entité."},
                "subsensors": {"type": "array", "description": "La liste des sous-capteurs qui détectent les entités et émettent des événements lorsque toutes leurs conditions sont remplies.", "items": {"type": "object", "properties": {
                    "cooldown": {"type": "number", "description": "Combien de secondes doivent s'écouler avant que le sous-capteur puisse à nouveau détecter des entités. Le cooldown s'applique en plus du délai de base d'une tick (0.05 secondes). Les valeurs négatives signifient qu'aucun cooldown n'est utilisé."},
                    "event": {"type": "string", "description": "L'événement à déclencher lorsque les conditions sont remplis."},
                    "event_filters": {"description": "L'ensemble des conditions qui doivent être satisfaites pour déclencher l'événement.", "$ref": "#/definitions/minecraft_filter-ref"},
                    "maximum_count": {"type": "integer", "description": "Le nombre maximum d'entités qui doivent remplir les conditions de filtres."},
                    "minimum_count": {"type": "integer", "description": "Le nombre minimum d'entités qui doivent remplir les conditions de filtres."},
                    "range": {"type": "array", "description": " La distance horizontale et verticale maximale à laquelle une autre entité peut se trouver par rapport à cette entité pour que les filtres soient vérifiés contre elle.", "items": [{"type": "number"}, {"type": "number"}]},
                    "require_all": {"type": "boolean", "description": "Si vrai, nécessite que toutes les entités proches remplissent les conditions du filtre pour que l'événement soit envoyé."}
                }}}
            }},
            "minecraft:environment_sensor": {"type": "object", "description": "Permet de créer des déclencheurs basés sur les conditions environnementales.", "properties": {
                "triggers": {"description": "La liste des déclencheurs qui s'initient lorsque les conditions environnementales correspondent aux critères de filtre donnés.", "oneOf": [
                    {"type": "array", "items": {"type": "object", "properties": {
                        "filters": {"description": "L'ensemble des conditions qui doivent être satisfaites pour déclencher l'événement.", "$ref": "#/definitions/minecraft_filter-ref"},
                        "event": {"type": "string", "description": "L'Evenement à déclencher."},
                        "target": {"type": "string", "description": "La cible qui subira l'Evenement.", "enum": ["block", "damager", "other", "parent", "player", "self", "target"]}
                    }}},
                    {"type": "object", "properties": {
                        "filters": {"description": "L'ensemble des conditions qui doivent être satisfaites pour déclencher l'événement.", "$ref": "#/definitions/minecraft_filter-ref"},
                        "event": {"type": "string", "description": "L'Evenement à déclencher."},
                        "target": {"type": "string", "description": "La cible qui subira l'Evenement.", "enum": ["block", "damager", "other", "parent", "player", "self", "target"]}
                    }}
                ]}
            }},
            "minecraft:equip_item": {"type": "object", "description": "Utilisé pour forcer l'Entité à s'équiper d'un équipement spécifique.", "properties": {
                "excluded_items": {"type": "array", "description": "Liste d'items que l'Entité ne doit pas équiper.", "items": {"type": "string"}}
            }},
            "minecraft:equipment": {"type": "object", "description": "Utilisé pour définir l'équipement que l'Entité doit utiliser.", "properties": {
                "slot_drop_chance": {"type": "array", "description": "Spécifie les slots d'équipement et la chance que l'objet équipé dans ce slot soit lâché lorsque l'Entité meurt.", "items": {"type": "object", "properties": {
                    "slot": {"type": "string", "description": "Le nom du slot d'équipement.", "enum": [
                        "slot.weapon.mainhand", "slot.weapon.offhand", "slot.armor.head", "slot.armor.chest", "slot.armor.legs", "slot.armor.feet", "slot.hotbar", 
                        "slot.inventory", "slot.enderchest", "slot.saddle", "slot.armor", "slot.chest", "slot.equippable"
                    ]},
                    "drop_chance": {"type": "number", "description": "La probabilité que l'Item soit lâché, entre 0.0 (aucune chance) et 1.0 (100% de chance)."}
                }}},
                "table": {"type": "string", "description": "Spécifie le chemin du fichier de la loot_table d'équipement."}
            }},
            "minecraft:equippable": {"type": "object", "description": "Permet de définir le comportement de l'Entité lorsqu'elle peut être équipée avec des items spécifiques.", "properties": {
                "slots": {"type": "array", "description": "Liste de slots, chaque slot ayant plusieurs propriétés pour spécifier quel Item peut être équipé et les événements qui se déclenchent lors de l'équipement ou du déséquipement de cet objet.", "items": {"type": "object", "properties": {
                    "accepted_items": {"type": "array", "description": "Liste des Items qui peuvent être mis dans ce Slot.", "items": {"type": "string"}},
                    "interact_text": {"type": "string", "description": "Le texte affiché pour les contrôles à écran tactile lorsque l'Entité peut être équipée avec cet objet."},
                    "item": {"type": "string", "description": "L'identifiant de l'item qui peut être équipé dans ce slot."},
                    "on_equip": {"type": "object", "description": "L'événement à déclencher lorsque l'Entité est équipée avec l'Item.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                    "on_unequip": {"type": "object", "description": "L'événement à déclencher lorsque l'Item est retiré du slot.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                    "slot": {"type": "integer", "description": "Le numméro du slot."}
                }}}
            }},
            "minecraft:exhaustion_values": {"type": "object", "description": "Utilisé pour définir la quantité d'épuisement appliquée à un joueur pour chaque action effectuée.", "properties": {
                "attack": {"type": "number", "description": "Quantité d'épuisement appliquée lorsque le joueur attaque."},
                "damage": {"type": "number", "description": "Quantité d'épuisement appliquée lorsque le joueur subit des dégâts."},
                "heal": {"type": "number", "description": "Quantité d'épuisement appliquée lorsque le joueur est soigné par régénération via la nourriture."},
                "jump": {"type": "number", "description": "Quantité d'épuisement appliquée lorsque le joueur saute."},
                "mine": {"type": "number", "description": "Quantité d'épuisement appliquée lorsque le joueur mine."},
                "sprint": {"type": "number", "description": "Quantité d'épuisement appliquée lorsque le joueur sprinte."},
                "sprint_jump": {"type": "number", "description": "Quantité d'épuisement appliquée lorsque le joueur sprinte en sautant."},
                "swim": {"type": "number", "description": "Quantité d'épuisement appliquée lorsque le joueur nage."},
                "walk": {"type": "number", "description": "Quantité d'épuisement appliquée lorsque le joueur marche."}
            }},
            "minecraft:experience_reward": {"type": "object", "description": "Définit la quantité d'expérience que l'Entité récompense lorsqu'elle meurt ou lorsqu'elle est reproduite avec succès.", "properties": {
                "on_bred": {"description": "La quantité d'expérience récompensée lorsque l'Entité est reproduite avec succès.", "anyOf": [
                    {"type": "string"},
                    {"type": "number"}
                ]},
                "on_death": {"description": "La quantité d'expérience récompensée lorsque l'Entité meurt.", "anyOf": [
                    {"type": "string"},
                    {"type": "number"}
                ]}
            }},
            "minecraft:explode": {"type": "object", "description": "Utilisé pour définir comment l'Entité explose.", "properties": {
                "allow_underwater": {"type": "boolean", "description": "Si 'true', l'explosion affectera les blocs et les entités sous l'eau."},
                "breaks_blocks": {"type": "boolean", "description": "Si 'true', l'explosion détruira les blocs dans le rayon d'explosion."},
                "causes_fire": {"type": "boolean", "description": "Si 'true', les blocs dans le rayon de l'explosion seront enflammés."},
                "damage_scaling": {"type": "number", "description": "Définit un facteur de mise à l'échelle appliqué aux dégâts de l'explosion infligés aux entités. (Une valeur de 0 emmpêche les dégâts d'être infligés aux entités, deqs valeurs négatives soignent les entités.)"},
                "destroy_affected_by_griefing": {"type": "boolean", "description": "Si 'true', la capacité de l'explosion à détruire les blocs sera affectée par la règle de jeu 'mob_griefing'."},
                "fire_affected_by_griefing": {"type": "boolean", "description": "Si 'true', la capacité de l'explosion à provoquer des incendies sera affectée par la règle de jeu 'mob_griefing'."},
                "fuse_length": {"type": "array", "description": "La plage de temps aléatoire pendant laquelle la mèche sera allumée avant d'exploser ; une valeur négative signifie que l'explosion est immédiate.", "items": [{"type": "number"}, {"type": "number"}]},
                "fuse_lit": {"type": "boolean", "description": "Si 'true', la mèche est déjà allumée lorsque ce component est ajouté à l'Entité."},
                "knockback_scaling": {"type": "number", "description": "Définit un facteur de mise à l'échelle appliqué à la force de recul causée par l'explosion."},
                "max_resistance": {"description": "La résistance maximale des blocs face à l'explosion.", "anyOf": [
                    {"type": "number"},
                    {"type": "string", "const": "infinite"}
                ]},
                "negates_fall_damage": {"type": "boolean", "description": "Défoinit si l'explosion doit annuler les dégâts de chute pour les joueurs qui se trouvent au-dessus du point de collision de l'explosion."},
                "particle_effect": {"type": "string", "description": "Définit l'effet de particule qui sera utilisé lors de l'explosion.", "enum": ["wind_burst", "breeze_wind_burst"]},
                "power": {"type": "number", "description": "Le rayon de l'explosion en blocs et la quantité de dégâts infligés par l'explosion."},
                "sound_effect": {"type": "string", "description": "Le son joué lors de l'explosion."},
                "toggles_blocks": {"type": "boolean", "description": "Si 'true', les blocs dans le rayon de l'explosion seront inversés ou basculés."}
            }},
            "minecraft:fire_immune": {"type": "object", "description": "Définit que cette Entité ne subit pas de dégâts de feu."},
            "minecraft:floats_in_liquid": {"type": "object", "description": "Définit que cette Entité peut flotter dans des blocs liquides."},
            "minecraft:flocking": {"type": "object", "description": "Utilisé pour gérer le comportement de l'Entité en termes de regroupement, particulièrement dans les environnements aquatiques.", "properties": {
                "block_distance": {"type": "number", "description": "Distance en blocs que l'Entité regardera et dont elle se déplacera. Par exemple, si une entité doit éviter certains blocs, ce paramètre définit à quelle distance elle commence à réagir."},
                "block_weight": {"type": "number", "description": "Poids de l'évitement des blocs. Plus le poids est élevé, plus l'Entité sera poussée loin des blocs définis par 'block_distance'."},
                "breach_influence": {"type": "number", "description": "Influence de la poussée exercée sur l'Entité qui sort de l'eau. Ce paramètre aide à ramener les entités dans l'eau si elles en sortent."},
                "cohesion_threshold": {"type": "number", "description": "Seuil à partir duquel la cohésion commence à s'appliquer. La cohésion est le comportement qui maintient les entités ensemble en groupe."},
                "cohesion_weight": {"type": "number", "description": "Poids appliqué pour la direction de cohésion du groupe. Plus le poids est élevé, plus les entités auront tendance à rester proches les unes des autres."},
                "goal_weight": {"type": "number", "description": "Poids appliqué à l'objectif final ou à la destination que le groupe de l'Entité vise."},
                "high_flock_limit": {"type": "integer", "description": "Nombre maximum d'entités autorisées dans un groupe. Cela permet de limiter la taille du groupe."},
                "in_water": {"type": "boolean", "description": "Indique si l'Entité se trouve dans l'eau. Cela influence divers comportements, notamment pour les entités aquatiques comme les poissons."},
                "influence_radius": {"type": "number", "description": "Rayon d'influence autour de l'Entité dans lequel d'autres entités peuvent être ajoutées au groupe."},
                "inner_cohesion_threshold": {"type": "number", "description": "Distance à partir de laquelle l'Entité arrête d'appliquer la cohésion. Cela permet de maintenir une distance minimale entre les entités."},
                "loner_chance": {"type": "number", "description": "Pourcentage de chance que l'Entité décide de ne pas rejoindre un groupe. Les valeurs valides sont comprises entre 0 et 1."},
                "low_flock_limit": {"type": "integer", "description": "Nombre minimum d'entités autorisées dans un groupe. Cela permet de définir la taille minimale d'un groupe."},
                "match_variants": {"type": "boolean", "description": " Indique si les entités doivent correspondre aux variantes similaires (comme les couleurs ou les marques) pour se regrouper."},
                "max_height": {"type": "number", "description": "Hauteur maximale autorisée dans l'air ou dans l'eau pour le mouvement des entités."},
                "min_height": {"type": "number", "description": "Hauteur minimale autorisée dans l'air ou dans l'eau pour le mouvement des entités."},
                "separation_threshold": {"type": "number", "description": "Distance jugée trop proche d'une autre entité, à partir de laquelle la séparation commence à s'appliquer. Cela empêche les entités de se chevaucher."},
                "separation_weight": {"type": "number", "description": "Poids appliqué pour la séparation du groupe. Plus le poids est élevé, plus les entités essaieront de se séparer lorsqu'elles seront trop proches."},
                "use_center_of_mass": {"type": "boolean", "description": "Indique si les entités doivent suivre le centre de masse du groupe, ce qui peut influencer la direction du mouvement du groupe."}
            }},
            "minecraft:flying_speed": {"type": "object", "description": "Utilisé pour définir la vitesse à laquelle l'Entité vole, exprimée en blocs par tick.", "properties": {
                "value": {"type": "number", "description": "La vitesse en bloc par tick."}
            }},
            "minecraft:follow_range": {"type": "object", "description": "Utilisé pour définir la portée à laquelle l'Entité poursuivra une cible.", "properties": {
                "value": {"type": "integer", "description": "La portée en blocs dans laquelle l'Entité tentera de rester autour de la cible. C'est un entier qui définit le rayon de la zone dans laquelle l'Entité suivra sa cible."},
                "max": {"type": "integer", "description": "Distance maximale en blocs que l'Entité parcourra pour suivre sa cible. Si ce paramètre n'est pas défini, il prendra par défaut la même valeur que 'value'."}
            }},
            "minecraft:friction_modifier": {"type": "object", "description": "Utilisé pour définir l'effet de la friction sur l'Entité.", "properties": {
                "value": {"type": "number", "description": ""}
            }},
            "minecraft:game_event_movement_tracking": {"type": "object", "description": "Utilisé pour déterminer les types d'événements de mouvement que l'Entité doit émettre en fonction du bloc à travers lequel elle se déplace. Ce component est ajouté par défaut à chaque mob, mais il peut être ajouté de nouveau pour remplacer son comportement par défaut.", "properties": {
                "emit_flap": {"type": "boolean", "description": "L'événement de mouvement 'flap' sera émis lorsque l'Entité se déplace dans l'air."},
                "emit_move": {"type": "boolean", "description": "L'événement de mouvement 'entityMove' sera émis lorsque l'Entité se déplace sur le sol ou à travers un solide."},
                "emit_swim": {"type": "boolean", "description": "L'événement de mouvement 'swin' sera émis lorsque l'Entité se déplace dans un liquide."}
            }},
            "minecraft:genetics": {"type": "object", "description": "Permet de définir comment les gènes et les allèles d'un mob sont transmis à sa progéniture et comment ces traits se manifestent chez l'enfant.", "properties": {
                "genes": {"type": "array", "description": "La liste des gènes que cette Entité possède et croisera avec un partenaire lors de la reproduction.", "items": {"type": "object", "properties": {
                    "allele_range": {"description": "La plage des valeurs d'allèles positifs pour ce gène. Les mobs engendrés auront un nombre aléatoire dans cette plage assigné à eux.", "anyOf": [
                        {"type": "object", "properties": {
                            "range_max": {"type": "integer"},
                            "range_min": {"type": "integer"}
                        }},
                        {"type": "integer"}
                    ]},
                    "genetic_variants": {"type": "array", "description": "Liste des variantes génétiques pour ce gène. Ces variantes vérifient des combinaisons particulières d'allèles et déclenchent des événements lorsque toutes les conditions sont satisfaites.", "items": {"type": "object", "properties": {
                        "birth_event": {"description": "Événement à exécuter lorsque ce mob est créé et correspond aux conditions d'allèle.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                        "both_allele": {"type": "integer", "description": "Si cette valeur est non-négative, comparer les allèles principaux et cachés du mob avec cette valeur pour une correspondance avec les deux. Peut aussi être une plage d'entiers."},
                        "either_allele": {"type": "integer", "description": "Si cette valeur est non-négative, comparer les allèles principaux et cachés du mob avec cette valeur pour une correspondance avec l'un ou l'autre. Peut aussi être une plage d'entiers."},
                        "hidden_allele": {"type": "integer", "description": "Si cette valeur est non-négative, comparer l'allèle caché du mob avec cette valeur pour une correspondance. Peut aussi être une plage d'entiers."},
                        "main_allele": {"type": "integer", "description": "Si cette valeur est non-négative, comparer l'allèle principal du mob avec cette valeur pour une correspondance. Peut aussi être une plage d'entiers."},
                        "mutation_rate": {"type": "number", "description": "Si cette valeur est non-négative, remplace la chance pour ce gène qu'un allèle soit remplacé par un allèle aléatoire au lieu de l'allèle du parent lors de la naissance. Les valeurs non-négatives supérieures à 1 seront traitées comme 1."}
                    }}},
                    "mutation_rate": {"type": "number", "description": "Si cette valeur est non-négative, remplace la chance pour ce gène qu'un allèle soit remplacé par un allèle aléatoire au lieu de l'allèle du parent lors de la naissance. Les valeurs non-négatives supérieures à 1 seront traitées comme 1."},
                    "name": {"type": "string", "description": "Le nom de ce gène."}
                }}},
                "mutation_rate": {"type": "number", "description": "La probabilité qu'un allèle soit remplacé par un allèle aléatoire au lieu de l'allèle du parent lors de la naissance."},
                "use_simplified_breeding": {"type": "boolean", "description": "Si activé, cette option empêche l'héritage des allèles cachés des parents en tant qu'allèles principaux chez les enfants et vice versa, permettant une logique de reproduction simplifiée."}
            }},
            "minecraft:giveable": {"type": "object", "description": "Permet à l'Entité de recevoir des items spécifiques de la part du joueur, déclenchant des événements associés lorsque les conditions sont remplies.", "properties": {
                "triggers": {"type": "array", "description": "Tous les déclencheurs.", "items": {"type": "object", "properties": {
                    "cooldown": {"type": "number", "description": "Temps de recharge optionnel en secondes pour éviter les interactions répétitives."},
                    "items": {"type": "array", "description": "La liste des items pouvant être donnés à l'Entité pour être placés dans son inventaire.", "items": {"type": "string"}},
                    "on_give": {"description": "Événement à initier lorsque l'item correct est donné à l'Entité.", "$ref": "#/definitions/trigger_event_parameters-ref"}
                }}}
            }},
            "minecraft:ground_offset": {"type": "object", "description": "Permet de définir l'écart entre l'Entité et le sol sur lequel elle se trouve.", "properties": {
                "value": {"type": "number"}
            }},
            "minecraft:group_size": {"type": "object", "description": "Utilisé pour suivre la taille du groupe d'entités dans un certain rayon autour de l'Entité centrale.", "properties": {
                "filters": {"description": "La liste des conditions qui doivent être satisfaites pour que d'autres entités soient comptées dans la taille du groupe.", "$ref": "#/definitions/minecraft_filter-ref"},
                "radius": {"type": "number", "description": "Rayon autour de l'Entité centrale dans lequel les autres entités sont comptées pour déterminer la taille du groupe."}
            }},
            "minecraft:grows_crop": {"type": "object", "description": "Permet d'accélérer la croissance des cultures lorsque l'Entité marche dessus.", "properties": {
                "chance": {"type": "number", "description": "Une valeur entre 0 et 1 qui représente la probabilité de succès par tick pour que l'entité accélère la croissance de la culture lorsqu'elle marche dessus."},
                "charges": {"type": "integer", "description": "Le nombre de charges disponibles pour cette capacité. Chaque fois que l'Entité marche sur une culture et tente de la faire pousser, une charge est utilisée. Une fois que toutes les charges sont épuisées, l'effet ne se produira plus."}
            }},
            "minecraft:healable": {"type": "object", "description": "Permet de définir les interactions qui peuvent soigner l'Entité.", "properties": {
                "filters": {"description": "Groupe de filtres qui définissent les conditions pour utiliser cet item pour soigner l'Entité.", "$ref": "#/definitions/minecraft_filter-ref"},
                "force_use": {"type": "boolean", "description": "Détermine si un item peut être utilisé pour soigner l'Entité, même si celle-ci est en pleine santé."},
                "items": {"type": "array", "description": "Items qui peuvent être utilisés pour soigner l'Entité.", "items": {"type": "object", "properties": {
                    "heal_amount": {"type": "integer", "description": "Le nombre de PV que l'Item soigne à l'Entité."},
                    "item": {"type": "string", "description": "L'Item."}
                }}}
            }},
            "minecraft:health": {"type": "object", "description": "Definit le nombre de PV de l'Entité.", "properties": {
                "max": {"type": "integer", "description": "Le Maximum de PV de l'Entité."},
                "value": {"description": "Le nombre de PV par défaut de l'Entité.", "anyOf": [
                    {"type": "integer"},
                    {"type": "object", "properties": {
                        "range_max": {"type": "integer"},
                        "range_min": {"type": "integer"}
                    }}
                ]}
            }},
            "minecraft:heartbeat": {"type": "object", "description": "Permet de jouer un son de battement de cœur à des intervalles spécifiques", "properties": {
                "interval": {"description": "L'intervalle entre les battements en secondes. Une valeur de zéro ou moins signifie qu'il n'y a pas de battement de cœur.", "anyOf": [
                    {"type": "number"},
                    {"type": "string"}
                ]},
                "sound_event": {"type": "string", "description": "Le son à jouer en tant que battement de coeur."}
            }},
            "minecraft:hide": {"type": "object", "description": "Utilisé pour inciter l'Entité à se déplacer et à se cacher à son Point d'Intérêt (POI) possédé ou au plus proche disponible."},
            "minecraft:home": {"type": "object", "description": "Permet de définir un point de référence (home) pour l'Entité lorsqu'elle est apparue.", "properties": {
                "home_block_list": {"type": "array", "description": "Blocs que la position de la maison doit contenir. Si aucun des blocs listés n'existe plus à cette position, la restriction de maison est supprimée.", "items": {"anyOf": [
                    {"type": "object", "properties": {
                        "name": {"type": "string", "description": "Le nom du Bloc."},
                        "states": {"type": "array", "items": {"type": "object"}, "description": "La paire état de Bloc et sa valeur."},
                        "tags": {"type": "string", "description": "Le tag de Bloc exprimé en Molang."}
                    }},
                    {"type": "string"}
                ]}},
                "restriction_radius": {"type": "number", "description": "Rayon autour de la maison auquel l'entité sera restreinte. Une valeur de -1 signifie qu'il n'y a pas de restriction de rayon."},
                "restriction_type": {"type": "string", "description": "Détermine comment l'Entité est restreinte dans ses déplacements autour de sa position d'origine.", "enum": ["none", "random_movement", "all_movement"]}
            }},
            "minecraft:horse.jump_strength": {"type": "object", "description": "Détermine la hauteur de saut pour un cheval ou une entité similaire.", "properties": {
                "value": {"description": "La force de saut que l'entité possède lorsqu'elle apparaît.", "anyOf": [
                    {"type": "number"},
                    {"type": "object", "properties": {
                        "range_min": {"type": "number"},
                        "range_max": {"type": "number"}
                    }}
                ]}
            }},
            "minecraft:hurt_on_condition": {"type": "object", "description": "Permet de définir un ensemble de conditions sous lesquelles l'Entité devrait subir des dégâts.", "properties": {
                "damage_conditions": {"type": "array", "description": "Liste des conditions de dégâts qui, lorsqu'elles sont remplies, peuvent causer des dégâts à l'entité.", "items": {"type": "object", "properties": {
                    "filters": {"description": "Filtre utilisé pour tester les conditions spécifiques.", "$ref": "#/definitions/minecraft_filter-ref"},
                    "cause": {"type": "string", "description": "Le type de dommage causé à l'Entité.", "enum": [
                        "all", "anvil", "block_explosion", "contact", "drowning", "entity_attack", "entity_explosion", "fall", "falling_block", "fatal", "fire", "fire_tick", "fly_into_wall", 
                        "lava", "magic", "none", "override", "piston", "projectile", "self_destruct", "sonic_boom", "stalactite", "stalagmite", "starve", "suffocation", "thorns", 
                        "void", "wither"
                    ]},
                    "damage_per_tick": {"type": "integer", "description": "Montant de dégâts infligés à chaque tick lorsque les conditions sont remplies."}
                }}}
            }},
            "minecraft:ignore_cannot_be_attacked": {
                "description": "Empêche les entités d'attaquer l'entité propriétaire à moins qu'elles n'aient le composant",
                "filters": {
                    "description": "Filtre utilisé pour tester les conditions spécifiques.",
                    "$ref": "#/definitions/minecraft_filter-ref"
                }
            },
            "minecraft:input_ground_controlled": {"type": "object", "description": "Permet à l'Entité d'être contrôlée par le joueur en utilisant les touches WASD (ou les équivalents de direction sur d'autres dispositifs)."},
            "minecraft:inside_block_notifier": {"type": "object", "description": "Permet de déclencher un événement quand l'Entité rentre et sort dans le bloc spécifié.", "properties": {
                "block_list": {"type": "array", "description": "La liste des Blocs avec événements.", "items": {"type": "object", "properties": {
                    "block": {"description": "Le Bloc.", "anyOf": [
                        {"type": "object", "properties": {
                            "name": {"type": "string", "description": "Le nom du Bloc."},
                            "states": {"type": "array", "items": {"type": "object"}, "description": "La paire état de Bloc et sa valeur."},
                            "tags": {"type": "string", "description": "Le tag de Bloc exprimé en Molang."}
                        }},
                        {"type": "string"}
                    ]},
                    "entered_block_event": {"description": "L'événement à executer quand l'Entité rentre dans le bloc.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                    "exited_block_event": {"description": "L'événement à executer quand l'Entité sort de ce bloc.", "$ref": "#/definitions/trigger_event_parameters-ref"}
                }}}
            }},
            "minecraft:insomnia": {"type": "object", "description": "Utilisé pour gérer le temps écoulé depuis la dernière fois que l'Entité (comme un joueur) s'est reposée afin de déterminer si des fantômes (phantoms) doivent apparaître.", "properties": {
                "days_until_insomnia": {"type": "number", "description": "Le nombre de jours pendant lesquels l'Entité doit rester éveillée avant que l'effet d'insomnie ne commence."}
            }},
            "minecraft:instant_despawn": {"type": "object", "description": "Utilisé pour faire disparaitre immédiatement l'Entité du jeu sans délai supplémentaire.", "properties": {
                "remove_child_entities": {"type": "boolean", "description": "Toutes les entités liées à cette Entité dans une relation parent-enfant (par exemple, des entités attachées avec une laisse) seront également désapparues."}
            }},
            "minecraft:interact": {"type": "object", "description": "Définit toutes les interactions possibles avec l'Entité.", "properties": {
                "interactions": {"type": "array", "description": "La liste des interactions.", "items": {"type": "object", "properties": {
                    "add_items": {"type": "object", "description": "La Loot Table avec les Items à ajouter à l'inventaire du joueur quand l'interaction réussit avec succès.", "properties": {
                        "table": {"type": "string", "description": "Le chemin d'accès à la Loot_Table."}
                    }},
                    "cooldown": {"type": "number", "description": "Temps en secondes avant que cette Entité peut être intéragit une nouvelle fois."},
                    "cooldown_after_being_attacked": {"type": "number", "description": "Temps en secondes avant que cette Entité peut être intéragit après qu'elle a été attaquée."},
                    "drop_item_slot": {"description": "L'Item dans le slot spécifié de l'Entité à laché quand l'interaction est réussit.", "anyOf": [
                        {"type": "number"},
                        {"type": "string", "enum": [
                            "slot.weapon.mainhand", "slot.weapon.offhand", "slot.armor.head", "slot.armor.chest", "slot.armor.legs", "slot.armor.feet", "slot.armor.body", "slot.hotbar", 
                            "slot.inventory", "slot.enderchest", "slot.saddle", "slot.armor", "slot.chest", "slot.equippable"
                        ]}
                    ]},
                    "equip_item_slot": {"description": "Le slot spécifié de l'Entité qui contiendra l'Item utilisé quand l'interaction est réussit.", "anyOf": [
                        {"type": "number"},
                        {"type": "string", "enum": [
                            "slot.weapon.mainhand", "slot.weapon.offhand", "slot.armor.head", "slot.armor.chest", "slot.armor.legs", "slot.armor.feet", "slot.hotbar", 
                            "slot.inventory", "slot.enderchest", "slot.saddle", "slot.armor", "slot.chest", "slot.equippable"
                        ]}
                    ]},
                    "health_amount": {"type": "integer", "description": "Le nombre de PV que l'Entité qui seront restoré ou perdu lors de l'interaction avec cette Item. Les valeurs négatives feront des dégâts à l'Entité."},
                    "hurt_item": {"type": "integer", "description": "Le nombre de dégâts que l'Item prendra quand il est utiilisé sur l'Entité."},
                    "interact_text": {"type": "string", "description": "Le texte affiché pour les contrôles à écran tactile lorsque le joueur peut interagir avec l'Entité."},
                    "on_interact": {"type": "object", "description": "Les conditions et evenements à executer.", "properties": {
                        "filters": {"description": "L'ensemble des conditions qui doivent être satisfaites pour que l'Interaction soit réussi.", "$ref": "#/definitions/minecraft_filter-ref"},
                        "event": {"type": "string", "description": "L'Evenement à déclencher."},
                        "target": {"type": "string", "description": "La cible qui subira l'Evenement.", "enum": ["block", "damager", "other", "parent", "player", "self", "target"]}
                    }},
                    "particle_on_start": {"type": "object", "description": "L'effet de Particule qui sera déclenché au début de l'interaction.", "properties": {
                        "particle_offset_towards_interactor": {"type": "boolean", "description": "Si la particule apparaîtra ou non plus proche de la personne qui a effectué l'interaction."},
                        "particle_type": {"type": "string", "description": "L'effet de particule."},
                        "particle_y_offset": {"type": "number", "description": "Le décalage de la position de la particule dans la coordonnée Y."}
                    }},
                    "play_sounds": {"description": "Le ou les sons à jouer", "anyOf": [
                        {"type": "string"},
                        {"type": "array", "items": {"type": "string"}}
                    ]},
                    "repair_entity_item": {"type": "object", "description": "Répare l'Item du slot spécifié de l'Entité quand l'interaction réussit.", "properties": {
                        "amount": {"type": "integer", "description": "Le nombre de points de durabilité restoré."},
                        "slot": {"description": "Le slot spécifié de l'Entité qui contiendra l'Item utilisé quand l'interaction est réussit.", "anyOf": [
                            {"type": "number"},
                            {"type": "string", "enum": [
                                "slot.weapon.mainhand", "slot.weapon.offhand", "slot.armor.head", "slot.armor.chest", "slot.armor.legs", "slot.armor.feet", "slot.hotbar", 
                                "slot.inventory", "slot.enderchest", "slot.saddle", "slot.armor", "slot.chest", "slot.equippable"
                            ]}
                        ]}
                    }},
                    "spawn_entities": {"description": "L'entité ou les entités à faire apparaitre quand l'interaction réussit.", "anyOf": [
                        {"type": "string"},
                        {"type": "array", "items": {"type": "string"}}
                    ]},
                    "spawn_items": {"type": "object", "description": "La Loot_Table avec les Items à laché au sol lorsque l'interaction réussit.", "properties": {
                        "table": {"type": "string", "description": "Le chemin d'accès à la Loot_Table."}
                    }},
                    "swing": {"type": "boolean", "description": "Si 'true', le joueur fera l'animation 'swing' lorsqu'il intéragit avec cette Entité."},
                    "transform_to_item": {"type": "string", "description": "L'Item utilisé se transformera en cette Item lorsque l'interaction réussit."},
                    "use_item": {"type": "boolean", "description": "Si 'true', l'interaction utilisera un Item."},
                    "vibration": {"type": "string", "description": "La vibration à emmetre quand l'interaction se produit.", "enum": ["none", "shear", "entity_act", "entity_interact"]}
                }}}
            }},
            "minecraft:inventory": {"type": "object", "description": "Définit comment l'inventaire de l'Entité est gérée.", "properties": {
                "additional_slots_per_strength": {"type": "integer", "description": "Spécifie le nombre de slots supplémentaires que cette Entité peut gagner par force supplémentaire."},
                "can_be_siphoned_from": {"type": "boolean", "description": "Si 'true', le contenu de cette inventaire peut être enlevé par un entonnoir."},
                "container_type": {"type": "string", "description": "Le type de conteneur que l'Entité possède.", "enum": ["horse", "minecart_chest", "chest_boat", "minecart_hopper", "inventory", "container", "hopper"]},
                "inventory_size": {"type": "integer", "description": "Le nombre de slots de l'inventaire."},
                "private": {"type": "boolean", "description": "Si 'true', l'Entité ne lachera pas on inventaire à sa mort."},
                "restrict_to_owner": {"type": "boolean", "description": "Si 'true', l'inventaire de l'Entité peut seulement être accédé par son propriétaire ou par lui même."}
            }},
            "minecraft:is_baby": {"type": "object", "description": "Définit l'Entité comme un bébé."},
            "minecraft:is_charged": {"type": "object", "description": "Définit l'Entité comme étant chargée."},
            "minecraft:is_chested": {"type": "object", "description": "Définit l'Entité comme portant un coffre."},
            "minecraft:is_dyeable": {"type": "object", "description": "Permet à l'Entité à être intéragit avec des colorants pour changer sa couleur.", "properties": {
                "interact_text": {"type": "string", "description": "La texte affiché lors de l'interaction avec cette Entité avec un colorant."}
            }},
            "minecraft:is_hidden_when_invisible": {"type": "object", "description": "Définit que l'Entité peut être caché des mobs hostiles quand il est invisible."},
            "minecraft:is_ignited": {"type": "object", "description": "Définit que l'Entité est actuellement en feu."},
            "minecraft:is_illager_captain": {"type": "object", "description": "Définit que l'Entité est un capitaine illagois."},
            "minecraft:is_pregnant": {"type": "object", "description": "Définit que l'Entité est enceinte."},
            "minecraft:is_saddled": {"type": "object", "description": "Définit que l'Entité est actuellement sellée."},
            "minecraft:is_shaking": {"type": "object", "description": "Définit que l'Entité tremble actuellement."},
            "minecraft:is_sheared": {"type": "object", "description": "Définit que l'Entité est actuellement cisaillée."},
            "minecraft:is_stackable": {"type": "object", "description": "Définit que l'Entité peut être empilée."},
            "minecraft:is_stunned": {"type": "object", "description": "Définit que l'Entité est actuellement étourdie."},
            "minecraft:is_tamed": {"type": "object", "description": "Définit que l'Entité est actuellement apprivoisée."},
            "minecraft:item_controllable": {"type": "object", "description": "Permet à l'Entité d'être controllable avec un Item quand il est chevauché.", "properties": {
                "control_items": {"type": "array", "description": "Les Items pour controller l'Entité.", "items": {"type": "string"}}
            }},
            "minecraft:item_hopper": {"type": "object", "description": "Permet à l'Entité de fonctionner comme un entonnoir."},
            "minecraft:jump.dynamic": {"type": "object", "description": "Définit un contrôle de saut dynamique pour l'Entité, où les propriétés du saut peuvent changer en fonction du modificateur de vitesse de l'Entité"},
            "minecraft:jump.static": {"type": "object", "description": "Donne à l'Entité la capacité de sauter avec une puissance de saut fixe.", "properties": {
                "jump_power": {"type": "number", "description": "La vitesse verticale initiale de l'Entité lors du saut."}
            }},
            "minecraft:knockback_resistance": {"type": "object", "description": "Oblige l'Entité à resister au renversement par une attaque de mêlée.", "properties": {
                "value": {"type": "number", "description": "Le degré de résistance au recul dont dispose l'Entité."}
            }},
            "minecraft:lava_movement": {"type": "object", "description": "Permet une vitesse de mouvement personalisé à travers les blocs de lave.", "properties": {
                "value": {"type": "number", "description": "La vitesse."}
            }},
            "minecraft:leashable": {"type": "object", "description": "Permet à cette Entité d'être attachée et défini des conditions et des evenements pour cette Entité quand il est attaché.", "properties": {
                "can_be_stolen": {"type": "boolean", "description": "Si 'true', les joueurs peuvent attacher l'Entité même si elle est déjà attaché à un autre mob."},
                "hard_distance": {"type": "number", "description": "Distance en blocs auquelle la laisse se raidit et limite les mouvements."},
                "max_distance": {"type": "number", "description": "Distance en blocs auquelle la laisse se détruit."},
                "on_leash": {"description": "Evenement à appeler lorsque l'Entité est attaché.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                "on_unleash": {"description": "Evenement à appeler lorsque l'Entité est desattaché.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                "soft_distance": {"type": "number", "description": "Distance en blocs à laquelle l'effet 'ressort' commence à agir pour maintenir cette Entité proche de l'entité qui l'a tenue en laisse."}
            }},
            "minecraft:looked_at": {"type": "object", "description": "Définit le comportement quand une autre entité regarde cette Entité.", "properties": {
                "field_of_view": {"type": "number", "description": "L'angle de vision en degrés des entitiés qui regardent cette Entité."},
                "filters": {"description": "Définit les entités qui peuvent déclencher ce component.", "$ref": "#/definitions/minecraft_filter-ref"},
                "find_players_only": {"type": "boolean", "description": "Si 'true', seuls les joueurs peuvent être détectés lorsqu'ils regardent cette Entité. "},
                "line_of_sight_obstruction_type": {"type": "string", "description": "Définit comment les obstructions dans la ligne de vue sont traitées en fonction de la forme des blocs.", "enum": ["outline", "collision", "collision_for_camera"]},
                "look_at_locations": {
                    "description": "Spécifie les parties de l'Entité qui peuvent être ciblées par le regard.",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "location": {
                                "description": "La partie de l'Entité qui peut être ciblée par le regard.",
                                "type": "string",
                                "enum": ["head", "body", "feet"]
                            },
                            "vertical_offset": {
                                "description": "Décalage vertical par rapport à la position de l'Entité.",
                                "type": "number"
                            }
                        }
                    }
                },
                "looked_at_cooldown": {"type": "array", "description": "La plage de temps aléatoire pendant lequel l'entité est en 'cooldown' et ne cherchera pas de cible ou ne deviendra pas en colère.", "items": [{"type": "number"}, {"type": "number"}]},
                "looked_at_event": {"description": "L'identifiant de l'événement à exécuter lorsque les entités spécifiées dans les filtres regardent cette entité.", "anyOf": [
                    {"type": "string"},
                    {"$ref": "#/definitions/trigger_event_parameters-ref"}
                ]},
                "not_looked_at_event": {"description": "L'événement à déclencher lorsqu'aucune entitié appropriée ne regarde cette Entité.", "anyOf": [
                    {"type": "string"},
                    {"$ref": "#/definitions/trigger_event_parameters-ref"}
                ]},
                "scale_fov_by_distance": {"type": "boolean", "description": "Lorsque cette option est activée, l'angle de vision sera plus large lorsque les entités sont proches de l'entité propriétaire, mais se rétrécira à mesure que la distance augmente."},
                "search_radius": {"type": "number", "description": "La distance maximale dans laquelle cette Entité cherchera une autre entité qui la regarde."},
                "set_target": {"type": "string", "description": "Si 'true', cette Entité définira l'Entité qui la regarde comme cible d'attaque.", "enum": ["never", "once_and_stop_scanning", "once_and_keep_scanning"]}
            }},
            "minecraft:loot": {"type": "object", "description": "Défini la Loot_Table pour définir les Items lachés quand l'Entité meurt.", "properties": {
                "table": {"type": "string", "description": "Le chemin d'accès à la Loot_Table."}
            }},
            "minecraft:managed_wandering_trader": {"type": "object", "description": "Donne à la capacité à l'Entité de faire du commerce. UTILISABLE UNIQUEMENT PAR 'wandering_trader'."},
            "minecraft:mark_variant": {"type": "object", "description": "Utilisé pour définir la variante d'une entité.", "properties": {
                "value": {"type": "integer", "description": "La valeur de la variante."}
            }},
            "minecraft:mob_effect": {"type": "object", "description": "Applique un effet de mob aux entités dans la plage spécifié.", "properties": {
                "cooldown_time": {"type": "integer", "description": "Temps en secondes à attendre entre chaque application de cet effet."},
                "entity_filter": {"description": "Les entités passant ces tests seront valide pour avoir cet effet de mob.", "$ref": "#/definitions/minecraft_filter-ref"},
                "effect_range": {"type": "number", "description": "À quelle distance une entité hostile doit-elle être pour que l'effet de foule soit appliqué."},
                "effect_time": {"type": "integer", "description": "Le temps en secondes de cet effet."},
                "mob_effect": {"type": "string", "description": "L'effet à appliquer."}
            }},
            "minecraft:movement": {"type": "object", "description": "Définit la vitesse du movement général de l'Entité.", "properties": {
                "value": {"description": "La vitesse.", "anyOf": [
                    {"type": "number"},
                    {"type": "object", "properties": {
                        "range_max": {"type": "integer"},
                        "range_min": {"type": "integer"}
                    }}
                ]}
            }},
            "minecraft:movement.amphibious": {"type": "object", "description": "Donne à l'Entité la capacité de se déplacer efficacement à la fois dans l'eau et sur la terre ferme.", "properties": {
                "max_turn": {"type": "number", "description": "Le nombre maximum de degrés que l'Entité peut tourner par tick."}
            }},
            "minecraft:movement.basic": {"type": "object", "description": "Définit les mouvements de base de l'Entité.", "properties": {
                "max_turn": {"type": "number", "description": "Le nombre maximum de degrés que l'Entité peut tourner par tick."}
            }},
            "minecraft:movement.dolphin": {"type": "object", "description": "Donne à l'Entité la capacité de se déplacer de manière semblable à celle d'un dauphin."},
            "minecraft:movement.fly": {"type": "object", "description": "Permet à l'Entité de voler.", "properties": {
                "max_turn": {"type": "number", "description": "Le nombre maximum de degrés que l'Entité peut tourner par tick."}
            }},
            "minecraft:movement.generic": {"type": "object", "description": "Permet à l'Entité de se déplacer de différentes manières, y compris voler, nager, grimper, etc. .", "properties": {
                "max_turn": {"type": "number", "description": "Le nombre maximum de degrés que l'Entité peut tourner par tick."}
            }},
            "minecraft:movement.glide": {"type": "object", "description": "Utilisé pour contrôler les mouvements de l'Entité volante qui adopte un style de déplacement en glissant.", "properties": {
                "start_speed": {"type": "number", "description": "La vitesse initiale de l'entité lorsqu'elle commence à glisser."},
                "speed_when_turning": {"type": "number", "description": "La vitesse à laquelle l'Entité ajuste son mouvement lorsqu'elle doit tourner rapidement."}
            }},
            "minecraft:movement.hover": {"type": "object", "description": "Permet à l'Entité de planer ou de léviter, lui donnant la capacité de rester en l'air sans toucher le sol.", "properties": {
                "max_turn": {"type": "number", "description": "Le nombre maximum de degrés que l'Entité peut tourner par tick."}
            }},
            "minecraft:movement.jump": {"type": "object", "description": "Permet à l'Entité de se déplacer en sautant avec un délai spécifié entre chaque saut.", "properties": {
                "jump_delay": {"type": "array", "description": "Le délai après l'atterrissage avant que l'Entité effectue un autre saut.", "items": [{"type": "number"}, {"type": "number"}]},
                "max_turn": {"type": "number", "description": "Le nombre maximum de degrés que l'Entité peut tourner par tick."}
            }},
            "minecraft:movement.skip": {"type": "object", "description": "Utilisé pour faire en sorte que l'Entité se déplace en sautillant.", "properties": {
                "max_turn": {"type": "number", "description": "Le nombre maximum de degrés que l'Entité peut tourner par tick."}
            }},
            "minecraft:movement_sound_distance_offset": {"type": "object", "description": "Utilisé pour définir l'offset qui détermine la distance à laquelle le son de mouvement suivant sera joué pour l'Entité.", "properties": {
                "value": {"type": "number", "description": "La vitesse."}
            }},
            "minecraft:movement.sway": {"type": "object", "description": "Utilisé pour faire en sorte que l'Entité se balance latéralement, donnant l'impression qu'elle nage ou se déplace de manière fluide dans l'eau ou un environnement similaire.", "properties": {
                "max_turn": {"type": "number", "description": "Le nombre maximum de degrés que l'Entité peut tourner par tick."},
                "sway_amplitude": {"type": "number", "description": "La force du mouvement de balancement latéral."},
                "sway_frequency": {"type": "number", "description": "Multiplicateur pour la fréquence du mouvement de balancement."}
            }},
            "minecraft:nameable": {"type": "object", "description": "Permet à l'Entité d'être nommée.", "properties": {
                "allow_name_tag_renaming": {"type": "boolean", "description": "Si 'true', l'Entité peut être renommé avec un NameTag."},
                "always_show": {"type": "boolean", "description": "Si 'true', le Name sera toujours montré."},
                "default_trigger": {"description": "Déclencheur par défaut à executer quand l'Entité est nommée.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                "name_actions": {"type": "array", "description": "Decrit les noms spécials pour cette Entité et les evenements à appeler lorsque l'Entité obtient un de ces noms.", "items": {"type": "object", "properties": {
                    "name_filter": {"description": "Le ou les noms qui pourront executer l'evenement.", "anyOf": [
                        {"type": "string"},
                        {"type": "array", "items": {"type": "string"}}
                    ]},
                    "on_named": {"description": "L'evenement à executer.", "$ref": "#/definitions/trigger_event_parameters-ref"}
                }}}
            }},
            "minecraft:navigation.climb": {"type": "object", "description": "Permet à l'Entité de générer des chemins qui incluent des murs verticaux, comme les araignées.", "properties": {
                "avoid_damage_blocks": {"type": "boolean", "description": "Indique au pathfinder d'éviter les blocs qui causent des dégâts lors de la création d'un chemin."},
                "avoid_portals": {"type": "boolean", "description": "Indique au pathfinder d'éviter les blocs qui causent des dégâts lors de la création d'un chemin."},
                "avoid_sun": {"type": "boolean", "description": "Indique au pathfinder d'éviter les tuiles exposées au soleil lors de la création de chemins."},
                "avoid_water": {"type": "boolean", "description": "Indique au pathfinder d'éviter l'eau lors de la création d'un chemin."},
                "blocks_to_avoid": {"type": "array", "description": "Spécifie les blocs que le pathfinder doit éviter lors de la création d'un chemin.", "items": {"anyOf": [
                    {"type": "object", "properties": {
                        "name": {"type": "string", "description": "Le nom du Bloc."},
                        "states": {"type": "array", "items": {"type": "object"}, "description": "La paire état de Bloc et sa valeur."},
                        "tags": {"type": "string", "description": "Le tag de Bloc exprimé en Molang."}
                    }},
                    {"type": "string"}
                ]}},
                "can_breach": {"type": "boolean", "description": "Indique au pathfinder s'il peut sauter hors de l'eau, comme un dauphin."},
                "can_break_doors": {"type": "boolean", "description": "Indique au pathfinder qu'il peut traverser une porte fermée en la brisant."},
                "can_jump": {"type": "boolean", "description": "Indique au pathfinder s'il peut sauter sur des blocs."},
                "can_open_doors": {"type": "boolean", "description": "Indique au pathfinder qu'il peut traverser une porte fermée en l'ouvrant."},
                "can_open_iron_doors": {"type": "boolean", "description": "Indique au pathfinder qu'il peut traverser une porte en fer fermée en l'ouvrant."},
                "can_pass_doors": {"type": "boolean", "description": "Indique si un chemin peut être créé à travers une porte."},
                "can_path_from_air": {"type": "boolean", "description": "Indique au pathfinder qu'il peut commencer à se déplacer lorsqu'il est dans les airs."},
                "can_path_over_lava": {"type": "boolean", "description": "Indique au pathfinder s'il peut se déplacer sur la surface de la lave."},
                "can_path_over_water": {"type": "boolean", "description": "Indique au pathfinder s'il peut se déplacer sur la surface de l'eau."},
                "can_sink": {"type": "boolean", "description": "Indique au pathfinder s'il sera tiré vers le bas par la gravité lorsqu'il est dans l'eau."},
                "can_swim": {"type": "boolean", "description": "Indique au pathfinder s'il peut se déplacer n'importe où dans l'eau et jouer l'animation de nage sur ce chemin."},
                "can_walk": {"type": "boolean", "description": "Indique au pathfinder s'il peut marcher sur le sol en dehors de l'eau."},
                "can_walk_in_lava": {"type": "boolean", "description": "Indique au pathfinder s'il peut se déplacer dans la lave comme s'il marchait sur le sol."},
                "is_amphibious": {"type": "boolean", "description": "Indique au pathfinder s'il peut marcher sur le sol sous l'eau."}
            }},
            "minecraft:navigation.float": {"type": "object", "description": "Permet à l'Entité de générer des chemins en volant dans les airs, similaire au comportement d'un Ghast.", "properties": {
                "avoid_damage_blocks": {"type": "boolean", "description": "Indique au pathfinder d'éviter les blocs qui causent des dégâts lors de la création d'un chemin."},
                "avoid_portals": {"type": "boolean", "description": "Indique au pathfinder d'éviter les blocs qui causent des dégâts lors de la création d'un chemin."},
                "avoid_sun": {"type": "boolean", "description": "Indique au pathfinder d'éviter les tuiles exposées au soleil lors de la création de chemins."},
                "avoid_water": {"type": "boolean", "description": "Indique au pathfinder d'éviter l'eau lors de la création d'un chemin."},
                "blocks_to_avoid": {"type": "array", "description": "Spécifie les blocs que le pathfinder doit éviter lors de la création d'un chemin.", "items": {"anyOf": [
                    {"type": "object", "properties": {
                        "name": {"type": "string", "description": "Le nom du Bloc."},
                        "states": {"type": "array", "items": {"type": "object"}, "description": "La paire état de Bloc et sa valeur."},
                        "tags": {"type": "string", "description": "Le tag de Bloc exprimé en Molang."}
                    }},
                    {"type": "string"}
                ]}},
                "can_breach": {"type": "boolean", "description": "Indique au pathfinder s'il peut sauter hors de l'eau, comme un dauphin."},
                "can_break_doors": {"type": "boolean", "description": "Indique au pathfinder qu'il peut traverser une porte fermée en la brisant."},
                "can_jump": {"type": "boolean", "description": "Indique au pathfinder s'il peut sauter sur des blocs."},
                "can_open_doors": {"type": "boolean", "description": "Indique au pathfinder qu'il peut traverser une porte fermée en l'ouvrant."},
                "can_open_iron_doors": {"type": "boolean", "description": "Indique au pathfinder qu'il peut traverser une porte en fer fermée en l'ouvrant."},
                "can_pass_doors": {"type": "boolean", "description": "Indique si un chemin peut être créé à travers une porte."},
                "can_path_from_air": {"type": "boolean", "description": "Indique au pathfinder qu'il peut commencer à se déplacer lorsqu'il est dans les airs."},
                "can_path_over_lava": {"type": "boolean", "description": "Indique au pathfinder s'il peut se déplacer sur la surface de la lave."},
                "can_path_over_water": {"type": "boolean", "description": "Indique au pathfinder s'il peut se déplacer sur la surface de l'eau."},
                "can_sink": {"type": "boolean", "description": "Indique au pathfinder s'il sera tiré vers le bas par la gravité lorsqu'il est dans l'eau."},
                "can_swim": {"type": "boolean", "description": "Indique au pathfinder s'il peut se déplacer n'importe où dans l'eau et jouer l'animation de nage sur ce chemin."},
                "can_walk": {"type": "boolean", "description": "Indique au pathfinder s'il peut marcher sur le sol en dehors de l'eau."},
                "can_walk_in_lava": {"type": "boolean", "description": "Indique au pathfinder s'il peut se déplacer dans la lave comme s'il marchait sur le sol."},
                "is_amphibious": {"type": "boolean", "description": "Indique au pathfinder s'il peut marcher sur le sol sous l'eau."}
            }},
            "minecraft:navigation.fly": {"type": "object", "description": "Permet à l'Entité de générer des chemins en volant dans les airs, de manière similaire aux perroquets.", "properties": {
                "avoid_damage_blocks": {"type": "boolean", "description": "Indique au pathfinder d'éviter les blocs qui causent des dégâts lors de la création d'un chemin."},
                "avoid_portals": {"type": "boolean", "description": "Indique au pathfinder d'éviter les blocs qui causent des dégâts lors de la création d'un chemin."},
                "avoid_sun": {"type": "boolean", "description": "Indique au pathfinder d'éviter les tuiles exposées au soleil lors de la création de chemins."},
                "avoid_water": {"type": "boolean", "description": "Indique au pathfinder d'éviter l'eau lors de la création d'un chemin."},
                "blocks_to_avoid": {"type": "array", "description": "Spécifie les blocs que le pathfinder doit éviter lors de la création d'un chemin.", "items": {"anyOf": [
                    {"type": "object", "properties": {
                        "name": {"type": "string", "description": "Le nom du Bloc."},
                        "states": {"type": "array", "items": {"type": "object"}, "description": "La paire état de Bloc et sa valeur."},
                        "tags": {"type": "string", "description": "Le tag de Bloc exprimé en Molang."}
                    }},
                    {"type": "string"}
                ]}},
                "can_breach": {"type": "boolean", "description": "Indique au pathfinder s'il peut sauter hors de l'eau, comme un dauphin."},
                "can_break_doors": {"type": "boolean", "description": "Indique au pathfinder qu'il peut traverser une porte fermée en la brisant."},
                "can_jump": {"type": "boolean", "description": "Indique au pathfinder s'il peut sauter sur des blocs."},
                "can_open_doors": {"type": "boolean", "description": "Indique au pathfinder qu'il peut traverser une porte fermée en l'ouvrant."},
                "can_open_iron_doors": {"type": "boolean", "description": "Indique au pathfinder qu'il peut traverser une porte en fer fermée en l'ouvrant."},
                "can_pass_doors": {"type": "boolean", "description": "Indique si un chemin peut être créé à travers une porte."},
                "can_path_from_air": {"type": "boolean", "description": "Indique au pathfinder qu'il peut commencer à se déplacer lorsqu'il est dans les airs."},
                "can_path_over_lava": {"type": "boolean", "description": "Indique au pathfinder s'il peut se déplacer sur la surface de la lave."},
                "can_path_over_water": {"type": "boolean", "description": "Indique au pathfinder s'il peut se déplacer sur la surface de l'eau."},
                "can_sink": {"type": "boolean", "description": "Indique au pathfinder s'il sera tiré vers le bas par la gravité lorsqu'il est dans l'eau."},
                "can_swim": {"type": "boolean", "description": "Indique au pathfinder s'il peut se déplacer n'importe où dans l'eau et jouer l'animation de nage sur ce chemin."},
                "can_walk": {"type": "boolean", "description": "Indique au pathfinder s'il peut marcher sur le sol en dehors de l'eau."},
                "can_walk_in_lava": {"type": "boolean", "description": "Indique au pathfinder s'il peut se déplacer dans la lave comme s'il marchait sur le sol."},
                "is_amphibious": {"type": "boolean", "description": "Indique au pathfinder s'il peut marcher sur le sol sous l'eau."}
            }},
            "minecraft:navigation.generic": {"type": "object", "description": "Permet à l'Entité de générer des chemins en utilisant une variété de modes de déplacement, y compris la marche, la nage, le vol, l'escalade, et le saut de blocs.", "properties": {
                "avoid_damage_blocks": {"type": "boolean", "description": "Indique au pathfinder d'éviter les blocs qui causent des dégâts lors de la création d'un chemin."},
                "avoid_portals": {"type": "boolean", "description": "Indique au pathfinder d'éviter les blocs qui causent des dégâts lors de la création d'un chemin."},
                "avoid_sun": {"type": "boolean", "description": "Indique au pathfinder d'éviter les tuiles exposées au soleil lors de la création de chemins."},
                "avoid_water": {"type": "boolean", "description": "Indique au pathfinder d'éviter l'eau lors de la création d'un chemin."},
                "blocks_to_avoid": {"type": "array", "description": "Spécifie les blocs que le pathfinder doit éviter lors de la création d'un chemin.", "items": {"anyOf": [
                    {"type": "object", "properties": {
                        "name": {"type": "string", "description": "Le nom du Bloc."},
                        "states": {"type": "array", "items": {"type": "object"}, "description": "La paire état de Bloc et sa valeur."},
                        "tags": {"type": "string", "description": "Le tag de Bloc exprimé en Molang."}
                    }},
                    {"type": "string"}
                ]}},
                "can_breach": {"type": "boolean", "description": "Indique au pathfinder s'il peut sauter hors de l'eau, comme un dauphin."},
                "can_break_doors": {"type": "boolean", "description": "Indique au pathfinder qu'il peut traverser une porte fermée en la brisant."},
                "can_jump": {"type": "boolean", "description": "Indique au pathfinder s'il peut sauter sur des blocs."},
                "can_open_doors": {"type": "boolean", "description": "Indique au pathfinder qu'il peut traverser une porte fermée en l'ouvrant."},
                "can_open_iron_doors": {"type": "boolean", "description": "Indique au pathfinder qu'il peut traverser une porte en fer fermée en l'ouvrant."},
                "can_pass_doors": {"type": "boolean", "description": "Indique si un chemin peut être créé à travers une porte."},
                "can_path_from_air": {"type": "boolean", "description": "Indique au pathfinder qu'il peut commencer à se déplacer lorsqu'il est dans les airs."},
                "can_path_over_lava": {"type": "boolean", "description": "Indique au pathfinder s'il peut se déplacer sur la surface de la lave."},
                "can_path_over_water": {"type": "boolean", "description": "Indique au pathfinder s'il peut se déplacer sur la surface de l'eau."},
                "can_sink": {"type": "boolean", "description": "Indique au pathfinder s'il sera tiré vers le bas par la gravité lorsqu'il est dans l'eau."},
                "can_swim": {"type": "boolean", "description": "Indique au pathfinder s'il peut se déplacer n'importe où dans l'eau et jouer l'animation de nage sur ce chemin."},
                "can_walk": {"type": "boolean", "description": "Indique au pathfinder s'il peut marcher sur le sol en dehors de l'eau."},
                "can_walk_in_lava": {"type": "boolean", "description": "Indique au pathfinder s'il peut se déplacer dans la lave comme s'il marchait sur le sol."},
                "is_amphibious": {"type": "boolean", "description": "Indique au pathfinder s'il peut marcher sur le sol sous l'eau."}
            }},
            "minecraft:navigation.hover": {"type": "object", "description": "Permet à l'Entité de générer des chemins en volant dans les airs, de manière similaire aux abeilles.", "properties": {
                "avoid_damage_blocks": {"type": "boolean", "description": "Indique au pathfinder d'éviter les blocs qui causent des dégâts lors de la création d'un chemin."},
                "avoid_portals": {"type": "boolean", "description": "Indique au pathfinder d'éviter les blocs qui causent des dégâts lors de la création d'un chemin."},
                "avoid_sun": {"type": "boolean", "description": "Indique au pathfinder d'éviter les tuiles exposées au soleil lors de la création de chemins."},
                "avoid_water": {"type": "boolean", "description": "Indique au pathfinder d'éviter l'eau lors de la création d'un chemin."},
                "blocks_to_avoid": {"type": "array", "description": "Spécifie les blocs que le pathfinder doit éviter lors de la création d'un chemin.", "items": {"anyOf": [
                    {"type": "object", "properties": {
                        "name": {"type": "string", "description": "Le nom du Bloc."},
                        "states": {"type": "array", "items": {"type": "object"}, "description": "La paire état de Bloc et sa valeur."},
                        "tags": {"type": "string", "description": "Le tag de Bloc exprimé en Molang."}
                    }},
                    {"type": "string"}
                ]}},
                "can_breach": {"type": "boolean", "description": "Indique au pathfinder s'il peut sauter hors de l'eau, comme un dauphin."},
                "can_break_doors": {"type": "boolean", "description": "Indique au pathfinder qu'il peut traverser une porte fermée en la brisant."},
                "can_jump": {"type": "boolean", "description": "Indique au pathfinder s'il peut sauter sur des blocs."},
                "can_open_doors": {"type": "boolean", "description": "Indique au pathfinder qu'il peut traverser une porte fermée en l'ouvrant."},
                "can_open_iron_doors": {"type": "boolean", "description": "Indique au pathfinder qu'il peut traverser une porte en fer fermée en l'ouvrant."},
                "can_pass_doors": {"type": "boolean", "description": "Indique si un chemin peut être créé à travers une porte."},
                "can_path_from_air": {"type": "boolean", "description": "Indique au pathfinder qu'il peut commencer à se déplacer lorsqu'il est dans les airs."},
                "can_path_over_lava": {"type": "boolean", "description": "Indique au pathfinder s'il peut se déplacer sur la surface de la lave."},
                "can_path_over_water": {"type": "boolean", "description": "Indique au pathfinder s'il peut se déplacer sur la surface de l'eau."},
                "can_sink": {"type": "boolean", "description": "Indique au pathfinder s'il sera tiré vers le bas par la gravité lorsqu'il est dans l'eau."},
                "can_swim": {"type": "boolean", "description": "Indique au pathfinder s'il peut se déplacer n'importe où dans l'eau et jouer l'animation de nage sur ce chemin."},
                "can_walk": {"type": "boolean", "description": "Indique au pathfinder s'il peut marcher sur le sol en dehors de l'eau."},
                "can_walk_in_lava": {"type": "boolean", "description": "Indique au pathfinder s'il peut se déplacer dans la lave comme s'il marchait sur le sol."},
                "is_amphibious": {"type": "boolean", "description": "Indique au pathfinder s'il peut marcher sur le sol sous l'eau."}
            }},
            "minecraft:navigation.swin": {"type": "object", "description": "Permet à l'Entité de générer des chemins qui incluent des déplacements dans l'eau.", "properties": {
                "avoid_damage_blocks": {"type": "boolean", "description": "Indique au pathfinder d'éviter les blocs qui causent des dégâts lors de la création d'un chemin."},
                "avoid_portals": {"type": "boolean", "description": "Indique au pathfinder d'éviter les blocs qui causent des dégâts lors de la création d'un chemin."},
                "avoid_sun": {"type": "boolean", "description": "Indique au pathfinder d'éviter les tuiles exposées au soleil lors de la création de chemins."},
                "avoid_water": {"type": "boolean", "description": "Indique au pathfinder d'éviter l'eau lors de la création d'un chemin."},
                "blocks_to_avoid": {"type": "array", "description": "Spécifie les blocs que le pathfinder doit éviter lors de la création d'un chemin.", "items": {"anyOf": [
                    {"type": "object", "properties": {
                        "name": {"type": "string", "description": "Le nom du Bloc."},
                        "states": {"type": "array", "items": {"type": "object"}, "description": "La paire état de Bloc et sa valeur."},
                        "tags": {"type": "string", "description": "Le tag de Bloc exprimé en Molang."}
                    }},
                    {"type": "string"}
                ]}},
                "can_breach": {"type": "boolean", "description": "Indique au pathfinder s'il peut sauter hors de l'eau, comme un dauphin."},
                "can_break_doors": {"type": "boolean", "description": "Indique au pathfinder qu'il peut traverser une porte fermée en la brisant."},
                "can_jump": {"type": "boolean", "description": "Indique au pathfinder s'il peut sauter sur des blocs."},
                "can_open_doors": {"type": "boolean", "description": "Indique au pathfinder qu'il peut traverser une porte fermée en l'ouvrant."},
                "can_open_iron_doors": {"type": "boolean", "description": "Indique au pathfinder qu'il peut traverser une porte en fer fermée en l'ouvrant."},
                "can_pass_doors": {"type": "boolean", "description": "Indique si un chemin peut être créé à travers une porte."},
                "can_path_from_air": {"type": "boolean", "description": "Indique au pathfinder qu'il peut commencer à se déplacer lorsqu'il est dans les airs."},
                "can_path_over_lava": {"type": "boolean", "description": "Indique au pathfinder s'il peut se déplacer sur la surface de la lave."},
                "can_path_over_water": {"type": "boolean", "description": "Indique au pathfinder s'il peut se déplacer sur la surface de l'eau."},
                "can_sink": {"type": "boolean", "description": "Indique au pathfinder s'il sera tiré vers le bas par la gravité lorsqu'il est dans l'eau."},
                "can_swim": {"type": "boolean", "description": "Indique au pathfinder s'il peut se déplacer n'importe où dans l'eau et jouer l'animation de nage sur ce chemin."},
                "can_walk": {"type": "boolean", "description": "Indique au pathfinder s'il peut marcher sur le sol en dehors de l'eau."},
                "can_walk_in_lava": {"type": "boolean", "description": "Indique au pathfinder s'il peut se déplacer dans la lave comme s'il marchait sur le sol."},
                "is_amphibious": {"type": "boolean", "description": "Indique au pathfinder s'il peut marcher sur le sol sous l'eau."}
            }},
            "minecraft:navigation.walk": {"type": "object", "description": "Permet à l'Entité de générer des chemins en se déplaçant à pied et en sautant pour monter ou descendre des blocs", "properties": {
                "avoid_damage_blocks": {"type": "boolean", "description": "Indique au pathfinder d'éviter les blocs qui causent des dégâts lors de la création d'un chemin."},
                "avoid_portals": {"type": "boolean", "description": "Indique au pathfinder d'éviter les blocs qui causent des dégâts lors de la création d'un chemin."},
                "avoid_sun": {"type": "boolean", "description": "Indique au pathfinder d'éviter les tuiles exposées au soleil lors de la création de chemins."},
                "avoid_water": {"type": "boolean", "description": "Indique au pathfinder d'éviter l'eau lors de la création d'un chemin."},
                "blocks_to_avoid": {"type": "array", "description": "Spécifie les blocs que le pathfinder doit éviter lors de la création d'un chemin.", "items": {"anyOf": [
                    {"type": "object", "properties": {
                        "name": {"type": "string", "description": "Le nom du Bloc."},
                        "states": {"type": "array", "items": {"type": "object"}, "description": "La paire état de Bloc et sa valeur."},
                        "tags": {"type": "string", "description": "Le tag de Bloc exprimé en Molang."}
                    }},
                    {"type": "string"}
                ]}},
                "can_breach": {"type": "boolean", "description": "Indique au pathfinder s'il peut sauter hors de l'eau, comme un dauphin."},
                "can_break_doors": {"type": "boolean", "description": "Indique au pathfinder qu'il peut traverser une porte fermée en la brisant."},
                "can_jump": {"type": "boolean", "description": "Indique au pathfinder s'il peut sauter sur des blocs."},
                "can_open_doors": {"type": "boolean", "description": "Indique au pathfinder qu'il peut traverser une porte fermée en l'ouvrant."},
                "can_open_iron_doors": {"type": "boolean", "description": "Indique au pathfinder qu'il peut traverser une porte en fer fermée en l'ouvrant."},
                "can_pass_doors": {"type": "boolean", "description": "Indique si un chemin peut être créé à travers une porte."},
                "can_path_from_air": {"type": "boolean", "description": "Indique au pathfinder qu'il peut commencer à se déplacer lorsqu'il est dans les airs."},
                "can_path_over_lava": {"type": "boolean", "description": "Indique au pathfinder s'il peut se déplacer sur la surface de la lave."},
                "can_path_over_water": {"type": "boolean", "description": "Indique au pathfinder s'il peut se déplacer sur la surface de l'eau."},
                "can_sink": {"type": "boolean", "description": "Indique au pathfinder s'il sera tiré vers le bas par la gravité lorsqu'il est dans l'eau."},
                "can_swim": {"type": "boolean", "description": "Indique au pathfinder s'il peut se déplacer n'importe où dans l'eau et jouer l'animation de nage sur ce chemin."},
                "can_walk": {"type": "boolean", "description": "Indique au pathfinder s'il peut marcher sur le sol en dehors de l'eau."},
                "can_walk_in_lava": {"type": "boolean", "description": "Indique au pathfinder s'il peut se déplacer dans la lave comme s'il marchait sur le sol."},
                "is_amphibious": {"type": "boolean", "description": "Indique au pathfinder s'il peut marcher sur le sol sous l'eau."}
            }},
            "minecraft:npc": {"type": "object", "description": "Définir les propriétés spécifiques d'un NPC à l'Entité.", "properties": {
                "npc_data": {"type": "object", "description": "Toutes les données de NPC.", "properties": {
                    "portrait_offsets": {"type": "object", "description": "Définit les décalages de portraits.", "properties": {
                        "translate": {"type": "array", "description": "Définit le décalage de translation du portrait du NPC. Cela déplace le portrait de l'entité sur les axes X, Y, et Z.", "items": [{"type": "number"}, {"type": "number"}, {"type": "number"}]},
                        "scale": {"type": "array", "description": "Définit l'échelle du portrait du NPC sur les axes X, Y, et Z.", "items": [{"type": "number"}, {"type": "number"}, {"type": "number"}]}
                    }},
                    "picker_offsets": {"type": "object", "description": "Définit les décalages du séléecteur.", "properties": {
                        "translate": {"type": "array", "description": "Définit le décalage de translation du portrait du NPC. Cela déplace le portrait de l'entité sur les axes X, Y, et Z.", "items": [{"type": "number"}, {"type": "number"}, {"type": "number"}]},
                        "scale": {"type": "array", "description": "Définit l'échelle du portrait du NPC sur les axes X, Y, et Z.", "items": [{"type": "number"}, {"type": "number"}, {"type": "number"}]}
                    }},
                    "skin_list": {"type": "array", "description": "Liste de variantes de skins. (Utilise indirectement le component 'minecraft:variant'.)", "items": {"type": "object", "properties": {
                        "variant": {"type": "integer", "description": "La valeur pour le component 'minecraft:variant'"}
                    }}}
                }}
            }},
            "minecraft:on_death": {"type": "object", "description": "Ajoute un déclencheur d'événement qui s'executera quand l'Entité meurt. SEULEMENT UTILISABLE POUR L'ENDER DRAGON.", "properties": {
                "filters": {"description": "L'ensemble des conditions qui doivent être satisfaites pour déclencher l'événement.", "$ref": "#/definitions/minecraft_filter-ref"},
                "event": {"type": "string", "description": "L'Evenement à déclencher."},
                "target": {"type": "string", "description": "La cible qui subira l'Evenement.", "enum": ["block", "damager", "other", "parent", "player", "self", "target"]}
            }},
            "minecraft:on_friendly_anger": {"type": "object", "description": "Ajoute un déclencheur d'événement qui s'executera quand une entité du même type rentre dand l'état 'angry'.", "properties": {
                "filters": {"description": "L'ensemble des conditions qui doivent être satisfaites pour déclencher l'événement.", "$ref": "#/definitions/minecraft_filter-ref"},
                "event": {"type": "string", "description": "L'Evenement à déclencher."},
                "target": {"type": "string", "description": "La cible qui subira l'Evenement.", "enum": ["block", "damager", "other", "parent", "player", "self", "target"]}
            }},
            "minecraft:on_hurt_by_player": {"type": "object", "description": "Ajoute un déclencheur d'événement qui s'executera quand un joueur attaque l'Entité.", "properties": {
                "filters": {"description": "L'ensemble des conditions qui doivent être satisfaites pour déclencher l'événement.", "$ref": "#/definitions/minecraft_filter-ref"},
                "event": {"type": "string", "description": "L'Evenement à déclencher."},
                "target": {"type": "string", "description": "La cible qui subira l'Evenement.", "enum": ["block", "damager", "other", "parent", "player", "self", "target"]}
            }},
            "minecraft:on_hurt": {"type": "object", "description": "Ajoute un déclencheur d'événement qui s'executera quand l'Entité prend des dégâts.", "properties": {
                "filters": {"description": "L'ensemble des conditions qui doivent être satisfaites pour déclencher l'événement.", "$ref": "#/definitions/minecraft_filter-ref"},
                "event": {"type": "string", "description": "L'Evenement à déclencher."},
                "target": {"type": "string", "description": "La cible qui subira l'Evenement.", "enum": ["block", "damager", "other", "parent", "player", "self", "target"]}
            }},
            "minecraft:on_ignite": {"type": "object", "description": "Ajoute un déclencheur d'événement qui s'executera quand l'Entité est incendiée..", "properties": {
                "filters": {"description": "L'ensemble des conditions qui doivent être satisfaites pour déclencher l'événement.", "$ref": "#/definitions/minecraft_filter-ref"},
                "event": {"type": "string", "description": "L'Evenement à déclencher."},
                "target": {"type": "string", "description": "La cible qui subira l'Evenement.", "enum": ["block", "damager", "other", "parent", "player", "self", "target"]}
            }},
            "minecraft:on_start_landing": {"type": "object", "description": "Ajoute un déclencheur d'événement qui s'executera quand l'Entité atterit. SEULEMENT UTILISABLE POUR L'ENDER DRAGON.", "properties": {
                "filters": {"description": "L'ensemble des conditions qui doivent être satisfaites pour déclencher l'événement.", "$ref": "#/definitions/minecraft_filter-ref"},
                "event": {"type": "string", "description": "L'Evenement à déclencher."},
                "target": {"type": "string", "description": "La cible qui subira l'Evenement.", "enum": ["block", "damager", "other", "parent", "player", "self", "target"]}
            }},
            "minecraft:on_start_takeoff": {"type": "object", "description": "Ajoute un déclencheur d'événement qui s'executera quand l'Entité commence à voler. SEULEMENT UTILISABLE POUR L'ENDER DRAGON.", "properties": {
                "filters": {"description": "L'ensemble des conditions qui doivent être satisfaites pour déclencher l'événement.", "$ref": "#/definitions/minecraft_filter-ref"},
                "event": {"type": "string", "description": "L'Evenement à déclencher."},
                "target": {"type": "string", "description": "La cible qui subira l'Evenement.", "enum": ["block", "damager", "other", "parent", "player", "self", "target"]}
            }},
            "minecraft:on_target_acquired": {"type": "object", "description": "Ajoute un déclencheur d'événement qui s'executera quand l'Entité trouve une cible. Les components suivants sont requis : 'minecraft:behavior.nearest_attackable_target', 'minecraft:behavior.hurt_by_target'.", "properties": {
                "filters": {"description": "L'ensemble des conditions qui doivent être satisfaites pour déclencher l'événement.", "$ref": "#/definitions/minecraft_filter-ref"},
                "event": {"type": "string", "description": "L'Evenement à déclencher."},
                "target": {"type": "string", "description": "La cible qui subira l'Evenement.", "enum": ["block", "damager", "other", "parent", "player", "self", "target"]}
            }},
            "minecraft:on_target_escape": {"type": "object", "description": "Ajoute un déclencheur d'événement qui s'executera quand l'Entité perd la cible qu'il possède actuellement. Les components suivants sont requis : 'minecraft:behavior.nearest_attackable_target', 'minecraft:behavior.hurt_by_target'.", "properties": {
                "filters": {"description": "L'ensemble des conditions qui doivent être satisfaites pour déclencher l'événement.", "$ref": "#/definitions/minecraft_filter-ref"},
                "event": {"type": "string", "description": "L'Evenement à déclencher."},
                "target": {"type": "string", "description": "La cible qui subira l'Evenement.", "enum": ["block", "damager", "other", "parent", "player", "self", "target"]}
            }},
            "minecraft:on_wake_with_owner": {"type": "object", "description": "Ajoute un déclencheur d'événement qui s'executera lorsque le propriétaire d'un animal de compagnie (tel qu'un chat) se réveille après avoir dormi avec l'animal. Pour que ce component fonctionne, il est nécessaire qu'un joueur soit désigné comme propriétaire de l'Entité.", "properties": {
                "filters": {"description": "L'ensemble des conditions qui doivent être satisfaites pour déclencher l'événement.", "$ref": "#/definitions/minecraft_filter-ref"},
                "event": {"type": "string", "description": "L'Evenement à déclencher."},
                "target": {"type": "string", "description": "La cible qui subira l'Evenement.", "enum": ["block", "damager", "other", "parent", "player", "self", "target"]}
            }},
            "minecraft:out_of_control": {"type": "object", "description": "Utilisé pour définir l'état 'hors de contrôle' de l'Entité."},
            "minecraft:peek": {"type": "object", "description": "Définit le comportement de 'jeter un coup d'œil' de l'Entité.", "properties": {
                "on_close": {"description": "L'evenement à executer quand l'Entité a fini de jeter un coup d'œil.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                "on_open": {"description": "L'evenement à executer quand l'Entité commence à jeter un coup d'œil.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                "on_target_open": {"description": "L'evenement à executer quand l'entité cible de l'Entité commence à jeter un coup d'œil.", "$ref": "#/definitions/trigger_event_parameters-ref"}
            }},
            "minecraft:persistent": {"type": "object", "description": "Définit si l'Entité doit être persistante dans le monde de jeu. Lorsqu'une entité est persistante, cela signifie qu'elle ne sera pas supprimée automatiquement du monde même si elle est loin du joueur ou si elle n'est pas actuellement chargée dans la mémoire du jeu."},
            "minecraft:physics": {"type": "object", "description": "Définit les propriétés physiques de l'Entité, incluant s'il est affecté par la gravité ou s'il entre en collision avec les objets.", "properties": {
                "has_collision": {"type": "boolean", "description": "Si l'Entité entre en collision avec les choses."},
                "has_gravity": {"type": "boolean", "description": "Si l'Entité est affecté par la gravité"},
                "push_towards_closest_space": {"type": "boolean", "description": "Indique si l'Entité doit être poussée vers l'espace ouvert le plus proche lorsqu'elle est coincée à l'intérieur d'un bloc."}
            }},
            "minecraft:player.exhaustion": {"type": "object", "description": "Définit le niveau d'épuisement du joueur.", "properties": {
                "value": {"type": "integer", "description": "La valeur initiale."},
                "max": {"type": "integer", "description": "La valeur maximale."}
            }},
            "minecraft:player.experience": {"type": "object", "description": "Définit la quantité d'expérience que chaque action de joueur doit prendre.", "properties": {
                "value": {"type": "integer", "description": "La valeur initiale."},
                "max": {"type": "integer", "description": "La valeur maximale."}
            }},
            "minecraft:player.level": {"type": "object", "description": "Définit les niveaux d'XP.", "properties": {
                "value": {"type": "integer", "description": "La valeur initiale."},
                "max": {"type": "integer", "description": "La valeur maximale."}
            }},
            "minecraft:player.saturation": {"type": "object", "description": "Définit le besoin de nourriture du joueur.", "properties": {
                "value": {"type": "integer", "description": "La valeur initiale."},
                "max": {"type": "integer", "description": "La valeur maximale."}
            }},
            "minecraft:preferred_path": {"type": "object", "description": "Spécifie des informations de coût pour les entités qui préfèrent marcher sur des chemins préférés, ce qui peut influencer leur comportement de déplacement.", "properties": {
                "default_block_cost": {"type": "number", "description": "Coût pour les blocs non préférés. Ce paramètre détermine le coût supplémentaire pour traverser un bloc qui n'est pas spécifié dans la liste des blocs préférés."},
                "jump_cost": {"type": "integer", "description": "Coût supplémentaire ajouté pour sauter d'un nœud à un autre."},
                "max_fall_blocks": {"type": "integer", "description": "Distance maximale que l'Entité peut tomber sans subir de dégâts."},
                "preferred_path_blocks": {"type": "array", "description": "Une liste de blocs avec leur coût associé. Ces blocs sont considérés comme préférés par l'Entité lors de ses déplacements.", "items": {"type": "object", "properties": {
                    "cost": {"type": "integer", "description": "La cout."},
                    "blocks": {"description": "Les Blocs associé à ce cout.", "anyOf": [
                        {"type": "object", "properties": {
                            "name": {"type": "string", "description": "Le nom du Bloc."},
                            "states": {"type": "array", "items": {"type": "object"}, "description": "La paire état de Bloc et sa valeur."},
                            "tags": {"type": "string", "description": "Le tag de Bloc exprimé en Molang."}
                        }},
                        {"type": "string"}
                    ]}
                }}}
            }},
            "minecraft:projectile": {"type": "object", "description": "Permet à l'Entité d'être une entité lançable/projectile.", "properties": {
                "anchor": {"type": "integer", "description": "Permet de spécifier le point d'ancrage à partir duquel le projectile est tiré. Cela détermine la position de départ du projectile par rapport à l'entité qui le lance. 0 = tiré à partir du point d'origine de l'entité, 1 = tiré à partir de la hauteur des yeux de l'entité, 2 = tiré à partir du milieu ou de la hauteur du corps de l'entité."},
                "angle_offset": {"type": "number", "description": "Permet de modifier l'angle vertical auquel un projectile est tiré."},
                "catch_fire": {"type": "boolean", "description": "Détermine si l'entité touchée par le projectile prendra feu ou non."},
                "crit_particle_on_hurt": {"type": "boolean", "description": "Si 'true', le projectile produira des particules supplémentaires quand un coup critique se produit."},
                "destroy_on_hurt": {"type": "boolean", "description": "Si 'true', ce projectile sera détruit lorsqu'elle sera touchée."},
                "filter": {"description": "Les entités spécifiés ne peuvent pas être blessées par le projectile.", "anyOf": [
                    {"type": "string"},
                    {"type": "array", "items": {"type": "string"}}
                ]},
                "fire_affected_by_griefing": {"type": "boolean", "description": "Détermine si la capacité du projectile à causer des incendies est influencée par la règle de jeu 'mob_griefing'."},
                "gravity": {"type": "number", "description": "La force de gravité appliqué à cette projectile quand il est lancé. Quand ce projectile n'est pas dans le sol, ça soustrait."},
                "hit_sound": {"type": "string", "description": "Le son à jouer quand le projectile touche quelque chose."},
                "hit_ground_sound": {"type": "string", "description": "Le son à jouer quand le projectile touche le sol."},
                "homing": {"type": "boolean", "description": "Permet de définir si le projectile est capable de suivre ou de se diriger automatiquement vers l'entité la plus proche."},
                "ignored_entities": {"type": "array", "description": "Définit les entités que le projectile ignorera.", "items": {"type": "string"}},
                "inertia": {"type": "number", "description": "Contrôle la fraction de la vitesse du projectile qui est maintenue à chaque frame (tick) pendant qu'il voyage dans les airs. Cette valeur influence la manière dont le projectile ralentit au fil du temps."},
                "is_dangerous": {"type": "boolean", "description": "Si 'true', le projectile sera traité comme étant dangereux aux joueurs."},
                "knockback": {"type": "boolean", "description": "Si 'true', le projectile repoussera l'entité qu'il touche."},
                "lightning": {"type": "boolean", "description": "Si 'true', l'entité touchée sera frappée par la foudre."},
                "liquid_inertia": {"type": "number", "description": "La fraction de la vitesse du projectile a maintenu chaque frame lors du déplacement dans l'eau."},
                "multiple_targets": {"type": "boolean", "description": "Permet de définir si le projectile peut toucher plusieurs entités pendant son vol."},
                "offset": {"type": "array", "description": "Définit le décalage par rapport au point d'ancrage de l'entité où le projectile apparaîtra.", "items": [{"type": "number"}, {"type": "number"}, {"type": "number"}]},
                "on_fire_time": {"type": "number", "description": "Temps en secondes auquel l'entité frappée sera en feu."},
                "on_hit": {"type": "object", "description": "Définit les comportemets qui peuvent s'executer lors de l'impact du projectile.", "properties": {
                    "catch_fire": {"type": "boolean", "description": "Détermine si l'entité touchée par le projectile prendra feu ou non."},
                    "definition_event": {"type": "object", "description": "L'evenement qui sera déclenché lors de l'impact.", "properties": {
                        "affect_projectile": {"type": "boolean", "description": "Détermine si le projectile lui-même sera affecté par cet événement."},
                        "affect_shooter": {"type": "boolean", "description": "Détermine si le tireur du projectile sera affecté par cet événement."},
                        "affect_splash_area": {"type": "boolean", "description": "Détermine si toutes les entités dans la zone d'éclaboussure seront affectées par cet événement."},
                        "affect_target": {"type": "boolean", "description": "Détermine si la cible touchée par le projectile sera affectée par cet événement."},
                        "event_trigger": {"type": "object", "description": "L'evenement, la cible et les filtres.", "properties": {
                            "filters": {"description": "Les Filtres d'Entités servant de conditions.", "$ref": "#/definitions/minecraft_filter-ref"},
                            "event": {"type": "string", "description": "L'Evenement à déclencher."},
                            "target": {"type": "string", "description": "La cible qui subira l'Evenement.", "enum": ["block", "damager", "other", "parent", "player", "self", "target"]}
                        }},
                        "splash_area": {"type": "number", "description": "La taille de la zone d'éclaboussure autour du point d'impact."}
                    }},
                    "douse_fire": {"type": "boolean", "description": "Si la cible est en feu, le feu de l'Entité sera éteint."},
                    "freeze_on_hit": {"type": "object", "description": "Permet de spécifier les paramètres pour geler les entités dans une zone donnée lorsque le projectile les touche.", "properties": {
                        "shape": {"type": "string", "description": "Définit la forme de la zone de gel.", "enum": ["sphere", "cube"]},
                        "snap_to_block": {"type": "boolean", "description": "Détermine si la zone de gel est alignée avec les blocs."},
                        "size": {"type": "integer", "description": "La taille de la zone de gel."}
                    }},
                    "grant_xp": {"type": "object", "description": "Permet de définir l'expérience (XP) accordée lorsqu'un projectile touche une cible.", "properties": {
                        "minXP": {"type": "integer", "description": "La quantité minimale d'XP accordée lorsque le projectile touche une cible."},
                        "maxXP": {"type": "integer", "description": "La quantité maximale d'XP accordée lorsque le projectile touche une cible. Si maxXP est spécifié, l'XP accordée sera une valeur aléatoire entre minXP et maxXP."},
                        "flat": {"type": "integer", "description": "Une quantité fixe d'XP accordée lorsque le projectile touche une cible."}
                    }},
                    "hurt_owner": {"type": "object", "description": "Détermine si le propriétaire de l'entité est bléssé lors de l'impact.", "properties": {
                        "owner_damage": {"type": "number"},
                        "knockback": {"type": "boolean"},
                        "ignite": {"type": "boolean"}
                    }},
                    "ignite": {"type": "boolean", "description": "Détermine si un incendie peut être déclenché sur une cible inflammable."},
                    "impact_damage": {"type": "object", "description": "Définit les dégâts que l'entité peut recevoir quand il est touché par ce projectile.", "properties": {
                        "catch_fire": {"type": "boolean", "description": "Détermine si l'entité touchée par le projectile prendra feu ou non."},
                        "channeling": {"type": "boolean", "description": "Si la foudre peut être canalisée à travers l'arme."},
                        "damage": {"description": "Les dommages fait lors de l'impact.", "anyOf": [
                            {"type": "number"},
                            {"type": "array", "items": {"type": "integer"}, "minItems": 2, "maxItems": 2}
                        ]},
                        "destroy_on_hit": {"type": "boolean", "description": "Si le projectile est supprimé lors de l'impact."},
                        "destroy_on_hit_requires_damage": {"type": "boolean", "description": "Si 'true', alors l'impact doit causer des dégâts pour détruire le projectile."},
                        "filter": {"type": "string", "description": "L'identifiant d'une entité qui peut être frappé."},
                        "knockback": {"type": "boolean", "description": "Si 'true', le projectile repoussera l'entité qu'il touche."},
                        "max_critical_damage": {"type": "integer", "description": "Dégâts critiques maximum."},
                        "min_critical_damage": {"type": "integer", "description": "Dégâts critiques minimum."},
                        "power_multiplier": {"type": "number", "description": "De combien les dégâts de base sont multipliés."},
                        "semi_random_diff_damage": {"type": "boolean", "description": "Si 'true', les dégâts seront randomisés en fonction des dégâts et de la vitesse."},
                        "set_last_hurt_requires_damage": {"type": "boolean", "description": "Définit si une frappe doit causer des dégâts pour mettre à jour la propriété last hurt (dernière blessure) de l'entité touchée."}
                    }},
                    "mob_effect": {"type": "object", "description": "La cible reçoit un effet de mob.", "properties": {
                        "amplifier": {"type": "integer", "description": "Le multiplicateur d'amplificatin de cett effet."},
                        "ambient": {"type": "boolean", "description": "Si 'true', un mob apparaitra qui n'est pas hostile."},
                        "duration": {"type": "integer", "description": "La durée de l'effet."},
                        "durationeasy": {"type": "integer", "description": "La durée de l'effet en mode facile"},
                        "durationhard": {"type": "integer", "description": "La durée de l'effet en mode Difficile"},
                        "durationnormal": {"type": "integer", "description": "La durée de l'effet en mode normal"},
                        "effect": {"type": "string", "description": "L'effet de mob à appliquer."},
                        "visible": {"type": "boolean", "description": "L'apparence de l'entité change-t-elle."}
                    }},
                    "on_fire_time": {"type": "number", "description": "Le temps auquel une cible restera en feu."},
                    "particle_on_hit": {"type": "object", "description": "Les particules à faire apparaitre à l'impact.", "properties": {
                        "particle_type": {"type": "string", "description": "L'id de l'effet de particule à faire apparaitre."},
                        "on_other_hit": {"type": "boolean", "description": "S'il doit générer des particules lors d'un coup autre."},
                        "on_entity_hit": {"type": "boolean", "description": "S'il doit générer des particules lors d'un coup sur entité."},
                        "num_particles": {"type": "number", "description": "Le nombre de particules à faire apparaitre."}
                    }},
                    "potion_effect": {"type": "integer", "description": "L'effet de la flèche qui s'appliquera à l'entité frappé."},
                    "remove_on_hit": {"type": "object", "description": "Supprime le projectile."},
                    "spawn_aoe_cloud": {"type": "object", "description": "La potion génère une Area Of Effect Cloud.", "properties": {
                        "affect_owner": {"type": "boolean", "description": "Détermine si le tireur de projectile est affecté."},
                        "color": {"type": "array", "description": "Couleur de particules sous format RGB.", "items": [{"type": "number"}, {"type": "number"}, {"type": "number"}]},
                        "duration": {"type": "integer", "description": "Combien de temps la particule s'émet."},
                        "particle": {"type": "string", "description": "L'émission de particule."},
                        "potion": {"type": "integer", "description": "L'effet de potion."},
                        "radius": {"type": "number", "description": "La zone affectée."},
                        "radius_on_use": {"type": "number", "description": "Définit la zone affecté quand la potion est utilisée."},
                        "reapplication_delay": {"type": "integer", "description": "Délai de ticks entre application de l'effet potion."}
                    }},
                    "spawn_chance": {"type": "object", "description": "Fait apparaitre un entité sur l'impact.", "properties": {
                        "first_spawn_count": {"type": "integer", "description": "Le nombre de nouvelles entités générées."},
                        "first_spawn_percent_chance": {"type": "number", "description": "La probabilité qu'une apparition se produise lorsqu'un projectile frappe l'entité."},
                        "second_spawn_count": {"type": "integer", "description": "Le nombre de nouvelles entités générées lors de la deuxième apparition."},
                        "second_spawn_percent_chance": {"type": "number", "description": "La probabilité qu'une deuxième apparition se produise lorsqu'un projectile touche l'entité."},
                        "spawn_definition": {"type": "string", "description": "L'entité qui sera générée."},
                        "spawn_baby": {"type": "boolean", "description": "Détermine si un bébé apparait."}
                    }},
                    "stick_in_ground": {"type": "object", "description": "Enfonce le projectile dans le sol.", "properties": {
                        "shake_time": {"type": "number", "description": "La durée pendant laquelle il tremblera."}
                    }},
                    "teleport_owner": {"type": "object", "description": "Définit que l'entité lançant ce projectile sera téléporté à l'emplacement de l'impact du projectile."},
                    "thrown_potion_effect": {"type": "object", "description": "Crée une zone d'éclaboussure pour les effets provoqués par une potion lancée."},
                    "wind_burst_on_hit": {"type": "object", "description": "Crée une charge de vent au momoent et au lieu de l'impact du Projectile."}
                }},
                "particle": {"type": "string", "description": "Particule à utiliser en cas de collision."},
                "power": {"type": "number", "description": "Détermine la vitesse du projectile."},
                "reflect_on_hurt": {"type": "boolean", "description": "Permet de définir si le projectile sera renvoyé lorsqu'il touche."},
                "shoot_sound": {"type": "string", "description": "Le son émis lorsque le projectile est tiré."},
                "shoot_target": {"type": "boolean", "description": "Si 'true', le projectile sera tiré vers la cible de l'entité qui le tire."},
                "should_bounce": {"type": "boolean", "description": "Si 'true', le projectile rebondira lorsqu'il sera touché."},
                "splash_potion": {"type": "boolean", "description": "Si 'true', le projectile sera traité comme une splash potion."},
                "splash_range": {"type": "number", "description": "Rayon en blocs de l'effet de splash."},
                "stop_on_hurt": {"type": "boolean", "description": "Détermine si le projectile s'arrête lorsque la cible est blessée."},
                "uncertainty_base": {"type": "number", "description": "Permet de définir la précision de base d'un projectile. Formule pour la précision : uncertaintyBase - difficultyLevel * uncertaintyMultiplier"},
                "uncertainty_multiplier": {"type": "number", "description": "Détermine dans quelle mesure la difficulté du jeu affecte la précision du projectile."}
            }},
            "minecraft:push_through": {"type": "object", "description": "Définit la distance à travers laquelle l'Entité peut se déplacer en repoussant d'autres entités ou des blocs.", "properties": {
                "value": {"type": "number"}
            }},
            "minecraft:pushable": {"type": "object", "description": "Définit ce qui peut pousser l'Entité entre d'autres entités et pistons.", "properties": {
                "is_pushable": {"type": "boolean", "description": "Si l'Entité peut être poussée par d'autres entités."},
                "is_pushable_by_piston": {"type": "boolean", "description": "Si l'Entité peut être poussée par des pistons en toute sécurité."}
            }},
            "minecraft:raid_trigger": {"type": "object", "description": "Tente de déclencher un raid à l'emplacement de l'Entité.", "properties": {
                "triggered_event": {"description": "Événement à exécuter lorsqu'un raid est déclenché.", "$ref": "#/definitions/trigger_event_parameters-ref"}
            }},
            "minecraft:rail_movement": {"type": "object", "description": "Permet de définir le mouvement de l'Entité sur des rails. Une entité avec ce component est limitée à se déplacer uniquement sur des rails.", "properties": {
                "max_speed": {"type": "number", "description": "La vitesse maximale à laquelle cette Entité se déplacera lorsqu'elle est sur le rail."}
            }},
            "minecraft:rail_sensor": {"type": "object", "description": "Définit le comportement de l'Entité lorsqu'elle passe sur un rail activé ou désactivé.", "properties": {
                "check_block_types": {"type": "boolean", "description": "Si 'true', à chaque tick, l'Entité déclenchera son comportement 'on_deactivate'."},
                "eject_on_activate": {"type": "boolean", "description": "Si 'true', l'Entité éjectera tous ses passagers lorsqu'elle passe sur un rail activé."},
                "eject_on_deactivate": {"type": "boolean", "description": "Si 'true', l'Entité éjectera tous ses passagers lorsqu'elle passe sur un rail désactivé."},
                "on_activate": {"description": "Événement à déclencher lorsque le rail est activé.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                "on_deactivate": {"description": "Événement à déclencher lorsque le rail est désactivé.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                "tick_command_block_on_activate": {"type": "boolean", "description": "Si 'true', les blocs de commande commenceront à être activés lorsqu'ils passent sur un rail activé."},
                "tick_command_block_on_deactivate": {"type": "boolean", "description": "Si 'true', les blocs de commande cesseront d'être activés lorsqu'ils passent sur un rail désactivé."}
            }},
            "minecraft:ravager_blocked": {"type": "object", "description": "Définit la réaction d'un ravageur lorsque son attaque au corps-à-corps est bloquée.", "properties": {
                "knockback_strength": {"type": "number", "description": "La force avec laquelle les entités bloquantes doivent être repoussées."},
                "reaction_choices": {"type": "array", "description": "Une liste de réponses pondérées à l'attaque au corps-à-corps bloquée.", "items": {"type": "object", "properties": {
                    "weight": {"type": "integer", "description": "Le poids de chance."},
                    "value": {"description": "L'evenement à déclencher.", "$ref": "#/definitions/trigger_event_parameters-ref"}
                }}}
            }},
            "minecraft:rideable": {"type": "object", "description": "Détermine si l'Entité peut être chevauchée. Permet de spécifier la différentes positions et quantité de sièges.", "properties": {
                "controlling_seat": {"type": "integer", "description": "Le siège qui désigne le conducteur de l'Entité. Ceci n'est observé que par les styles d'équitation cheval/bateau ; les minecarts/entités avec 'minecraft:controlled_by_player' donnent le contrôle à n'importe quel joueur dans n'importe quel siège."},
                "crouching_skip_interact": {"type": "boolean", "description": "Si 'true', l'Entité ne peut pas interagit si l'entité qui interagit avec elle est accroupie."},
                "family_types": {"type": "array", "description": "La liste des familles d'entités qui peuvent chevaucher cette Entité.", "items": {"type": "string"}},
                "interact_text": {"type": "string", "description": "Le texte à afficher lorsque le joueur peut interagir avec l'Entité."},
                "passenger_max_width": {"type": "number", "description": "La largeur maximale qu'une entité peut avoir pour être un passager. Une valeur de 0 ignore ce paramètre."},
                "priority": {"type": "integer", "description": "Ce champ peut exister dans d'anciennes données mais n'est pas utilisé par 'minecraft:rideable'."},
                "pull_in_entities": {"type": "boolean", "description": "Si 'true', l'Entité intégrera les entités qui appartiennent aux types de famille corrects dans tous les sièges disponibles"},
                "rider_can_interact": {"type": "boolean", "description": "Si 'true', l'Entité sera choisie lorsqu'elle sera regardée par le cavalier"},
                "seat_count": {"type": "integer", "description": "Le nombre de sièges."},
                "seats": {"type": "array", "description": "Les paramètres pour chaque siège.", "items": {"type": "object", "properties": {
                    "lock_rider_rotation": {"type": "number", "description": "Angle en degrés qu'un pilote est autorisé à tourner lorsqu'il chevauche cette entité. Omettre cette propriété pour ne pas avoit de limite"},
                    "max_rider_count": {"type": "integer", "description": "Définit le nombre maximum de chevaucheurs pouvant chevaucher sur cette Entité pour que ce siège soit valide."},
                    "min_rider_count": {"type": "integer", "description": "Définit le nombre minimum de chevaucheurs pouvant chevaucher sur cette Entité avant que ce siège puisse être utilisé."},
                    "position": {"type": "array", "description": "Position de ce siège par rapport à la position de cette Entité.", "items": [{"type": "number"}, {"type": "number"}, {"type": "number"}]},
                    "rotate_rider_by": {"description": "Décalage pour faire pivoter les chevaucheurs.", "anyOf": [
                        {"type": "string"},
                        {"type": "number"}
                    ]}
                }}}
            }},
            "minecraft:scale": {"type": "object", "description": "Définit la taille visuelle de l'Entité en mettant à l'échelle la taille du modèle.", "properties": {
                "value": {"type": "number"}
            }},
            "minecraft:scale_by_age": {"type": "object", "description": "Définit l'interpolation de la taille de l'Entité en fonction de l'âge de l'Entité.", "properties": {
                "start_scale": {"type": "number", "description": "Echelle initiale de l'Entité qui vient de naitre."},
                "end_scale": {"type": "number", "description": "Fin de l'échelle de l'Entité lorsqu'elle est complètement développée."}
            }},
            "minecraft:scheduler": {"type": "object", "description": "Initie des événements planifiés pour les entités pendant des événements spécifiques liés au moment de la journée.", "properties": {
                "scheduled_events": {"type": "array", "description": "La liste des déclencheurs qui initient des événements lorsque les conditions correspondent aux critères de filtre donnés. Si plusieurs critères de filtre se chevauchent, le premier événement défini sera sélectionné.", "items": {"type": "object", "properties": {
                    "filters": {"description": "Les conditions sous forme de filtres d'entités.", "$ref": "#/definitions/minecraft_filter-ref"},
                    "event": {"type": "string", "description": "L'Evenement à déclencher."},
                    "target": {"type": "string", "description": "La cible qui subira l'Evenement.", "enum": ["block", "damager", "other", "parent", "player", "self", "target"]}
                }}},
                "min_delay_secs": {"type": "number", "description": "La durée minimale en secondes pendant laquelle le planificateur sera retardé."},
                "max_delay_secs": {"type": "number", "description": "La durée maximale en secondes pendant laquelle le planificateur sera retardé."}
            }},
            "minecraft:shareables": {"type": "object", "description": "Définit une liste d'items que l'Entité souhaite partager ou récupérer.", "properties": {
                "all_items": {"type": "boolean", "description": "Un conteneur pour tous les autres items du jeu. Notez que cette catégorie est toujours prioritaire pour les items de moindre importance."},
                "all_items_max_amount": {"type": "integer", "description": "Nombre maximum de cet Item que l'Entité détiendra."},
                "all_items_surplus_amount": {"type": "integer", "description": "Le nombre de cet Item considéré comme excédentaire que l'Entité souhaite partager."},
                "all_items_want_amount": {"type": "integer", "description": "Le nombre de cet Item que l'Entité souhaite partager."},
                "items": {"type": "array", "description": "Liste des Items que l'Entité souhaite partager.", "items": {"type": "object", "properties": {
                    "admire": {"type": "boolean", "description": "Si 'true', l'Entité admirera l'Item après l'avoir ramassé en le regardant. Pour cela, l'Entité doit avoir un component 'minecraft:admire_item' et un objectif 'minecraft:behavior.admire_item'."},
                    "barter": {"type": "boolean", "description": "Si 'true', l'Entité échangera l'item après l'avoir ramassé. Nécessite que l'Entité possède les components 'minecraft:barter' et 'minecraft:behavior.barter'."},
                    "consume_item": {"type": "boolean", "description": "Détermine si l'Entité consommera l'item ou non."},
                    "craft_into": {"type": "string", "description": "Définit l'Item que l'Entité veut frabriquer avec l'Item défini par 'item'."},
                    "item": {"type": "string", "description": "Le nom de l'Item."},
                    "max_amount": {"type": "integer", "description": "Le nombre maximum de cet Item que l'Entité détiendra."},
                    "pickup_limit": {"type": "integer", "description": "Le nombre maximum de cet Item que l'Entité ramassera lors d'un seul tick d'objectif."},
                    "pickup_only": {"type": "boolean", "description": "Détermine si l'Entité peut seulement ramasser l'Item et non le lâcher."},
                    "priority": {"type": "integer", "description": "Priorise les Items que l'Entité préfère. 0 est la priorité la plus élevée."},
                    "singular_pickup": {"type": "boolean", "description": "Contrôle si l'Entité peut ramasser plus du même Item si elle détient déjà cet Item."},
                    "stored_in_inventory": {"type": "boolean", "description": "Détermine si l'Entité essaiera de mettre l'Item dans son inventaire si elle a le component 'minecraft:inventory', et si l'Item ne peut pasêtre équipée."},
                    "surplus_amount": {"type": "integer", "description": "Le nombre de cet Item considéré comme excédentaire que l'Entité souhaite partager."},
                    "want_amount": {"type": "integer", "description": "Le nombre de cet Item que l'Entité souhaite avoir."}
                }}}
            }},
            "minecraft:shooter": {"type": "object", "description": "Définit le comportement d'attaque de range de l'Entité. Le component 'minecraft:behavior.ranged_attack' utilise ce component pour determiner quels projectiles à tirer.", "properties": {
                "aux_val": {"type": "integer", "description": "L'ID de l'effet de Potion pour le projectile default à être appliqué à l'impact."},
                "def": {"type": "string", "description": "L'entité qui sera utilisé comme projectile pour l'attaque. L'entité doit avoir le component 'projectile' pour être tiré comme un projectile."},
                "magic": {"type": "boolean", "description": "Définit si le projectile utilisé est marqué comme étant 'magic'. Si c'est le cas, l'objectif d'attaque à distance ne sera pas utilisé en même temps que d'autres objectifs magiques, tels que 'minecraft:behavior.drink_potion'"},
                "power": {"type": "number", "description": "Vitesse à laquelle les projectiles seront tirés. Une puissance de 0 sera écrasée par la puissance de lancement de projectile par défaut."},
                "projectiles": {"type": "array", "description": "Liste des projectiles pouvant être utilisés par le tireur. Les projectiles sont évalués dans l'ordre de la liste; une fois qu'un projectile est choisi, le reste de la liste est ignoré.", "items": {"type": "string"}},
                "sound": {"type": "string", "description": "Le Son qui est joué quand le tireur tire un projectile."}
            }},
            "minecraft:sittable": {"type": "object", "description": "Définit l'état 'sit' (assis) de l'Entité.", "properties": {
                "sit_event": {"description": "Evénement à executer lorsque l'Entité entre dans l'état 'sit'.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                "stand_event": {"description": "Evénement à executer lorsque l'Entité quitte dans l'état 'sit'.", "$ref": "#/definitions/trigger_event_parameters-ref"}
            }},
            "minecraft:skin_id": {"type": "object", "description": "Définit la ID Skin de l'Entité. Utilisable pour différentier des skins comme les villageois.", "properties": {
                "value": {"type": "number"}
            }},
            "minecraft:sound_volume": {"type": "object", "description": "Définit le volume de base de l'Entité pour les effets de son.", "properties": {
                "value": {"type": "number"}
            }},
            "minecraft:spawn_entity": {"type": "object", "description": "Ajoute un timer après lequel l'Entité fera apparaitre une autre entité ou un autre item.", "properties": {
                "entities": {"type": "array", "description": "Les entités à faire apparaitre.", "items": {"type": "object", "properties": {
                    "filters": {"description": "L'Entité apparaitra uniquement si les conditions de filtres sont validés.", "$ref": "#/definitions/minecraft_filter-ref"},
                    "max_wait_time": {"type": "integer", "description": "Temps maximum en secondes avant que l'entité apparaissent."},
                    "min_wait_time": {"type": "integer", "description": "Temps minimum en secondes avant que l'entité apparaissent."},
                    "num_to_spawn": {"type": "integer", "description": "Le nombre d'entités de ce type à faire apparaitre."},
                    "should_leash": {"type": "boolean", "description": "Si 'true', l'entité générée sera attaché en laisse à son parent."},
                    "single_use": {"type": "boolean", "description": "Si 'true', ce component fera toujours apparaitre uniquement une fois l'entité spécifié et n'en fera plus jamais apparaitre."},
                    "spawn_entity": {"type": "string", "description": "Identifiant de l'entité à faire apparaitre."},
                    "spawn_event": {"type": "string", "description": "Evenement à déclencher sur l'Entité apparu."},
                    "spawn_item": {"type": "string", "description": "Identifiant de l'Item à faire apparaitre."},
                    "spawn_item_event": {"type": "string", "description": "Evenement à déclencher sur l'Entité parent quand l'Item est généré."},
                    "spawn_method": {"type": "string", "description": "Méthode à utiliser pour faire apparaitre l'entité.", "enum": ["born"]},
                    "spawn_sound": {"type": "string", "description": "Identifiant de l'effet de son à jouer lorsque l'entité est générée."}
                }}}
            }},
            "minecraft:spell_effects": {"type": "object", "description": "Permet à l'Entité de lui ajouter ou enlever des effets de statut.", "properties": {
                "add_effects": {"type": "array", "description": "Liste des effets de statut qui devrait être ajouté à l'Entité quand ce component lui est appliqué.", "items": {"type": "object", "properties": {
                    "effect": {"type": "string", "description": "L'effet de statut à ajouter."},
                    "duration": {"type": "number", "description": "Temps en secondes de la durée de l'effet."},
                    "amplifier": {"type": "integer", "description": "Le niveau de l'effet de statut."},
                    "ambient": {"type": "boolean", "description": "Définit si les particules de l'effet sont semi-transparentes. NE FONCTIONNE PAS."},
                    "visible": {"type": "boolean", "description": "Définit si les particules de l'effet sont visibles."},
                    "display_on_screen_animation": {"type": "boolean", "description": "Si 'true', l'application de cet effet affiche un graphique animé à l'écran similaire à l'effet totem de l'immortalité."}
                }}},
                "remove_effects": {"description": "Les effets de statut de l'entité à lui enlever.", "oneOf": [
                    {"type": "array", "items": {"type": "string"}},
                    {"type": "string"}
                ]}
            }},
            "minecraft:strength": {"type": "object", "description": "Définit la capacité d'une entité à porter des items.", "properties": {
                "value": {"type": "integer", "description": "La valeur initiale de la force de l'Entité."},
                "max": {"type": "integer", "description": "La force maximale de l'Entité."}
            }},
            "minecraft:suspect_tracking": {"type": "object", "description": "Permet à l'Entité de mémoriser les emplacements où il a détecté des activités suspectes ou des sons."},
            "minecraft:tameable": {"type": "object", "description": "Définit l'Entité comme étant apprivoisable par un joueur.", "properties": {
                "probability": {"type": "number", "description": "La probabilité d'apprivoiser l'Entité avec chaque utilisation d'item entre 0.0 et 1.0."},
                "tame_event": {"description": "Evenement à executer quand l'Entité devient apprivoisé.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                "tame_items": {"type": "array", "description": "Les Items pouvant être utilisés pour apprivoiser l'Entité.", "items": {"type": "string"}}
            }},
            "minecraft:tamemount": {"type": "object", "description": "Permet à l'Entité d'être apprivoisée en la montant.", "properties": {
                "attempt_temper_mod": {"type": "integer", "description": "La quantité d'humeur de l'Entité augmentera une fois montée."},
                "auto_reject_items": {"type": "array", "description": "Liste des Items qui, s'ils sont portés lors d'une interaction avec l'Entité, le mettront en colère.", "items": {"type": "object", "properties": {
                    "item": {"type": "string", "description": "L'Item."}
                }}},
                "feed_items": {"type": "array", "description": "Les Items qui peuvent être utilisés pour augmenter l'humeur de l'Entité et accélerer le processus d'apprivoisenement.", "items": {"type": "object", "properties": {
                    "item": {"type": "string", "description": "L'Item."},
                    "temper_mod": {"type": "integer", "description": "La quantité d'humeur que cette Entité gagne lorsqu'elle est nourrie avec cet Item."}
                }}},
                "feed_text": {"type": "string", "description": "Le texte qui s'affiche dans le bouton d'interaction d'alimentation."},
                "max_temper": {"type": "integer", "description": "La valeur maximale du tempérament de départ aléatoire de l'Entité."},
                "min_temper": {"type": "integer", "description": "La valeur minimale du tempérament de départ aléatoire de l'Entité."},
                "ride_text": {"type": "string", "description": "Le texte qui s'affiche dans le bouton d'interaction de chevauchement."},
                "tame_event": {"description": "Evenement à executer quand l'Entité devient apprivoisé.", "$ref": "#/definitions/trigger_event_parameters-ref"}
            }},
            "minecraft:target_nearby_sensor": {"type": "object", "description": "Définit la portée de l'Entité dans laquelle elle peut voir ou détecter d'autres entités pour les cibler.", "properties": {
                "inside_range": {"type": "number", "description": "Distance maximale en blocs auquelle une autre entité sera considéré à l'intérieur de la porté."},
                "must_see": {"type": "boolean", "description": "Si l'autre entité a beoin d'être visible pour déclencher les evenements 'inside'."},
                "on_inside_range": {"description": "Evénement à déclencher lorsque une entité entre dans la portée définie.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                "on_outside_range": {"description": "Evénement à déclencher lorsque une entité sort de la portée définie.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                "on_vision_lost_inside_range": {"description": "Evénement à déclencher lorsque une entité quitte la portée visuelle.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                "outside_range": {"type": "number", "description": "Distance maximale en blocs auquelle une autre entité sera considéré en dehors de la portée."}
            }},
            "minecraft:teleport": {"type": "object", "description": "Définit le comportement de téléportation de l'Entité.", "properties": {
                "dark_teleport_chance": {"type": "number", "description": "Modifie la chance auquelle l'Entité se téléportera si l'Entité est dans l'obscurité."},
                "light_teleport_chance": {"type": "number", "description": "Modifie la chance auquelle l'Entité se téléportera si l'Entité est à la lumière du jour."},
                "max_random_teleport_time": {"type": "number", "description": "Durée maximale en secondes entre les téléportations aléatoires."},
                "min_random_teleport_time": {"type": "number", "description": "Durée minimale en secondes entre les téléportations aléatoires."},
                "random_teleport_cube": {"type": "array", "description": "L'Entité se téléportera à une position aléatoire dans la zone spécifié.", "items": [{"type": "number"}, {"type": "number"}, {"type": "number"}]},
                "random_teleports": {"type": "boolean", "description": "Défini si l'Entité se téléporte aléatoirement."},
                "target_distance": {"type": "number", "description": "Distance maximale auquelle l'Entité se téléportera quand il chase une cible."},
                "target_teleport_chance": {"type": "number", "description": "La chance auquelle l'Entité se téléportera quand il chasse une cible entre 0.0 et 1.0"}
            }},
            "minecraft:tick_world": {"type": "object", "description": "Définit si l'Entité met à jour le monde autour d'elle et le rayon de cette mise à jour.", "properties": {
                "distance_to_players": {"type": "number", "description": "La distance auquelle le joueur le plus proche doit être avant l'Entité disparaissent. Ignoré si 'never_despawn' est définit sur 'true'. Min : 128 blocs"},
                "never_despawn": {"type": "boolean", "description": "Si 'true', l'Entité ne disparaitra pas si les joueurs sont loin de l'Entité."},
                "radius": {"type": "integer", "description": "La taille de la zone autour de l'Entité qui sera mis à jour. Doit être entre 2 et 6."}
            }},
            "minecraft:timer": {"type": "object", "description": "Ajoute un Timer qui executera un événement.", "properties": {
                "looping": {"type": "boolean", "description": "Si 'true', le Timer recommencera à chaque fois que l'événement s'executera."},
                "randomInterval": {"type": "boolean", "description": "Si 'true', la durée de la minuterie sera aléatoire entre les valeurs min et max spécifiées dans le temps."},
                "random_time_choices": {"type": "array", "description": "Une liste d'objets, représentant chacun une valeur en secondes qui peut être choisi avant d'initier l'événement avec un poids de chance. Incompactible avec 'time'.", "items": {"type": "object", "properties": {
                    "weight": {"type": "number", "description": "Le poids de chance."},
                    "value": {"type": "number", "description": "Le temps en secondes."}
                }}},
                "time": {"type": "array", "description": "Temps en secondes pour le Timer. Incompatible avec 'random_time_choices'.",  "items": [{"type": "number"}, {"type": "number"}]},
                "time_down_event": {"description": "Contient l'évenement à initier quand le timer tombe à 0.", "$ref": "#/definitions/trigger_event_parameters-ref"}
            }},
            "minecraft:trade_resupply": {"type": "object", "description": "Réapprovisionne le commerce de l'Entité."},
            "minecraft:trade_table": {"type": "object", "description": "Permet de définir la capacité de l'Entité à commercer avec les joueurs.", "properties": {
                "convert_trades_economy": {"type": "boolean", "description": "Détermine si, lors de la transformation de l'entité, les échanges doivent être convertis si la nouvelle entité a également une 'economy_trade_table'. Les échanges seront recréés avec la nouvelle table de commerce, mais essayeront de conserver les mêmes enchantements et données utilisateur."},
                "display_name": {"type": "string", "description": "Le nom à afficher lors du commerce avec l'Entité."},
                "new_screen": {"type": "boolean", "description": "Détermine si le commerce avec l'entité ouvre le nouvel écran de commerce."},
                "persist_trades": {"type": "boolean", "description": "Détermine si les échanges doivent persister lorsque l'Entité se transforme. Cela permet de conserver les échanges lors des transformations futures vers une entité avec une table de commerce."},
                "table": {"type": "string", "description": "Le chemin d'accès à la table de Trading."}
            }},
            "minecraft:trail": {"type": "object", "description": "Amène l'Entité à laisser un chemin de blocs quand il bouge dans le monde.", "properties": {
                "block_type": {"description": "Le type de bloc qui sera placé.", "anyOf": [
                    {"type": "object", "properties": {
                        "name": {"type": "string", "description": "Le nom du Bloc."},
                        "states": {"type": "array", "items": {"type": "object"}, "description": "La paire état de Bloc et sa valeur."},
                        "tags": {"type": "string", "description": "Le tag de Bloc exprimé en Molang."}
                    }},
                    {"type": "string"}
                ]},
                "spawn_filter": {"description": "Les conditions qui doivent être validées pour amener le bloc choisi à apparaitre.", "$ref": "#/definitions/minecraft_filter-ref"},
                "spawn_offset": {"type": "array", "description": "La distance par rapport à la position actuelle de l'Entité où le bloc sera généré. Limité à une distance de 16 blocs.", "items": [{"type": "number"}, {"type": "number"}, {"type": "number"}]}
            }},
            "minecraft:transformation": {"type": "object", "description": "Définit la transformation de l'Entité de son type actuel en un autre.", "properties": {
                "add": {"type": "object", "description": "La liste des component_groups à ajouter à la nouvelle Entité.", "properties": {
                    "component_groups": {"type": "array", "description": "Les component_groups.", "items": {"type": "string"}}
                }},
                "begin_transform_sound": {"type": "string", "description": "Le son à joue quand la transformation commence."},
                "drop_equipment": {"type": "boolean", "description": "Amène l'Entité à drop tout son équipement lors de la transformation."},
                "drop_inventory": {"type": "boolean", "description": "Amène l'Entité à drop tout ses Items de son inventaire lors de la transformation."},
                "into": {"type": "string", "description": "L'identifiant de la nouvelle Entité après la transformation."},
                "keep_level": {"type": "boolean", "description": "Si l'Entité a des échanges et les a augmenté en niveaux, ce niveau sera maintenu après la transformation."},
                "keep_owner": {"type": "boolean", "description": "Si l'Entité est possédé par une autre entité, alors elle restera toujours possédé par celle-ci après la transformation."},
                "preserve_equipment": {"type": "boolean", "description": "Amène l'Entité à garder son équipement après la transformation."},
                "transformation_sound": {"type": "string", "description": "Le son à jouer une fois la transformation achevée."},
                "delay": {"type": "object", "description": "Définit les propriétés du delai de transformation.", "properties": {
                    "block_assist_chance": {"type": "number", "description": "Chance que l'Entité cherche des blocs à proximité pour accélérer la transformation. La valeur doit être comprise entre 0.0 et 1.0."},
                    "block_chance": {"type": "number", "description": "Chance qu'une fois un bloc trouvé, il aide à accélérer la transformation."},
                    "block_max": {"type": "integer", "description": "Nombre maximal de blocs que l'Entité cherchera pour aider à la transformation. Si non défini ou défini à 0, il sera défini en fonction du rayon de bloc."},
                    "block_radius": {"type": "integer", "description": "Distance en blocs que l'Entité cherchera pour trouver des blocs qui peuvent aider à la transformation."},
                    "block_types": {"type": "array", "description": "Liste des blocs qui peuvent aider à la transformation de cette entité.", "items": {"anyOf": [
                        {"type": "object", "properties": {
                            "name": {"type": "string", "description": "Le nom du Bloc."},
                            "states": {"type": "array", "items": {"type": "object"}, "description": "La paire état de Bloc et sa valeur."},
                            "tags": {"type": "string", "description": "Le tag de Bloc exprimé en Molang."}
                        }},
                        {"type": "string"}
                    ]}},
                    "range_max": {"type": "number", "description": "Temps en secondes à ajouter pour avoir le temps maximum aléatoire avant que l'Entité ne se transforme."},
                    "range_min": {"type": "number", "description": "Temps en secondes à ajouter pour avoir le temps minimum aléatoire avant que l'Entité ne se transforme."},
                    "value": {"type": "number", "description": "Temps en secondes avant que l'Entité ne se transforme."}
                }}
            }},
            "minecraft:transient": {"type": "object", "description": "Fait en sorte que cette Entoité disparaitra à jamais une fois qu'elle soit déchargée du monde."},
            "minecraft:trust": {"type": "object", "description": "Oblige l'Entité à faire confiance à un ou plusieurs joueurs."},
            "minecraft:trusting": {"type": "object", "description": "Définit les règles permettant à l'Entité de faire confiance aux joueurs.", "properties": {
                "probability": {"type": "number", "description": "La chance de lEntité de faire confiance à chaque utilisation d'Item. Entre 0.0 et 1.0."},
                "trust_event": {"description": "Evenement à executer quand l'Entité fait confiance au joueur.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                "trust_items": {"type": "array", "description": "La liste des Items qui peuvent être utilisés de amener l'Entité à faire confiance aux joueurs.", "items": {"type": "string"}}
            }},
            "minecraft:type_family": {"type": "object", "description": "Définit à quelles familles cette Entité appartient.", "properties": {
                "family": {"type": "array", "items": {"type": "string"}}
            }},
            "minecraft:underwater_movement": {"type": "object", "description": "Définit la vitesse avec laquelle l'Entité peut se déplacer dans l'eau.", "properties": {
                "value": {"type": "number", "description": "Le vitesse."}
            }},
            "minecraft:variable_max_auto_step": {"type": "object", "description": "Permet aux Entités d'avoir une hauteur de pas automatique maximale qui est différente selon qu'elles se trouvent ou non sur un bloc qui empêche le saut. Incompatible avec 'runtime_identifier': 'minecraft:horse'.", "properties": {
                "base_value": {"type": "number", "description": "La hauteur de marche automatique maximale sur n'importe quel autre bloc."},
                "controlled_value": {"type": "number", "description": "La hauteur de marche automatique maximale lorsque vous êtes sur n'importe quel autre bloc et contrôlée par le joueur."},
                "jump_prevented_value": {"type": "number", "description": "La hauteur de marche automatique maximale lorsque vous êtes sur un bloc qui empêche de sauter."}
            }},
            "minecraft:variant": {"type": "object", "description": "Utilisé pour définir la variante de l'Entité.", "properties": {
                "value": {"type": "integer", "description": "La valeur de la variante."}
            }},
            "minecraft:vibration_damper": {"type": "object", "description": "Les vibrations émises par cette Entité seront ignorés."},
            "minecraft:vibration_listener": {"type": "object", "description": "Définit que l'Entité écoute les vibrations."},
            "minecraft:walk_animation_speed": {"type": "object", "description": "Définit le multiplicateur de vitesse pour la vitesse d'animation de marche de cette Entité.", "properties": {
                "value": {"type": "number"}
            }},
            "minecraft:wants_jockey": {"type": "object", "description": "Définit que l'Entité veut être un Jockey."},
            "minecraft:water_movement": {"type": "object", "description": "Définit la vitesse de nage de l'Entité à la surface de l'eau.", "properties": {
                "drag_factor": {"type": "number", "description": "Facteur de traînée pour déterminer la vitesse de déplacement dans l'eau."}
            }},
            "minecraft:behavior.admire_item": {"type": "object", "description": "Oblige l'Entité à admirer un Item qu'elle tient.", "properties": {
                "admire_item_sound": {"type": "string", "description": "Le son à jouer lors de l'admiration de l'Item."},
                "sound_interval": {"type": "array", "description": "La portée de temps en secondes à attendre aléatoirement avant de rejouer le son.", "items": [{"type": "number"}, {"type": "number"}]},
                "on_admire_item_start": {"description": "L'événement à executer quand l'Entité commence à admirer l'Item.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                "on_admire_item_stop": {"description": "L'événement à executer quand l'Entité arrête d'admirer l'Item.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."}
            }},
            "minecraft:behavior.avoid_block": {"type": "object", "description": "Oblige l'Entité à éviter certains blocs.", "properties": {
                "avoid_block_sound": {"type": "string", "description": "Le son à jouer quand l'Entité est train d'éviter un bloc."},
                "on_escape": {"description": "L'événement à executer lors de la fuite.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "search_height": {"type": "object", "description": "Distance maximale pour rechercher un bloc en Y."},
                "search_range": {"type": "object", "description": "Distance maximale pour rechercher un bloc en XZ."},
                "sound_interval": {"type": "array", "description": "La portée de temps en secondes à attendre aléatoirement avant de rejouer le son.", "items": [{"type": "number"}, {"type": "number"}]},
                "sprint_speed_modifier": {"type": "number", "description": "Modificateur de la vitesse de sprint."},
                "target_blocks": {"type": "array", "description": "Liste des blocs que l'Entité évitera.", "anyOf": [
                    {"type": "object", "properties": {
                        "name": {"type": "string", "description": "Le nom du Bloc."},
                        "states": {"type": "array", "items": {"type": "object"}, "description": "La paire état de Bloc et sa valeur."},
                        "tags": {"type": "string", "description": "Le tag de Bloc exprimé en Molang."}
                    }},
                    {"type": "string"}
                ]},
                "target_selection_method": {"type": "string", "description": "La méthode de recherche de bloc.", "enum": ["nearest", "random"]},
                "tick_interval": {"type": "integer", "description": "Intervalle de tick pour vérifier ce comportement."},
                "walk_speed_modifier": {"type": "number", "description": "Modificateur de la vitesse de marche."}
            }},
            "minecraft:behavior.avoid_mob_type": {"type": "object", "description": "Oblige l'Entité à fuire les types d'entités spécifiés.", "properties": {
                "avoid_mob_sound": {"type": "string", "description": "Le son à jouer quand l'Entité est train de fuir une entité."},
                "avoid_target_xz": {"type": "integer", "description": "La prochaine position cible que l'Entité choisit pour éviter une autre entité sera choisie dans cette distance XZ."},
                "avoid_target_y": {"type": "integer", "description": "La prochaine position cible que l'Entité choisit pour éviter une autre entité sera choisie dans cette distance Y."},
                "check_if_outnumbered": {"type": "boolean", "description": "Définit si l'Entité fuiera si elle est en infériorité numérique."},
                "entity_types": {"type": "array", "description": "Les entités à fuire.", "items": {"type": "object", "properties": {
                    "filters": {"description": "Les filtres de test pour l'entité à fuir.", "$ref": "#/definitions/minecraft_filter-ref"},
                    "avoid_mob_sound": {"type": "string", "description": "Le son à jouer quand l'Entité est train de fuir une entité."},
                    "avoid_target_xz": {"type": "integer", "description": "La prochaine position cible que l'Entité choisit pour éviter une autre entité sera choisie dans cette distance XZ."},
                    "avoid_target_y": {"type": "integer", "description": "La prochaine position cible que l'Entité choisit pour éviter une autre entité sera choisie dans cette distance Y."},
                    "check_if_outnumbered": {"type": "boolean", "description": "Définit si l'Entité fuiera si elle est en infériorité numérique."},
                    "ignore_visibility": {"type": "boolean", "description": "S'il faut ou non ignorer la ligne de vue directe pendant que cette Entité fuit d'autres entités spécifiées."},
                    "max_dist": {"type": "number", "description": "Distance maximale pour rechercher une cible à éviter pour l'Entité."},
                    "max_flee": {"type": "number", "description": "À combien de blocs de sa cible à éviter l'Entité doit-elle se trouver pour qu'elle cesse de fuir la cible à éviter."},
                    "on_escape_event": {"description": "Evénément à executer quand l'Entité a fuit l'autre entité.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                    "probability_per_strength": {"type": "number", "description": "Pourcentage de chances que cette entité cesse d'éviter une autre entité en fonction de la force de cette Entité."},
                    "remove_target": {"type": "boolean", "description": "Déterminez si nous devons ou non retirer la cible lors de la fuite."},
                    "sound_interval": {"type": "array", "description": "La portée de temps en secondes à attendre aléatoirement avant de rejouer le son.", "items": [{"type": "number"}, {"type": "number"}]},
                    "sprint_distance": {"type": "number", "description": "Combien de blocs à portée de sa cible à éviter l'Entité doit-elle se trouver pour qu'elle puisse commencer à sprinter loin de la cible à éviter."},
                    "sprint_speed_modifier": {"type": "number", "description": "Modificateur de la vitesse de sprint."},
                    "walk_speed_modifier": {"type": "number", "description": "Modificateur de la vitesse de marche."}
                }}},
                "ignore_visibility": {"type": "boolean", "description": "S'il faut ou non ignorer la ligne de vue directe pendant que cette Entité fuit d'autres entités spécifiées."},
                "max_dist": {"type": "number", "description": "Distance maximale pour rechercher une cible à éviter pour l'Entité."},
                "max_flee": {"type": "number", "description": "À combien de blocs de sa cible à éviter l'Entité doit-elle se trouver pour qu'elle cesse de fuir la cible à éviter."},
                "on_escape_event": {"description": "Evénément à executer quand l'Entité a fuit l'autre entité.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "probability_per_strength": {"type": "number", "description": "Pourcentage de chances que cette entité cesse d'éviter une autre entité en fonction de la force de cette Entité."},
                "remove_target": {"type": "boolean", "description": "Déterminez si nous devons ou non retirer la cible lors de la fuite."},
                "sound_interval": {"type": "array", "description": "La portée de temps en secondes à attendre aléatoirement avant de rejouer le son.", "items": [{"type": "number"}, {"type": "number"}]},
                "sprint_distance": {"type": "number", "description": "Combien de blocs à portée de sa cible à éviter l'Entité doit-elle se trouver pour qu'elle puisse commencer à sprinter loin de la cible à éviter."},
                "sprint_speed_modifier": {"type": "number", "description": "Modificateur de la vitesse de sprint."},
                "walk_speed_modifier": {"type": "number", "description": "Modificateur de la vitesse de marche."}
            }},
            "minecraft:behavior.barter": {"type": "object", "description": "Permet à l'Entité d'échanger des Items. Nécessite le component 'minecraft:barter'.", "properties": {
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."}
            }},
            "minecraft:behavior.beg": {"type": "object", "description": "Permet à l'Entité de regarder et de suivre le joueur qui détient la nourriture qu'il aime.", "properties": {
                "items": {"type": "array", "description": "Les Items.", "items": {"type": "string"}},
                "look_distance": {"type": "number", "description": "Distance en blocs auquelle l'Entité mendiera."},
                "look_time": {"type": "array", "description": "La durée en secondes pendant laquelle l'Entité regardera le joueur tenant un aliment qu'il aime, le suppliant.", "items": [{"type": "number"}, {"type": "number"}]},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."}
            }},
            "minecraft:behavior.break_door": {"type": "object", "description": "Permet à l'Entité de cassé les portes.", "properties": {
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."}
            }},
            "minecraft:behavior.breed": {"type": "object", "description": "Permet à l'Entité de se reproduire avec d'autres entités qui ont été assignés. Nécessite le component 'minecraft:breedable'.", "properties": {
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "speed_multiplier": {"type": "number", "description": "Multiplicateur de vitesse de déplacement de l'Entité lors de l'utilisation de cet AI Goal."}
            }},
            "minecraft:behavior.celebrate": {"type": "object", "description": "Permet à l'Entité de célébrer en faisant des sons de célébrations et en sautant.", "properties": {
                "celebration_sound": {"type": "string", "description": "Le son à jouer durant la célébration."},
                "duration": {"type": "number", "description": "La durée en secondes de la célébration."},
                "jump_interval": {"type": "array", "description": "Temps minimum et maximum de temps entre chaque saut en secondes."},
                "on_celebration_end_event": {"description": "L'événement à déclencher quand la durée de la célébration est finie.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "sound_interval": {"type": "array", "description": "Temps minimum et maximum en secondes entre chaque lecture du son."}
            }},
            "minecraft:behavior.celebrate_survive": {"type": "object", "description": "Permet à l'Entité de célébré d'avoir survécu en lançant des feux d'artifices.", "properties": {
                "celebration_sound": {"type": "string", "description": "Le son à jouer durant la célébration."},
                "duration": {"type": "number", "description": "La durée en secondes de la célébration."},
                "jump_interval": {"type": "array", "description": "Temps minimum et maximum de temps entre chaque saut en secondes."},
                "on_celebration_end_event": {"description": "L'événement à déclencher quand la durée de la célébration est finie.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "sound_interval": {"type": "array", "description": "Temps minimum et maximum en secondes entre chaque lecture du son."}
            }},
            "minecraft:behavior.charge_attack": {"type": "object", "description": "Permet à l'Entité de faire des dégâts à une cible en utilisant une attaque 'running'.", "properties": {
                "max_distance": {"type": "number", "description": "Une attaque de charge ne peut pas commencer si la cible se trouve à une distance plus grande de celle spécifiée ici."},
                "min_distance": {"type": "number", "description": "Une attaque de charge ne peut pas commencer si la cible se trouve à une distance plus petite de celle spécifiée ici."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "speed_multiplier": {"type": "number", "description": "Multiplicateur de la vitesse de l'Entité quand elle charge tout droit vers la cible."},
                "success_rate": {"type": "number", "description": "Pourcentage de chance que l'Entité commencera une attaque de charge si elle n'attaque pas déjà."}
            }},
            "minecraft:behavior.charge_held_item": {"type": "object", "description": "Permet à l'Entité de charger et utiliser son item tenu.", "properties": {
                "items": {"type": "array", "description": "Les Items avec lesquelles l'Entité peut charger", "items": {"type": "string"}},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."}
            }},
            "minecraft:behavior.circle_around_anchor": {"type": "object", "description": "Amène l'Entité à tourner autour d'un point d'ancrage à proximité d'un point ou d'une cible.", "properties": {
                "angle_change": {"type": "number", "description": "Nombre de degrés pour modifier l'orientation de cette Entité, lorsque l'Entité sélectionne son prochain point d'ancrage."},
                "goal_radius": {"type": "number", "description": "Distance maximale depuis le point d'ancrage à laquelle cette Entité considère avoir atteint le point d'ancrage. Il s'agit d'empêcher l'Entité de rebondir en essayant d'atteindre un endroit spécifique."},
                "height_above_target_range": {"type": "array", "description": "Le nombre de blocs au-dessus de la cible auquel le prochain point d'ancrage peut être défini. Cette valeur est utilisée uniquement lorsque l'Entité suit une cible.", "items": [{"type": "number"}, {"type": "number"}]},
                "height_adjustment_chance": {"type": "number", "description": "Pourcentage de chance de déterminer à quelle fréquence augmenter ou diminuer la hauteur actuelle autour du point d'ancrage."},
                "height_offset_range": {"type": "array", "description": "Distance verticale du point d'ancrage dans laquelle cette Entité doit rester, une fois l'ajustement de la hauteur réussi.", "items": [{"type": "number"}, {"type": "number"}]},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "radius_adjustment_chance": {"type": "number", "description": "Pourcentage de chance de déterminer à quelle fréquence augmenter la taille du rayon de mouvement actuel autour du point d'ancrage."},
                "radius_change": {"type": "number", "description": "Le nombre de blocs pour augmenter le rayon de mouvement actuel, en cas de succès de 'radius_adjustment_chance'. Si le rayon actuel augmente au-delà du maximum de la plage, le rayon actuel sera ramené au minimum de la plage et l'Entité changera entre le mouvement dans le sens des aiguilles d'une montre et dans le sens inverse des aiguilles d'une montre."},
                "radius_range": {"type": "array", "description": "Distance horizontale à partir du point d'ancrage dans laquelle cette Entité doit rester en cas d'ajustement réussi du rayon.", "items": [{"type": "number"}, {"type": "number"}]},
                "speed_multiplier": {"type": "number", "description": "Multiplie la vitesse à laquelle l'Entité traverse jusqu'à sa prochaine position désiré."}
            }},
            "minecraft:behavior.controlled_by_player": {"type": "object", "description": "Permet à l'Entité d'être contrôlable par le joueur en utilisant un Item. A chaque tick, l'Entité essaiera de rotationner vers la direction que le joueur regarde quand il controle l'Entité. Nécessite les components : 'minecraft:item_controllable', 'minecraft:movement', 'minecraft:rideable'", "properties": {
                "fractional_rotation": {"type": "number", "description": "L'entité tentera de tourner pour faire face à l'endroit où le joueur fait face à chaque tick. L'entité ciblera ce pourcentage de sa différence dans ses angles d'orientation actuels à chaque tick. Ceci est limité par FractionalRotationLimit. Une valeur de 0,0 fera que l'entité ne se tournera plus vers l'endroit où le joueur fait face."},
                "fractional_rotation_limit": {"type": "number", "description": "Limite le nombre total de degrés auxquels l'Entité peut pivoter vers l'endroit où le joueur fait face à chaque tick."},
                "mount_speed_multiplier": {"type": "number", "description": "Multiplicateur de la vitesse de l'Entité quand elle est controllé par le joueur."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."}
            }},
            "minecraft:behavior.croak": {"type": "object", "description": "Permet à l'Entité de croasser à un interval de temps aléatoire avec des conditions.", "properties": {
                "duration": {"type": "array", "description": "Plage aléatoiire en secondes après que le croassement s'arrete.", "items": [{"type": "number"}, {"type": "number"}]},
                "filters": {"description": "Conditions pour que ce comportement commence et continue à être exécuter. L'intervalle entre les executions commence seulement après la validation des filtres.", "$ref": "#/definitions/minecraft_filter-ref"},
                "interval": {"type": "array", "description": "Plage aléatoire en secondes entre chaque executions de ce comportement."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."}
            }},
            "minecraft:behavior.defend_trusted_target": {"type": "object", "description": "Oblige l'Entité à réagir avec un événement lorsqu'une cible de confiance est attaquée. Nécessite le component 'minecraft:trust'.", "properties": {
                "entity_types": {"type": "array", "description": "Liste des types d'entités que l'Entité considère comme des cibles valides.", "items": {"type": "object", "properties": {
                    "cooldown": {"type": "number", "description": "Le temps en secondes que l'Entité doit attendre avant de selectionner à nouveau une cible du même type."},
                    "filters": {"description": "Les filtres de test pour les entités.", "$ref": "#/definitions/minecraft_filter-ref"},
                    "max_dist": {"type": "number", "description": "Distance maximale pour que cette Entité soit un choix valide."},
                    "must_see": {"type": "boolean", "description": "Si 'true', l'Entité doit être visible pour être un choix valide."},
                    "must_see_forget_duration": {"type": "number", "description": "Détermine le temps en secondes pendant lequel cette Entité cherchera une cible avant de l'oublier et d'en chercher une nouvelle lorsque la cible n'est plus visible."},
                    "reevaluate_description": {"type": "boolean", "description": "Si 'true', l'Si c'est vrai, la cible cessera d'être ciblée si elle ne remplit plus les conditions."},
                    "sprint_speed_modifier": {"type": "number", "description": "Modificateur de la vitesse de sprint."},
                    "walk_speed_modifier": {"type": "number", "description": "Modificateur de la vitesse de marche."}
                }}},
                "aggro_sound": {"type": "string", "description": "Son à jouer occasionnellement en défendant."},
                "attack_interval": {"type": "integer", "description": "Temps en secondes entre chaque attaque."},
                "cooldown": {"type": "number", "description": "Le temps en secondes que l'Entité doit attendre avant de selectionner à nouveau une cible du même type."},
                "max_dist": {"type": "number", "description": "Distance maximale pour que cette Entité soit un choix valide."},
                "must_see": {"type": "boolean", "description": "Si 'true', l'Entité doit être visible pour être un choix valide."},
                "must_see_forget_duration": {"type": "number", "description": "Détermine le temps en secondes pendant lequel cette Entité cherchera une cible avant de l'oublier et d'en chercher une nouvelle lorsque la cible n'est plus visible."},
                "reevaluate_description": {"type": "boolean", "description": "Si 'true', l'Si c'est vrai, la cible cessera d'être ciblée si elle ne remplit plus les conditions."},
                "on_defend_start": {"description": "Evénement qui se passe avec la cible quand la défense commence.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "sound_chance": {"type": "number", "description": "Probabilité que le son se jouera."},
                "within_radius": {"type": "number", "description": "Distance en blocs que la cible peut être dedans pour lancer une attaque."}
            }},
            "minecraft:behavior.defend_village_target": {"type": "object", "description": "Oblige l'Entité à rester dans un village et défendre le village des aggresseurs. Si le joueur se comporte mal dans le village, l'Entité attaquera le joueur sans prendre en compte les conditions de filtres.", "properties": {
                "attack_chance": {"type": "number", "description": "Le pourcentage de chance que l'Entité attaque les aggresseurs de son village."},
                "entity_types": {"type": "object", "description": "Filtre d'entités pour déterminer À quels cibles ce comportement s'affecte.", "properties": {
                    "filters": {"description": "Les filtres d'entités.", "$ref": "#/definitions/minecraft_filter-ref"}
                }},
                "must_reach": {"type": "boolean", "description": "Si l'Entité doit être capable d'atteindre l'attaquant."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."}
            }},
            "minecraft:behavior.delayed_attack": {"type": "object", "description": "Permet à l'Entité d'attaquer tout en retardant les dégâts infligés jusqu'à un moment précis dans l'animation d'attaque.", "properties": {
                "attack_duration": {"type": "number", "description": "L'animation d'attaque de l'Entité se jouera sur cette durée en secondes. Contrôle également le temps de recharge de l'attaque."},
                "attack_once": {"type": "boolean", "description": "Permet à l'Entité d'utiliser ce comportement d'attaque, une seule fois seulement."},
                "attack_types": {"description": "Définit les types d'Entités que cette Entité attaquera.", "anyOf": [
                    {"type": "string"},
                    {"type": "array", "items": {"type": "string"}}
                ]},
                "can_spread_on_fire": {"type": "boolean", "description": "Si l'Entité est en feu, celà permet à la cible de l'Entité d'être en feu quand elle se fait attaquer."},
                "cooldown_time": {"type": "number", "description": "Temps de cooldown en secondes entre chaque attaque."},
                "hit_delay_pct": {"type": "number", "description": "Le pourcentage dans l'animation d'attaque pour appliquer les dégâts de l'attaque."},
                "inner_boundary_time_increase": {"type": "number", "description": "Temps (en secondes) à ajouter au recalcul du chemin d'attaque lorsque la cible est au-delà du 'path_inner_boundary'."},
                "max_dist": {"type": "number", "description": "PAS DE DOCUMENTATION."},
                "max_path_time": {"type": "number", "description": "Temps de base maximum (en secondes) pour recalculer le nouveau chemin d'attaque vers la cible (avant application des augmentations)."},
                "melee_fov": {"type": "number", "description": "Champ de vision (en degrés) lors de l'utilisation du compoent sensing pour détecter une cible d'attaque."},
                "min_path_time": {"type": "number", "description": "Temps de base maximum (en secondes) pour recalculer le nouveau chemin d'attaque vers la cible (avant application des augmentations)."},
                "on_attack": {"description": "Evenement à déclencher quand l'Entité attaque sa cible avec succès.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                "on_kill": {"description": "Evenement à déclencher quand l'Entité tue sa cible avec succès.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                "outer_boundary_time_increase": {"type": "number", "description": "Temps (en secondes) à ajouter au recalcul du chemin d'attaque lorsque la cible est au-delà du 'path_outer_boundary'."},
                "path_fail_time_increase": {"type": "number", "description": "Temps (en secondes) à ajouter au recalcul du chemin d'attaque lorsque cette Entité ne peut pas se déplacer le long du chemin actuel."},
                "path_inner_boundary": {"type": "number", "description": "Distance à laquelle augmenter le recalcul du chemin d'attaque par 'inner_boundary_tick_increase'."},
                "path_outer_boundary": {"type": "number", "description": "Distance à laquelle augmenter le recalcul du chemin d'attaque par 'outer_boundary_tick_increase'."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "random_stop_interval": {"type": "integer", "description": "Cette Entité aura 1 chance sur N d'arrêter son attaque en cours, où N = 'random_stop_interval'."},
                "reach_multiplier": {"type": "number", "description": "Utilisé avec la taille de base de l'Entité pour déterminer la distance minimale de la cible avant d'essayer d'infliger des dégâts d'attaque."},
                "require_complete_path": {"type": "boolean", "description": "Active/désactive la nécessité d'avoir un chemin complet de l'Entité à la cible lors de l'utilisation de ce comportement d'attaque au corps à corps."},
                "set_persistent": {"type": "boolean", "description": "Permet à l'Entité d'être définie pour persister lors du ciblage d'un joueur."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité attaquante lorsqu'elle se dirige vers la cible."},
                "target_dist": {"type": "number", "description": "PAS DE DOCUMENTATION."},
                "track_target": {"type": "boolean", "description": "Permet à l'Entité de suivre la cible de l'attaque, même si l'Entité n'a aucune détection."},
                "x_max_rotation": {"type": "number", "description": "Rotation maximale (en degrés), sur l'axe X, cette Entité peut tourner en essayant de regarder la cible."},
                "y_max_head_rotation": {"type": "number", "description": "Rotation maximale (en degrés), sur l'axe Y, cette Entité peut faire pivoter sa tête tout en essayant de regarder la cible."}
            }},
            "minecraft:behavior.dig": {"type": "object", "description": "Oblige l'Entité à creuser au sol avant de disparaitre.", "properties": {
                "allow_dig_when_named": {"type": "boolean", "description": "Si 'true', ce comportement peut s'executer même quand l'Entité est nommée."},
                "digs_in_daylight": {"type": "boolean", "description": "Indique si l'Entité devrait commencer à creuser lorsqu'elle voit la lumière du jour."},
                "duration": {"type": "number", "description": "Durée en secondes de ce AI GOAL."},
                "idle_time": {"type": "number", "description": "Le temps d'inactivité minimum en secondes entre la dernière perturbation détectée et le début du creusement."},
                "on_start": {"description": "Evenements à executer quand ce Goal commence.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "suspicion_is_disturbance": {"type": "boolean", "description": "Si 'true', la découverte de nouveaux emplacements suspects compte comme des perturbations pouvant retarder le début de ce GOAL."},
                "vibration_is_disturbance": {"type": "boolean", "description": "Si 'true', les vibrations comptent comme des perturbations pouvant retarder le démarrage de ce GOAL."}
            }},
            "minecraft:behavior.door_interact": {"type": "object", "description": "Permet à l'Entité d'interagir avec des portes.", "properties": {
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."}
            }},
            "minecraft:behavior.dragonchargeplayer": {"type": "object", "description": "Oblige l'Entité à attaquer le joueur en chargeant sur lui. Le joueur est choisi par le component 'minecraft:behavior.dragonscanning'. Seulement utilisable par l'Ender Dragon.", "properties": {
                "active_speed": {"type": "number", "description": "La vitesse à laquelle l'Entité se déplace lorsque ce comportement a commencé ou lorsqu'il est actif."},
                "continue_charge_threshold_time": {"type": "number", "description": "Si le Dragon reste en dehors de la 'target_zone' pendant plus de 'continue_charge_threshold_time' secondes, la charge est annulée."},
                "flight_speed": {"type": "number", "description": "La vitesse à laquelle l'Entité se déplace quand ce comportement n'est pas actif."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "target_zone": {"type": "array", "description": "Distance minimum et maximum de la cible, cette Entité peut utiliser ce comportement.", "items": [{"type": "number"}, {"type": "number"}]},
                "turn_speed": {"type": "number", "description": "Vitesse à laquelle l'Entité tourne lors de l'utilisation de ce comportement."}
            }},
            "minecraft:behavior.dragondeath": {"type": "object", "description": "Controle l'état et l'animation de mort de l'Entité. Utilisable uniquement par l'Ender Dragon.", "properties": {
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."}
            }},
            "minecraft:behavior.dragonflaming": {"type": "object", "description": "Permet l'Entité à utiliser l'attaque 'flame-breath'. Utilisable uniquement par l'Ender Dragon.", "properties": {
                "cooldown_time": {"type": "number", "description": "Temps (en secondes), après le rugissement, pour respirer la flamme."},
                "flame_time": {"type": "number", "description": "Temps (en secondes), après le rugissement, pour respirer la flamme."},
                "ground_flame_count": {"type": "integer", "description": "Nombre d'attaques de flammes au sol à utiliser avant le décollage."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "roar_time": {"type": "number", "description": "Temps (en secondes) pour rugir, avant de respirer la flamme."}
            }},
            "minecraft:behavior.dragonholdingpattern": {"type": "object", "description": "Permet à l'Entité de voler en cercle autour du podium central situé dans 'The End'. Utilisable uniquement par l'Ender Dragon.", "properties": {
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."}
            }},
            "minecraft:behavior.dragonlanding": {"type": "object", "description": "Oblige l'Entité à arrêter de voler et à passer en mode perchage. Utilisable uniquement par l'Ender Dragon.", "properties": {
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."}
            }},
            "minecraft:behavior.dragonscanning": {"type": "object", "description": "Oblige l'Entité à chercher un joueur à attaquer en mode perchoir. Utilisable uniquement par l'Ender Dragon.", "properties": {
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."}
            }},
            "minecraft:behavior.dragonstrafeplayer": {"type": "object", "description": "Oblige l'Entité à voler à la recherche d'un joueur sur lequel tirer des boules de feu. Utilisable uniquement par l'Ender Dragon.", "properties": {
                "active_speed": {"type": "number", "description": "La vitesse à laquelle l'Entité se déplace lorsque ce comportement a commencé ou lorsqu'il est actif."},
                "fireball_range": {"type": "number", "description": "Distance maximale de l'attaque de boule de feu de cette Entité lors du mitraillage."},
                "flight_speed": {"type": "number", "description": "La vitesse à laquelle cette Entité se déplace lorsque ce comportement n'est pas actif."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "switch_direction_probability": {"type": "number", "description": "Pourcentage de chances de changer la direction de déplacement de cette Entité entre le sens des aiguilles d'une montre et le sens inverse des aiguilles d'une montre. Une chance de changer de direction se produit chaque fois qu'une nouvelle cible est choisie"},
                "target_in_range_and_in_view_time": {"type": "number", "description": "Temps (en secondes) pendant lequel la cible doit être à portée de la boule de feu et en vue [c'est-à-dire aucun terrain solide entre la cible et cette Entité], avant qu'une boule de feu puisse être tirée."},
                "target_zone": {"type": "array", "description": "Distance minimale et maximale de la cible, cette Entité peut utiliser ce comportement.", "items": [{"type": "number"}, {"type": "number"}]},
                "turn_speed": {"type": "number", "description": "Vitesse à laquelle l'Entité tourne lors de l'utilisation de ce comportement."},
                "view_angle": {"type": "number", "description": "La cible doit être à moins de 'view_angle' degrés de la rotation actuelle du dragon avant qu'une boule de feu puisse être tirée."}
            }},
            "minecraft:behavior.dragontakeoff": {"type": "object", "description": "Oblige l'Entité à quitter le mode perche et à recommencer à voler.", "properties": {
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."}
            }},
            "minecraft:behavior.drink_milk": {"type": "object", "description": "Oblige l'Entité à boiredu lait basé sur des conditions environnementales spécifiques.", "properties": {
                "cooldown_seconds": {"type": "number", "description": "Temps (en secondes) pendant lequel le GOAL est en temps de recharge avant de pouvoir être réutilisé."},
                "filters": {"description": "Conditions qui doivent être valide pour que ce comportement commence.", "$ref": "#/definitions/minecraft_filter-ref"},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."}
            }},
            "minecraft:behavior.drink_potion": {"type": "object", "description": "Oblige l'Entité à boire une potion en réaction à un événement ou lorsque des conditions définies sont remplies.", "properties": {
                "potions": {"type": "array", "description": "Une liste de potions que cette Entité peut boire.", "items": {"type": "object", "properties": {
                    "chance": {"type": "number", "description": "Le pourcentage de chance que cette potion soit sélectionnée lors de la recherche d'une potion à utiliser."},
                    "filters": {"description": "Ls filtres utiliser lors de la determination si cette potion peut être selectionné.", "$ref": "#/definitions/minecraft_filter-ref"},
                    "id": {"type": "integer", "description": "L'ID de la potion à utiliser."}
                }}},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "speed_modifier": {"type": "number", "description": "Le modificateur de vitesse de déplacement à appliquer à l'Entité pendant qu'elle boit une potion. Une valeur de 0 ne représente aucun changement de vitesse."}
            }},
            "minecraft:behavior.drop_item_for": {"type": "object", "description": "Oblige l'Entité à se déplacer vers une cible et à déposer un Item près d ela cible. Nécessite un component 'minecraft:navigation'.", "properties": {
                "cooldown": {"type": "number", "description": "Temps total pendant lequel l'objectif est en temps de recharge avant de pouvoir être réutilisé."},
                "drop_item_chance": {"type": "number", "description": "Le pourcentage de chances que l'Entité lâche un Item lors de l'utilisation de cet objectif."},
                "entity_types": {"type": "array", "description": "Liste des types d'entités que l'Entité considère comme des cibles valides.", "items": {"type": "object", "properties": {
                    "cooldown": {"type": "number", "description": "Le temps en secondes que l'Entité doit attendre avant de selectionner à nouveau une cible du même type."},
                    "filters": {"description": "Les filtres de test pour les entités.", "$ref": "#/definitions/minecraft_filter-ref"},
                    "max_dist": {"type": "number", "description": "Distance maximale pour que cette Entité soit un choix valide."},
                    "must_see": {"type": "boolean", "description": "Si 'true', l'Entité doit être visible pour être un choix valide."},
                    "must_see_forget_duration": {"type": "number", "description": "Détermine le temps en secondes pendant lequel cette Entité cherchera une cible avant de l'oublier et d'en chercher une nouvelle lorsque la cible n'est plus visible."},
                    "reevaluate_description": {"type": "boolean", "description": "Si 'true', l'Si c'est vrai, la cible cessera d'être ciblée si elle ne remplit plus les conditions."}
                }}},
                "goal_radius": {"type": "number", "description": "La distance en blocs au sein de l'Entité considère qu'elle a atteint sa position cible."},
                "loot_table": {"type": "string", "description": "Le chemin d'accès à la Loot_Table avec les Items que l'Entité peut offrir avec ce Goal."},
                "max_head_look_at_height": {"type": "number", "description": "La hauteur maximale que la tête de l'Entité examinera lors du lâcher de l'Item. L'entité Regardera toujours sa cible."},
                "minimum_teleport_distance": {"type": "number", "description": "Si la position cible est plus éloignée que cette distance à n'importe quel tick, l'Entité se téléportera vers la position cible."},
                "offering_distance": {"type": "number", "description": "La distance préférée à laquelle l'Entité tente de se trouver par rapport à la cible pour laquelle elle lâche un Item."},
                "on_drop_attempt": {"description": "L'évenement à déclencher quand l'Entité essaie de drop un Item.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "search_count": {"type": "integer", "description": "Le nombre de blocs à chaque tick que l'Entité vérifiera dans sa plage de recherche et sa hauteur pour trouver un bloc valide vers lequel se déplacer. Une valeur de 0 permettra à la foule de vérifier chaque bloc à portée en un seul tick."},
                "search_height": {"type": "integer", "description": "La hauteur en blocs dans laquelle l'Entité recherchera pour trouver une position cible valide."},
                "search_range": {"type": "integer", "description": "La distance en blocs dans laquelle l'Entité recherchera pour trouver une position cible valide."},
                "seconds_before_pickup": {"type": "number", "description": "Le nombre de secondes qui s'écouleront avant que l'Entité larguée puisse être récupérée du sol."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité attaquante lorsqu'elle se dirige vers la cible."},
                "target_range": {"type": "array", "description": "La plage en blocs dans laquelle l'Entité recherche une cible pour laquelle déposer un élément.", "items": [{"type": "number"},{"type": "number"}, {"type": "number"}]},
                "teleport_offset": {"type": "array", "description": "Lorsque l'Entité se téléporte, décalez la position de téléportation d'autant de blocs dans les coordonnées X, Y et Z.", "items": [{"type": "number"},{"type": "number"}, {"type": "number"}]},
                "time_of_day_range": {"type": "array", "description": "Heures valides de la journée auxquelles cet objectif peut être utilisé. Pour référence : midi est 0,0, le coucher du soleil est 0,25, minuit est 0,5 et le lever du soleil est 0,75, et retour à midi pour 1,0.", "items": [{"type": "number"},{"type": "number"}]}
            }},
            "minecraft:behavior.eat_block": {"type": "object", "description": "Oblige l'Entité à consomé un bloc, en remplaçant un bloc avec un autre et déclenche un événement.", "properties": {
                "eat_and_replace_block_pairs": {"type": "array", "description": "Collection de pairs de blocs avec celui mangeable et celui qi sert de remplacement.", "items": {"type": "object", "properties": {
                    "eat_block": {"description": "Le Bloc mangeable par l'Entité.", "anyOf": [
                        {"type": "object", "properties": {
                            "name": {"type": "string", "description": "Le nom du Bloc."},
                            "states": {"type": "array", "items": {"type": "object"}, "description": "La paire état de Bloc et sa valeur."},
                            "tags": {"type": "string", "description": "Le tag de Bloc exprimé en Molang."}
                        }},
                        {"type": "string"}
                    ]},
                    "replace_block": {"description": "Le Bloc qui servira de remplacement..", "anyOf": [
                        {"type": "object", "properties": {
                            "name": {"type": "string", "description": "Le nom du Bloc."},
                            "states": {"type": "array", "items": {"type": "object"}, "description": "La paire état de Bloc et sa valeur."},
                            "tags": {"type": "string", "description": "Le tag de Bloc exprimé en Molang."}
                        }},
                        {"type": "string"}
                    ]}
                }}},
                "on_eat": {"description": "L'evenement à déclencher quand l'animation de mangeage est complété.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "success_chance": {"description": "Expression molang définissant la chance de succès de l'Entité pour consommer un bloc.", "anyOf": [
                    {"type": "string"},
                    {"type": "number"}
                ]},
                "time_until_eat": {"type": "number", "description": "Le temps (en secondes) nécessaire pour que le bloc soit mangé lors d'une tentative de restauration réussie."}
            }},
            "minecraft:behavior.eat_carried_item": {"type": "object", "description": "Oblige l'Entité de manger n'importe quel Item dans son inventaire et à en bénéficier. Requiert des items de nourritures dans l'inventaire de l'Entité.", "properties": {
                "delay_before_eating": {"type": "number", "description": "Temps en secondes que l'Entité doit attendre avant de manger l'Item."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."}
            }},
            "minecraft:behavior.eat_mob": {"type": "object", "description": "Oblige l'Entité à manger un mob spécifique qu'elle attaque.", "properties": {
                "eat_animation_time": {"type": "number", "description": "Définit la durée en secondes pendant laquelle l'animation de 'eat' doit être jouée."},
                "eat_mob_sound": {"type": "string", "description": "Définit le son joué quad l'Entité mange un Mob."},
                "loot_table": {"type": "string", "description": "Le chemin d'accès à la Loot_Table avec les Items que l'entité mangé droppera."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "pull_in_force": {"type": "number", "description": "Définit la force avec laquelle la foule à manger est attirée vers l'Entité en train de manger."},
                "reach_mob_distance": {"type": "number", "description": "Définit la distance souhaitée à atteindre avant de manger la foule."},
                "run_speed": {"type": "number", "description": "Définit la vitesse de l'Entité lorsqu'elle court vers la cible."}
            }},
            "minecraft:behavior.emerge": {"type": "object", "description": "Active le flag d'entité 'EMERGING' pendant la durée spécifiée et déclenche 'on_done' à la fin.", "properties": {
                "cooldown_time": {"type": "number", "description": "Temps en secondes auquel l'Entité doit attendre avant d'utiliser ce Goal une nouvelle fois."},
                "duration": {"type": "number", "description": "Duére en secondes de ce Goal."},
                "on_done": {"description": "Déclencheur d'événements executé lorsque l'execution de Goal se finit.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."}
            }},
            "minecraft:behavior.enderman_leave_block": {"type": "object", "description": "Oblige l'Entité à drop le bloc qu'elle tient actuellement. Utilisable uniquement parl'Enderman.", "properties": {
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."}
            }},
            "minecraft:behavior.enderman_take_block": {"type": "object", "description": "Oblige l'Entité à choisir un bloc proche et porter ce bloc dans ses mains. Utilisable uniquement par l'Enderman.", "properties": {
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."}
            }},
            "minecraft:behavior.equip_item": {"type": "object", "description": "Oblige l'Entité à équiper un Item.", "properties": {
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."}
            }},
            "minecraft:behavior.explore_outskirts": {"type": "object", "description": "Oblige l'Entité à se rendre d'abord vers un point aléatoire à la périphérie du village, puis à explorer des points aléatoires sur une petite distance. Nécessite le component 'minecraft:dweller' et 'minecraft:navigation'.", "properties": {
                "dist_from_boundary": {"type": "array", "description": "La distance par rapport à la limite dans laquelle le villageois doit se trouver pour explorer la périphérie.", "items": [{"type": "number"}, {"type": "number"}, {"type": "number"}]},
                "explore_dist": {"type": "number", "description": "Distance totale en blocs que l'Entité explorera au-delà des limites du village lors du choix de son point de déplacement."},
                "max_travel_time": {"type": "number", "description": "Il s'agit du temps maximum pendant lequel l'Entité tentera d'atteindre son point de déplacement à la périphérie du village avant la sortie de l'objectif."},
                "max_wait_time": {"type": "number", "description": "Le temps d'attente en secondes entre le choix de nouveaux points d'exploration sera choisi sur un intervalle aléatoire entre cette valeur et le temps d'attente minimum. Cette valeur correspond également à la durée totale pendant laquelle l'Entité explorera des points aléatoires avant que l'objectif ne s'arrête."},
                "min_dist_from_target": {"type": "number", "description": "L'Entité doit se trouver à cette distance pour considérer qu'elle a réussi à atteindre son objectif."},
                "min_perimeter": {"type": "number", "description": "Le périmètre minimum du village requis pour réaliser cet objectif."},
                "min_wait_time": {"type": "number", "description": "Le temps d'attente en secondes entre le choix de nouveaux points d'exploration sera choisi sur un intervalle aléatoire entre cette valeur et le temps d'attente maximum."},
                "next_xz": {"type": "integer", "description": "Un nouveau point d'exploration sera choisi au hasard dans cette distance XZ de la position cible actuelle lorsque la navigation sera terminée et que le délai d'attente sera écoulé."},
                "next_y": {"type": "integer", "description": "Un nouveau point d'exploration sera choisi au hasard dans cette distance Y de la position cible actuelle lorsque la navigation sera terminée et que le délai d'attente sera écoulé."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité quand il utilise ce Goal."},
                "timer_ratio": {"type": "number", "description": "Chaque nouveau point d'exploration sera choisi sur un intervalle aléatoire entre le temps d'attente minimum et maximum, divisé par cette valeur. Ceci ne s'applique pas au premier point d'exploration choisi lors de l'exécution de l'objectif."}
            }},
            "minecraft:behavior.fertilize_farm_block": {"type": "object", "description": "Oblige le Mob à rechercher dans une zone un bloc de culture cultivable. S'il en trouve, l'Entité utilisera n'importe quel engrais disponible dans son inventaire sur la culture. Ce Goal ne sera pas exécuté si l'Entité n'a pas d'engrais dans son inventaire.", "properties": {
                "goal_radius": {"type": "number", "description": "Distance en blocs auquelle l'Entité considère qu'elle a atteint sa position cible."},
                "max_fertilizer_usage": {"type": "integer", "description": "Le nombre maximum de fois où l'Entité utilisera de l'engrais sur le bloc cible."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "search_cooldown_max_seconds": {"type": "number", "description": "Durée maximale en secondes que l'objectif peut prendre avant de lancer une nouvelle recherche. L'heure est choisie entre 0 et ce nombre."},
                "search_count": {"type": "integer", "description": "Le nombre de blocs sélectionnés au hasard à chaque tick que l'Entité vérifiera dans sa plage de recherche et sa hauteur pour trouver un bloc valide vers lequel se déplacer. Une valeur de 0 permettra à l'Entité de vérifier chaque bloc à portée en un seul tick."},
                "search_height": {"type": "integer", "description": "La hauteur en blocs dans laquelle l'Entité recherchera pour trouver une position cible valide."},
                "search_range": {"type": "integer", "description": "La distance en blocs dans laquelle l'Entité recherchera pour trouver une position cible valide."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité quand il utilise ce Goal."}
            }},
            "minecraft:behavior.find_cover": {"type": "object", "description": "Oblige l'Entité à localiser des zones d'ombre dans le monde.", "properties": {
                "cooldown_time": {"type": "number", "description": "Temps en secondes pendant lequel l'Entité doit attendre avant d'utiliser à nouveau le Goal."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité quand il utilise ce Goal."}
            }},
            "minecraft:behavior.find_mount": {"type": "object", "description": "Oblige l'Entité de trouver une autre entité à monter.", "properties": {
                "avoid_water": {"type": "boolean", "description": "Si 'true', l'Entité n'entrera pas dans les blocs d'eau en se dirigeant vers une monture."},
                "mount_distance": {"type": "number", "description": "Il s'agit de la distance à laquelle l'Entité doit se trouver, en blocs, par rapport à la monture souhaitée pour la monter. Si la valeur est inférieure à 0, la foule utilisera sa distance d'attaque par défaut."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "start_delay": {"type": "integer", "description": "Temps que l'Entité attendra avant de commencer à se déplacer vers la monture."},
                "target_needed": {"type": "boolean", "description": "Si 'true', l'Entité ne cherchera une monture que si elle a une cible."},
                "within_radius": {"type": "number", "description": "Distance en blocs dans laquelle l'Entité cherchera une monture."}
            }},
            "minecraft:behavior.find_underwater_treasure": {"type": "object", "description": "Oblige l'Entité à localiser et à se rendre jusqu'au point le plus proche qui est une ruine ou une épave.", "properties": {
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "search_range": {"type": "integer", "description": "La distance dans laquelle l'Entité recherchera un coffre au trésor dans une ruine ou une épave vers laquelle se déplacer."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité quand il utilise ce Goal."},
                "stop_distance": {"type": "number", "description": "La distance parcourue par l'Entité avant de s'arrêter."}
            }},
            "minecraft:behavior.fire_at_target": {"type": "object", "description": "Oblige l'Entité à attaquer en tirant avec un delai. (Les paramètres d'ancrage et de décalage de ce component remplacent ceux du component 'projectile')", "properties": {
                "attack_cooldown": {"type": "number", "description": "Temps de recharge en secondes requis avant que ce Goal peut être réutilisé."},
                "attack_range": {"type": "array", "description": "La Cible doit être dans cette portée pour que cette attaque ce produise.", "minItems": 2, "maxItems": 2, "items": {"type": "number"}},
                "filters": {"description": "Les filtres de test pour que ce comportement commence.", "$ref": "#/definitions/minecraft_filter-ref"},
                "max_head_rotation_x": {"type": "number", "description": "Rotation maximale de la tête (en degrés) sur l'axe X que cette Entité peut appliquer en essayant de regarder la cible."},
                "max_head_rotation_y": {"type": "number", "description": "Rotation maximale de la tête (en degrés) sur l'axe Y que cette Entité peut appliquer en essayant de regarder la cible."},
                "owner_anchor": {"type": "integer", "description": "Ancrage de l'Entité pour l'emplacement d'apparition du projectile."},
                "owner_offset": {"type": "array", "description": "Vecteur de décalage à partir de la propriété 'owner_anchor'.", "minItems": 3, "maxItems": 3, "items": {"type": "number"}},
                "post_shoot_delay": {"type": "number", "description": "Temps en secondes entre le tir du projectile et la fin du Goal."},
                "pre_shoot_delay": {"type": "number", "description": "Temps en secondes avant le tir du projectile."},
                "projectile_def": {"type": "string", "description": "ID de l'entité qui servira de projectile."},
                "ranged_fov": {"type": "number", "description": "FOV en degrés lors de l'utilisation de la détection pour détecter une cible à attaquer."},
                "target_anchor": {"type": "integer", "description": "Ancrage d'Entité pour cible de projectile."},
                "target_offset": {"type": "array", "description": "Vecteur de décalage à partir de la propriété 'target_anchor'.", "minItems": 3, "maxItems": 3, "items": {"type": "number"}}
            }},
            "minecraft:behavior.flee_sun": {"type": "object", "description": "Oblige l'Entité à éviter activement les rayons de soleil.", "properties": {
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité quand il utilise ce Goal."}
            }},
            "minecraft:behavior.float": {"type": "object", "description": "Permet à l'Entité de flotter sur l'eau. Les passagers seront expulsés au moment où la tête de l'Entité va sous l'eau.", "properties": {
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "sink_with_passengers": {"type": "boolean", "description": "Si 'true', l'Entité continuera de couler tant qu'elle aura des passagers."}
            }},
            "minecraft:behavior.float_wander": {"type": "object", "description": "Permet à l'Entité de flotter dans une direction aléatoire similairement au Ghast.", "properties": {
                "float_duration": {"type": "array", "description": "Intervalle de temps en secondes pendant lequel l'Entité flottera avant d'atterrir et de choisir de faire autre chose.", "items": [{"type": "number"}, {"type": "number"}]},
                "must_reach": {"type": "boolean", "description": "Si 'true', le point doit être accessible pour être une cible valide."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "random_reselect": {"type": "boolean", "description": "Si 'true', l'Entité choisira au hasard un nouveau point tout en se déplaçant vers celui précédemment sélectionné."},
                "xz_dist": {"type": "integer", "description": "Distance en blocs au sol à laquelle l'Entité cherchera un nouvel endroit vers lequel se déplacer. Doit être au moins 1."},
                "y_dist": {"type": "integer", "description": "Distance en blocs que l'Entité recherchera vers le haut ou vers le bas pour trouver un nouvel endroit vers lequel se déplacer. Doit être au moins 1."},
                "y_offset": {"type": "number", "description": "Hauteur en blocs à ajouter à la position cible sélectionnée."}
            }},
            "minecraft:behavior.follow_caravan": {"type": "object", "description": "Oblige l'Entité à être dirigée avec une Item Lead. Diriger l'entité signale en fait jusqu'à 10 entités proches ont été définies dans la variable entity_types pour se suivre, formant une caravane.", "properties": {
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "entity_types": {"type": "object", "description": "Liste des types d'entités qui peuvent suivre une caravane.", "items": {"type": "object", "properties": {
                    "cooldown": {"type": "number", "description": "Le temps en secondes que l'Entité doit attendre avant de selectionner à nouveau une cible du même type."},
                    "filters": {"description": "Les filtres de test pour les entités.", "$ref": "#/definitions/minecraft_filter-ref"},
                    "max_dist": {"type": "number", "description": "Distance maximale pour que cette Entité soit un choix valide."},
                    "must_see": {"type": "boolean", "description": "Si 'true', l'Entité doit être visible pour être un choix valide."},
                    "must_see_forget_duration": {"type": "number", "description": "Détermine le temps en secondes pendant lequel cette Entité cherchera une cible avant de l'oublier et d'en chercher une nouvelle lorsque la cible n'est plus visible."},
                    "reevaluate_description": {"type": "boolean", "description": "Si 'true', l'Si c'est vrai, la cible cessera d'être ciblée si elle ne remplit plus les conditions."},
                    "sprint_speed_modifier": {"type": "number", "description": "Modificateur de la vitesse de sprint."},
                    "walk_speed_modifier": {"type": "number", "description": "Modificateur de la vitesse de marche."}
                }}},
                "entity_count": {"type": "integer", "description": "Nombre d'entités qui peuvent être dans la caravane."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité quand il utilise ce Goal."}
            }},
            "minecraft:behavior.follow_mob": {"type": "object", "description": "Oblige l'Entité à suivre et se rassembler autour d'entités du même type.", "properties": {
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "search_range": {"type": "integer", "description": "La distance en blocs qu'il recherchera pour une entité à suivre."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité quand il utilise ce Goal."},
                "stop_distance": {"type": "number", "description": "La distance en blocs que cette Entité s'arrête par rapport à l'entité qu'elle suit."}
            }},
            "minecraft:behavior.follow_owner": {"type": "object", "description": "Oblige l'Entité à suivre un joueur marqué comme son propriétaire.", "properties": {
                "can_teleport": {"type": "boolean", "description": "Spécifie si l'Entité peut se téléporter au joueur si celui-ci est trop loin."},
                "ignore_vibration": {"type": "boolean", "description": "Spécifie si l'Entité suivra son propriétaire même s'il a entendu une vibration récemment."},
                "max_distance": {"type": "number", "description": "La distance maximale en blocs auquel cette Entité peut être de son propriétaire pour commencer à le suivre, utilisé seulement si 'can_teleport' est 'false'."},
                "post_teleport_distance": {"type": "integer", "description": "Distance en blocs auquel l'Entité sera de son propiétaire après la téléportation. Par défaut : 'stop_distance' + 1"},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité quand il utilise ce Goal."},
                "start_distance": {"type": "number", "description": "La distance en blocs à laquelle le propriétaire peut s'éloigner de cette Entité avant qu'elle ne commence à la suivre."},
                "stop_distance": {"type": "number", "description": "La distance en blocs que cette Entité s'arrêtera de son propriétaire tout en la suivant."}
            }},
            "minecraft:behavior.follow_parent": {"type": "object", "description": "Oblige l'Entité marquée comme un bébé à suivre son parent. Nécessite le component 'minecraft:is_baby'.", "properties": {
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité quand il utilise ce Goal."}
            }},
            "minecraft:behavior.follow_target_captain": {"type": "object", "description": "Oblige l'Entité à suivre une entité marqué comme étant un capitaine ilageois. Nécessite que l'entité à suivre doit avoit le component 'minecraft:is_illager_captain'.", "properties": {
                "follow_distance": {"type": "number", "description": "Définit la distance en blocs que l'Entité restera par rapport à sa cible tout en la suivant."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "within_radius": {"type": "number", "description": "Définit la distance maximale en blocs qu'une Entité peut obtenir de son capitaine cible avant d'abandonner sa tentative de le suivre."}
            }},
            "minecraft:behavior.go_and_give_items_to_noteblock": {"type": "object", "description": "Permet à l'Entité d'essayer de jeter les items de son inventaire sur l'emplacmeent d'un noteblock joué recemment.", "properties": {
                "listen_time": {"type": "integer", "description": "Définit le temps à laquelle l'Entité doit continuer à livrer des items à un bloc-notes après l'avoir entendu."},
                "on_item_throw": {"description": "Evénements à executer quand l'Entité jète les items.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "reach_block_distance": {"type": "number", "description": "Définit la distance souhaitée à atteindre avant de lancer les items vers le bloc."},
                "run_speed": {"type": "number", "description": "Définit la vitesse de l'Entité lorsqu'elle court vers le bloc."},
                "throw_force": {"type": "number", "description": "Définit la force de projection."},
                "throw_sound": {"type": "string", "description": "Le son à jouer quand l'Entité jète un item."},
                "vertical_throw_mul": {"type": "number", "description": "Définit le multiplicateur de projection verticale appliqué en plus de la force de projection dans la direction verticale."}
            }},
            "minecraft:behavior.go_and_give_items_to_owner": {"type": "object", "description": "Permet à l'Entité d'essayer de jeter les items de son inventaire à son propriétaire.", "properties": {
                "on_item_throw": {"description": "Evénements à executer quand l'Entité jète les items.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "reach_block_distance": {"type": "number", "description": "Définit la distance souhaitée à atteindre avant de lancer les items vers le bloc."},
                "run_speed": {"type": "number", "description": "Définit la vitesse de l'Entité lorsqu'elle court vers le bloc."},
                "throw_force": {"type": "number", "description": "Définit la force de projection."},
                "throw_sound": {"type": "string", "description": "Le son à jouer quand l'Entité jète un item."},
                "vertical_throw_mul": {"type": "number", "description": "Définit le multiplicateur de projection verticale appliqué en plus de la force de projection dans la direction verticale."}
            }},
            "minecraft:behavior.go_home": {"type": "object", "description": "Oblige l'Entité à retourner là où elle est apparue et à déclencher des événements à son arrivée.", "properties": {
                "calculate_new_path_radius": {"type": "number", "description": "Distance en blocs à laquelle l'Entité est considérée comme suffisamment proche de la fin du chemin actuel. Un nouveau chemin sera alors calculé pour continuer vers la maison."},
                "goal_radius": {"type": "number", "description": "La distance en blocs au sein de l'Entité considère qu'elle a atteint l'objectif. Il s'agit de la « marge de manœuvre » pour empêcher l'IA de rebondir en essayant d'atteindre un endroit spécifique."},
                "interval": {"type": "integer", "description": "Une valeur aléatoire pour déterminer quand se déplacer de manière aléatoire quelque part. Cela a une chance de 1/intervalle de choisir cet objectif."},
                "on_failed": {"description": "Evenement à executer quand ce Goal échoue.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                "on_home": {"description": "Evenement à executer quand l'Entité arrive à son habitat.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité quand il utilise ce Goal."}
            }},
            "minecraft:behavior.guardian_attack": {"type": "object", "description": "Permet à cette Entité d'utiliser une attaque de faisceau de laser. Seulement utilisable par les Guardians et Elder Guardians.", "properties": {
                "elder_extra_magic_damage": {"type": "integer", "description": "Montant des dégâts supplémentaires infligés par l'attaque magique d'un Elder Guardian."},
                "hard_mode_extra_magic_damage": {"type": "integer", "description": "En difficulté difficile, montant des dégâts supplémentaires infligés par l'attaque magique d'un Guardian."},
                "magic_damage": {"type": "integer", "description": "Montant des dégâts infligés par l'attaque magique d'un Guardian. Les dégâts d'attaque magique sont ajoutés aux dégâts d'attaque de base du Guardian."},
                "min_distance": {"type": "number", "description": "Le comportement d'attaque du Guardian s'arrête si la cible est plus proche que cette distance (ne s'applique pas aux Elder Guardians)."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "sound_delay_time": {"type": "number", "description": "Temps (en secondes) d'attente après le lancement d'une attaque avant de jouer le son d'attaque du Guardian."},
                "x_max_rotation": {"type": "number", "description": "Rotation maximale (en degrés), sur l'axe X, cette Entité peut tourner en essayant de regarder la cible."},
                "y_max_head_rotation": {"type": "number", "description": "Rotation maximale (en degrés), sur l'axe Y, cette Entité peut faire pivoter sa tête tout en essayant de regarder la cible."}
            }},
            "minecraft:behavior.harvest_farm_block": {"type": "object", "description": "Oblige l'Entité à chercher dans une zone des terres agricoles avec de l'air au-dessus. Si elle est trouvée, l'Entité remplacera le bloc d'air en plantant une graine de son inventaire sur le bloc de terres agricoles. Nécessite les components 'minecraft:inventory' et 'minecraft:navigation'.", "properties": {
                "goal_radius": {"type": "number", "description": "Distance en blocs dans laquellte l'Entité considère qu'elle a atteint la position ciblée."},
                "max_seconds_before_search": {"type": "number", "description": "Le temps maximum en secondes que l'objectif peut prendre avant de rechercher le premier bloc de récolte. Le temps est choisie entre 0 et ce nombre."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "search_cooldown_max_seconds": {"type": "number", "description": "Le temps maximum en secondes que l'objectif peut prendre avant de chercher à nouveau, après avoir déjà échoué à trouver un bloc de récolte. Le temps est choisie entre 0 et ce nombre."},
                "search_count": {"type": "integer", "description": "Le nombre de blocs sélectionnés au hasard à chaque tick que l'Entité vérifiera dans sa plage de recherche et sa hauteur pour trouver un bloc valide vers lequel se déplacer. Une valeur de 0 permettra à l'Entité de vérifier chaque bloc à portée en un seul tick."},
                "search_height": {"type": "integer", "description": "La hauteur en blocs dans laquelle l'Entité recherchera pour trouver une position cible valide."},
                "search_range": {"type": "integer", "description": "La distance en blocs dans laquelle l'Entité recherchera pour trouver une position cible valide."},
                "seconds_until_new_task": {"type": "number", "description": "Le temps en secondes pendant lequel l'objectif se rechargera après une récolte/semence réussie, avant de pouvoir recommencer."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité quand il utilise ce Goal."}
            }},
            "minecraft:behavior.hide": {"type": "object", "description": "Oblige l'Entité avec le component 'minecraft:hide' à tenter de se déplacer vers un POI possédé ou à proximité et à se cacher.", "properties": {
                "duration": {"type": "number", "description": "Durée en secondes pendant laquelle l'Entité réagit."},
                "poi_type": {"description": "Définit le type de POI où se cacher.", "anyOf": [
                    {"type": "string", "enum": ["bed"]},
                    {"type": "string"}
                ]},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité quand il utilise ce Goal."},
                "timeout_cooldown": {"type": "number", "description": "Le temps de recharge en secondes avant que l'objectif peut être réutilisé après une panne interne ou une condition de délai d'attente."}
            }},
            "minecraft:behavior.hold_ground": {"type": "object", "description": "Oblige l'Entité à s'arrêter à son emplacement actuel, à se tourner pour faire face à une entité qu'elle cible et à réagir avec un événement. Nécessite une cible pour l'Entité qui peut être obtenu avec 'minecraft:behavior.nearest_attackable_target' ou 'minecraft:behavior.hurt_by_target'.", "properties": {
                "broadcast": {"type": "boolean", "description": "S'il faut diffuser la cible de l'Entité à d'autres entités du même type."},
                "broadcast_range": {"type": "number", "description": "Plage en blocs pour la distance à diffuser."},
                "min_radius": {"type": "number", "description": "Distance minimale que doit avoir la cible pour que l'Entité puisse executer cet objectif."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "within_radius_event": {"description": "Evénement à executer quand la cible est dans le rayon. L'evenement est difusé si 'broadcast' est 'true'.", "$ref": "#/definitions/trigger_event_parameters-ref"}
            }},
            "minecraft:behavior.hurt_by_target": {"type": "object", "description": "Permet à l'Entité de cibler une autre entité qui la blesse.", "properties": {
                "alert_same_type": {"type": "boolean", "description": "Si 'true', les entités proches du même type que l'Entité seront alertés à propos des dégâts."},
                "entity_types": {"type": "object", "description": "Liste des types d'entités que l'Entité peut ciblé quand elle le blesse.", "properties": {
                    "cooldown": {"type": "number", "description": "Le temps en secondes que l'Entité doit attendre avant de selectionner à nouveau une cible du même type."},
                    "filters": {"description": "Les filtres de test pour les entités.", "$ref": "#/definitions/minecraft_filter-ref"},
                    "max_dist": {"type": "number", "description": "Distance maximale pour que cette Entité soit un choix valide."},
                    "must_see": {"type": "boolean", "description": "Si 'true', l'Entité doit être visible pour être un choix valide."},
                    "must_see_forget_duration": {"type": "number", "description": "Détermine le temps en secondes pendant lequel cette Entité cherchera une cible avant de l'oublier et d'en chercher une nouvelle lorsque la cible n'est plus visible."},
                    "reevaluate_description": {"type": "boolean", "description": "Si 'true', l'Si c'est vrai, la cible cessera d'être ciblée si elle ne remplit plus les conditions."},
                    "sprint_speed_modifier": {"type": "number", "description": "Modificateur de la vitesse de sprint."},
                    "walk_speed_modifier": {"type": "number", "description": "Modificateur de la vitesse de marche."}
                }},
                "hurt_owner": {"type": "boolean", "description": "Si 'true', l'entité blessera son propriétaire et les autres entités avec le même propriétaire que lui même."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."}
            }},
            "minecraft:behavior.inspect_bookshelf": {"type": "object", "description": "Oblige l'Entité à regarder et à inspecter une Bibliothèque.", "properties": {
                "goal_radius": {"type": "number", "description": "La distance en blocs au sein de l'Entité considère qu'elle a atteint l'objectif. Il s'agit de la 'marge de manœuvre' pour empêcher l'IA de rebondir en essayant d'atteindre un endroit spécifique."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "search_count": {"type": "integer", "description": "Le nombre de blocs sélectionnés au hasard à chaque tick que l'Entité vérifiera dans sa plage de recherche et sa hauteur pour trouver un bloc valide vers lequel se déplacer. Une valeur de 0 permettra à l'Entité de vérifier chaque bloc à portée en un seul tick."},
                "search_height": {"type": "integer", "description": "La hauteur en blocs dans laquelle l'Entité recherchera des Bibliothèques."},
                "search_range": {"type": "integer", "description": "La distance en blocs dans laquelle l'Entité recherchera une Bibliothèque pour inspecter."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité quand il utilise ce Goal."}
            }},
            "minecraft:behavior.investigate_suspicious_location": {"type": "object", "description": "Oblige l'Entité à se déplacer vers une position 'suspecte' sur la base des données recueillies dans 'minecraft:suspect_tracking'.", "properties": {
                "goal_radius": {"type": "number", "description": "La distance en blocs au sein de l'Entité considère qu'elle a atteint sa position cible."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité quand il utilise ce Goal."}
            }},
            "minecraft:behavior.jump_around_target": {"type": "object", "description": "Oblige l'Entité à sauter autour d'une cible.", "properties": {
                "check_collision": {"type": "boolean", "description": "Active les contrôles de collision lors du calcul du saut. La définition de 'check_collision' sur true peut affecter les performances."},
                "entity_bounding_box_scale": {"type": "number", "description": "Mise à l'échelle appliquée temporairement aux limites AABB de l'entité lors du saut. Une boîte englobante plus petite réduit le risque de collisions pendant le saut. Lorsque check_collision est vrai, cela augmente également les chances de pouvoir sauter à proximité d'obstacles."},
                "filters": {"description": "Les filtres de test pour que ce comportement commence.", "$ref": "#/definitions/minecraft_filter-ref"},
                "jump_angles": {"type": "array", "description": "Les angles de saut en degrés flottants autorisés lors de l'execution du saut. L'ordre dans lequel les angles sont choisis est aléatoire.", "items": {"type": "number"}},
                "jump_cooldown_duration": {"type": "number", "description": "Temps en secondes à passer en temps de recharge avant que ce goal puisse être réutilisé."},
                "jump_cooldown_when_hurt_duration": {"type": "number", "description": "Temps en secondes à passer en temps de recharge après avoir été blessé avant que ce goal puisse être réutilisé."},
                "landing_distance_from_target": {"type": "array", "description": "La portée détermine à quelle distance et à quelle distance de la cible la position d'atterrissage peut être lors du saut.", "minItems": 2, "maxItems": 2, "items": {"type": "number"}},
                "landing_position_spread_degrees": {"type": "integer", "description": "Cet Cet angle (en degrés) est utilisé pour contrôler la dispersion lors du choix d'une position d'atterrissage derrière la cible. Un angle de dispersion nul signifie que la position d'atterrissage sera directement derrière la cible sans variation. Un angle de dispersion de 90 degrés signifie que la position d'atterrissage peut être jusqu'à 45 degrés à gauche et à droite de la position directement derrière la direction de vision de la cible."},
                "last_hurt_duration": {"type": "number", "description": "Si l'entité a été blessée au cours de ces dernières secondes, jump_cooldown_when_hurt_duration sera utilisé à la place de jump_cooldown_duration."},
                "line_of_sight_obstruction_height_ignore": {"type": "integer", "description": "Si la ligne de vue de l'entité vers sa cible est obstruée par un obstacle d'une hauteur inférieure à ce nombre, l'obstacle sera ignoré et la cible tentera de trouver une position d'atterrissage valide."},
                "max_jump_velocity": {"type": "number", "description": "Vélocité maximale à laquelle un saut peut être effectué."},
                "prepare_jump_duration": {"type": "number", "description": "Le temps en secondes à consacrer à la préparation du saut."},
                "required_vertical_space": {"type": "integer", "description": "Le nombre de blocs au-dessus de la tête de l'entité qui doivent être en l'air pour que cet objectif soit utilisable."},
                "snap_to_surface_block_range": {"type": "integer", "description": "Le nombre de blocs au-dessus et en dessous de la position cible du saut qui seront vérifiés pour trouver une surface sur laquelle atterrir."},
                "valid_distance_to_target": {"type": "array", "description": "La cible doit être dans cette plage pour que le saut se produise."}
            }},
            "minecraft:behavior.jump_to_block": {"type": "object", "description": "Oblige l'Entité à rechercher un bloc vers lequel sauter, puis à sauter vers ce bloc.", "properties": {
                "cooldown_range": {"type": "array", "description": "Plage de temps de recharge minimale et maximale (positive, en secondes) entre chaque tentative de saut.", "items": [{"type": "number"}, {"type": "number"}]},
                "forbidden_blocks": {"type": "array", "description": "Des blocs vers lesquels l'Entité ne peut pas sauter.", "items": {"anyOf": [
                    {"type": "object", "properties": {
                        "name": {"type": "string", "description": "Le nom du Bloc."},
                        "states": {"type": "array", "items": {"type": "object"}, "description": "La paire état de Bloc et sa valeur."},
                        "tags": {"type": "string", "description": "Le tag de Bloc exprimé en Molang."}
                    }},
                    {"type": "string"}
                ]}},
                "max_velocity": {"type": "number", "description": "La vitesse maximale avec laquelle l'Entité peut sauter."},
                "minimum_distance": {"type": "integer", "description": "La distance minimale (en blocs) entre l'Entité et un bloc, afin d'envisager d'y sauter."},
                "minimum_path_length": {"type": "integer", "description": "La longueur minimale (en blocs) du chemin de l'Entité vers un bloc, afin d'envisager d'y accéder."},
                "preferred_blocks": {"type": "array", "description": "Blocs vers lesquels l'Entité préfère sauter.", "items": {"anyOf": [
                    {"type": "object", "properties": {
                        "name": {"type": "string", "description": "Le nom du Bloc."},
                        "states": {"type": "array", "items": {"type": "object"}, "description": "La paire état de Bloc et sa valeur."},
                        "tags": {"type": "string", "description": "Le tag de Bloc exprimé en Molang."}
                    }},
                    {"type": "string"}
                ]}},
                "preferred_blocks_chance": {"type": "number", "description": "Chance (entre 0,0 et 1,0) que l'Entité saute vers un bloc préféré, si elle est à portée. Cela n'a d'importance que si les blocs préférés sont définis."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "scale_factor": {"type": "number", "description": "Le facteur d'échelle du cadre de délimitation de l'Entité pendant qu'elle saute."},
                "search_height": {"type": "integer", "description": "La hauteur (en blocs, dans la plage [2, 15]) de la zone de recherche, centrée autour de l'Entité."},
                "search_width": {"type": "integer", "description": "La largeur (en blocs, dans la plage [2, 15]) de la zone de recherche, centrée autour de l'Entité."}
            }},
            "minecraft:behavior.knockback_roar": {"type": "object", "description": "Oblige l'Entité à émettre un effet de rugissement qui repousse d'autres entités dans un rayon défini d'où le rugissement a été émis. Nécessite un événement déclencheur pour fonctionner correctement.", "properties": {
                "attack_time": {"type": "number", "description": "Le délai après lequel le recul se produit (en secondes)."},
                "cooldown_time": {"type": "number", "description": "Temps (en secondes) pendant lequel l'Entité doit attendre avant d'utiliser à nouveau le Goal."},
                "damage_filters": {"description": "Liste des conditions que l'autre entité doit remplir pour être une cible valide pour lui appliquer des dégâts.", "$ref": "#/definitions/minecraft_filter-ref"},
                "duration": {"type": "number", "description": "La durée maximale du rugissement (en secondes)."},
                "knockback_damage": {"type": "integer", "description": "Les dégâts infligés par le rugissement du recul."},
                "knockback_filters": {"description": "Liste des conditions que l'autre entité doit remplir pour être une cible valide pour lui appliquer l'effet de recul.", "$ref": "#/definitions/minecraft_filter-ref"},
                "knockback_height_cap": {"type": "number", "description": "La hauteur maximale pour le recul vertical."},
                "knockback_horizontal_strength": {"type": "integer", "description": "La force du recul horizontal."},
                "knockback_range": {"type": "integer", "description": "Le rayon (en blocs) de l'effet de recul."},
                "knockback_vertical_strength": {"type": "integer", "description": "La force du recul vertical."},
                "on_roar_end": {"description": "Evénement qui sera déclenché quand le rugissement se finit.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."}
            }},
            "minecraft:behavior.lay_down": {"type": "object", "description": "Permet à l'Entité de se coucher de temps en temps", "properties": {
                "interval": {"type": "integer", "description": "Une valeur aléatoire pour déterminer à quels intervalles quelque chose peut se produire. Cela a une chance par intervalle de choisir ce Goal."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "random_stop_interval": {"type": "integer", "description": "Une valeur aléatoire pour déterminer à quel intervalle l'objectif de l'IA peut s'arrêter. Cela a une chance de 1/intervalle d'arrêter cet objectif."}
            }},
            "minecraft:behavior.lay_egg": {"type": "object", "description": "Oblige l'Entité à poser une bloc d'oeuf sur certains blocks si l'Entité est enceinte.", "properties": {
                "allow_laying_from_below": {"type": "boolean", "description": "Permet à l'Entité de pondre ses œufs en dessous de la cible si elle ne peut pas y arriver. Ceci est utile si le bloc cible est de l'eau avec de l'air au-dessus, car les entités risquent de ne pas pouvoir accéder au bloc d'air au-dessus de l'eau."},
                "egg_type": {"description": "Le type de bloc pour l'oeuf à poser. Si c'est un oeuf de tortue, le nombre d'oeuf danbs ce bloc est définit au hasard.", "anyOf": [
                    {"type": "object", "properties": {
                        "name": {"type": "string", "description": "Le nom du Bloc."},
                        "states": {"type": "array", "items": {"type": "object"}, "description": "La paire état de Bloc et sa valeur."},
                        "tags": {"type": "string", "description": "Le tag de Bloc exprimé en Molang."}
                    }},
                    {"type": "string"}
                ]},
                "goal_radius": {"type": "number", "description": "La distance en blocs au sein de l'Entité considère qu'elle a atteint l'objectif. Il s'agit de la « marge de manœuvre » pour empêcher l'IA de rebondir en essayant d'atteindre un endroit spécifique."},
                "lay_egg_sound": {"type": "string", "description": "Son à jouer pour le posement d'oeuf."},
                "lay_seconds": {"type": "number", "description": "Durée en secondes du posement des oeufs."},
                "on_lay": {"description": "Evénement à executer lorsque l'Entité pose les oeufs.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "search_height": {"type": "integer", "description": "Hauteur en blocs vers laquelle l'Entité cherchera un bloc cible vers lequel se déplacer"},
                "search_range": {"type": "integer", "description": "La distance en blocs vers laquelle il recherchera un bloc cible vers lequel se déplacer"},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité quand il utilise ce Goal."},
                "target_blocks": {"type": "array", "description": "Blocs auquels l'Entité peut y poser ses oeufs au dessus de ceux-ci.", "items": {"anyOf": [
                    {"type": "object", "properties": {
                        "name": {"type": "string", "description": "Le nom du Bloc."},
                        "states": {"type": "array", "items": {"type": "object"}, "description": "La paire état de Bloc et sa valeur."},
                        "tags": {"type": "string", "description": "Le tag de Bloc exprimé en Molang."}
                    }},
                    {"type": "string"}
                ]}},
                "target_materials_above_block": {"type": "array", "description": "Types de matériaux pouvant exister au-dessus du bloc cible. Les types valides sont 'Air', 'Water' et 'Lava'."},
                "use_default_animation": {"type": "boolean", "description": "Spécifie si l'animation par défaut de la ponte doit être jouée lorsque l'œuf est placé ou non."}
            }},
            "minecraft:behavior.leap_at_target": {"type": "object", "description": "Oblige l'Entité à sauter vers sa cible. Nécessite une cible pour l'Entité qui peut être obtenu avec 'minecraft:behavior.nearest_attackable_target' ou 'minecraft:behavior.hurt_by_target'.", "properties": {
                "must_be_on_ground": {"type": "boolean", "description": "Si 'true', l'Entité ne sautera sur sa cible que si elle est au sol. Le régler sur false lui permettra de sauter même s'il est déjà en l'air"},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "set_persistent": {"type": "boolean", "description": "Permet à l'Entité d'être définie pour persister lors du ciblage d'un joueur"},
                "target_dist": {"type": "number", "description": "Distance en blocs que l'Entité saute lorsqu'elle saute sur sa cible."},
                "yd": {"type": "number", "description": "Hauteur en blocs que l'Entité saute lorsqu'elle saute sur sa cible."}
            }},
            "minecraft:behavior.look_at_entity": {"type": "object", "description": "Oblige l'Entité à regarder une entité spécifique en faisant pivoter la pose de l'os de la tête dans une limite définie.", "properties": {
                "angle_of_view_horizontal": {"type": "integer", "description": "L'angle en degrés que l'Entité peut voir sur l'axe X (gauche-droite)"},
                "angle_of_view_vertical": {"type": "integer", "description": "L'angle en degrés que l'Entité peut voir sur l'axe Y (haut-bas)"},
                "filters": {"description": "Filtre pour déterminer les conditions pour que l'Entité regarde vers l'autre entité.", "$ref": "#/definitions/minecraft_filter-ref"},
                "look_distance": {"type": "number", "description": "La distance en blocs à partir de laquelle l'Entité regardera"},
                "look_time": {"type": "array", "description": "Plage de temps pour examiner l'Entité.", "items": [{"type": "number"}, {"type": "number"}]},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "probability": {"type": "number", "description": "La probabilité de regarder l'Entité."}
            }},
            "minecraft:behavior.look_at_player": {"type": "object", "description": "Oblige l'Entité à regarder le joueur en faisant pivoter la pose de l'os de la tête dans une limite définie.", "properties": {
                "angle_of_view_horizontal": {"type": "integer", "description": "L'angle en degrés que l'Entité peut voir sur l'axe X (gauche-droite)"},
                "angle_of_view_vertical": {"type": "integer", "description": "L'angle en degrés que l'Entité peut voir sur l'axe Y (haut-bas)"},
                "look_distance": {"type": "number", "description": "La distance en blocs à partir de laquelle l'Entité regardera"},
                "look_time": {"type": "array", "description": "Plage de temps pour examiner l'Entité.", "items": [{"type": "number"}, {"type": "number"}]},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "probability": {"type": "number", "description": "La probabilité de regarder l'Entité."},
                "target_distance": {"type": "number", "description": "La distance en blocs à partir de laquelle l'Entité choisira une cible."}
            }},
            "minecraft:behavior.look_at_target": {"type": "object", "description": "Oblige l'Entité à regarder sa cible en faisant pivoter la pose de l'os de la tête dans une limite définie. Nécessite une cible pour l'Entité qui peut être obtenu avec 'minecraft:behavior.nearest_attackable_target' ou 'minecraft:behavior.hurt_by_target'.", "properties": {
                "angle_of_view_horizontal": {"type": "integer", "description": "L'angle en degrés que l'Entité peut voir sur l'axe X (gauche-droite)"},
                "angle_of_view_vertical": {"type": "integer", "description": "L'angle en degrés que l'Entité peut voir sur l'axe Y (haut-bas)"},
                "look_distance": {"type": "number", "description": "La distance en blocs à partir de laquelle l'Entité regardera"},
                "look_time": {"type": "array", "description": "Plage de temps pour examiner l'Entité.", "items": [{"type": "number"}, {"type": "number"}]},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "probability": {"type": "number", "description": "La probabilité de regarder l'Entité."}
            }},
            "minecraft:behavior.look_at_trading_player": {"type": "object", "description": "Oblige l'Entité à regarder le joueur qui fait du commerce actuellement avec l'Entité. Nécessite que l'Entité ait la capacité à faire du commerce.", "properties": {
                "angle_of_view_horizontal": {"type": "integer", "description": "L'angle en degrés que l'Entité peut voir sur l'axe X (gauche-droite)"},
                "angle_of_view_vertical": {"type": "integer", "description": "L'angle en degrés que l'Entité peut voir sur l'axe Y (haut-bas)"},
                "look_distance": {"type": "number", "description": "La distance en blocs à partir de laquelle l'Entité regardera"},
                "look_time": {"type": "array", "description": "Plage de temps pour examiner l'Entité.", "items": [{"type": "number"}, {"type": "number"}]},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "probability": {"type": "number", "description": "La probabilité de regarder l'Entité."}
            }},
            "minecraft:behavior.make_love": {"type": "object", "description": "Obligel'Entité à interagir avec d'autres entités similaires pour produire une progéniture.", "properties": {
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."}
            }},
            "minecraft:behavior.melee_attack": {"type": "object", "description": "Permet à l'Entité d'effectuer des attaques de mêlée au corps à corps.", "properties": {
                "attack_once": {"type": "boolean", "description": "Permet à l'Entité d'utiliser ce comportement d'attaque, une seule fois seulement."},
                "attack_types": {"description": "Définit les types d'Entités que cette Entité attaquera.", "anyOf": [
                    {"type": "string"},
                    {"type": "array", "items": {"type": "string"}}
                ]},
                "can_spread_on_fire": {"type": "boolean", "description": "Si l'Entité est en feu, celà permet à la cible de l'Entité d'être en feu quand elle se fait attaquer."},
                "cooldown_time": {"type": "number", "description": "Temps de cooldown en secondes entre chaque attaque."},
                "inner_boundary_time_increase": {"type": "number", "description": "Temps (en secondes) à ajouter au recalcul du chemin d'attaque lorsque la cible est au-delà du 'path_inner_boundary'."},
                "max_dist": {"type": "number", "description": "PAS DE DOCUMENTATION."},
                "max_path_time": {"type": "number", "description": "Temps de base maximum (en secondes) pour recalculer le nouveau chemin d'attaque vers la cible (avant application des augmentations)."},
                "melee_fov": {"type": "number", "description": "Champ de vision (en degrés) lors de l'utilisation du compoent sensing pour détecter une cible d'attaque."},
                "min_path_time": {"type": "number", "description": "Temps de base maximum (en secondes) pour recalculer le nouveau chemin d'attaque vers la cible (avant application des augmentations)."},
                "on_attack": {"description": "Evenement à déclencher quand l'Entité attaque sa cible avec succès.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                "on_kill": {"description": "Evenement à déclencher quand l'Entité tue sa cible avec succès.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                "outer_boundary_time_increase": {"type": "number", "description": "Temps (en secondes) à ajouter au recalcul du chemin d'attaque lorsque la cible est au-delà du 'path_outer_boundary'."},
                "path_fail_time_increase": {"type": "number", "description": "Temps (en secondes) à ajouter au recalcul du chemin d'attaque lorsque cette Entité ne peut pas se déplacer le long du chemin actuel."},
                "path_inner_boundary": {"type": "number", "description": "Distance à laquelle augmenter le recalcul du chemin d'attaque par 'inner_boundary_tick_increase'."},
                "path_outer_boundary": {"type": "number", "description": "Distance à laquelle augmenter le recalcul du chemin d'attaque par 'outer_boundary_tick_increase'."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "random_stop_interval": {"type": "integer", "description": "Cette Entité aura 1 chance sur N d'arrêter son attaque en cours, où N = 'random_stop_interval'."},
                "reach_multiplier": {"type": "number", "description": "Utilisé avec la taille de base de l'Entité pour déterminer la distance minimale de la cible avant d'essayer d'infliger des dégâts d'attaque."},
                "require_complete_path": {"type": "boolean", "description": "Active/désactive la nécessité d'avoir un chemin complet de l'Entité à la cible lors de l'utilisation de ce comportement d'attaque au corps à corps."},
                "set_persistent": {"type": "boolean", "description": "Permet à l'Entité d'être définie pour persister lors du ciblage d'un joueur."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité attaquante lorsqu'elle se dirige vers la cible."},
                "target_dist": {"type": "number", "description": "PAS DE DOCUMENTATION."},
                "track_target": {"type": "boolean", "description": "Permet à l'Entité de suivre la cible de l'attaque, même si l'Entité n'a aucune détection."},
                "x_max_rotation": {"type": "number", "description": "Rotation maximale (en degrés), sur l'axe X, cette Entité peut tourner en essayant de regarder la cible."},
                "y_max_head_rotation": {"type": "number", "description": "Rotation maximale (en degrés), sur l'axe Y, cette Entité peut faire pivoter sa tête tout en essayant de regarder la cible."}
            }},
            "minecraft:behavior.melee_box_attack": {"type": "object", "description": "Permet à l'Entité d'infliger des dégâts via une attaque de mêlée avec des calculs de portée basés sur bounding_boxes.", "properties": {
                "attack_once": {"type": "boolean", "description": "Permet à l'Entité d'utiliser ce comportement d'attaque, une seule fois seulement."},
                "attack_types": {"description": "Définit les types d'Entités que cette Entité attaquera.", "anyOf": [
                    {"type": "string"},
                    {"type": "array", "items": {"type": "string"}}
                ]},
                "can_spread_on_fire": {"type": "boolean", "description": "Si l'Entité est en feu, celà permet à la cible de l'Entité d'être en feu quand elle se fait attaquer."},
                "cooldown_time": {"type": "number", "description": "Temps de cooldown en secondes entre chaque attaque."},
                "horizontal_reach": {"type": "number", "description": "La portée d'attaque de l'Entité sera une boîte avec la taille des limites de l'entité augmentée de cette valeur dans toutes les directions horizontales."},
                "inner_boundary_time_increase": {"type": "number", "description": "Temps (en secondes) à ajouter au recalcul du chemin d'attaque lorsque la cible est au-delà du 'path_inner_boundary'."},
                "max_dist": {"type": "number", "description": "PAS DE DOCUMENTATION."},
                "max_path_time": {"type": "number", "description": "Temps de base maximum (en secondes) pour recalculer le nouveau chemin d'attaque vers la cible (avant application des augmentations)."},
                "melee_fov": {"type": "number", "description": "Champ de vision (en degrés) lors de l'utilisation du compoent sensing pour détecter une cible d'attaque."},
                "min_path_time": {"type": "number", "description": "Temps de base maximum (en secondes) pour recalculer le nouveau chemin d'attaque vers la cible (avant application des augmentations)."},
                "on_attack": {"description": "Evenement à déclencher quand l'Entité attaque sa cible avec succès.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                "on_kill": {"description": "Evenement à déclencher quand l'Entité tue sa cible avec succès.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                "outer_boundary_time_increase": {"type": "number", "description": "Temps (en secondes) à ajouter au recalcul du chemin d'attaque lorsque la cible est au-delà du 'path_outer_boundary'."},
                "path_fail_time_increase": {"type": "number", "description": "Temps (en secondes) à ajouter au recalcul du chemin d'attaque lorsque cette Entité ne peut pas se déplacer le long du chemin actuel."},
                "path_inner_boundary": {"type": "number", "description": "Distance à laquelle augmenter le recalcul du chemin d'attaque par 'inner_boundary_tick_increase'."},
                "path_outer_boundary": {"type": "number", "description": "Distance à laquelle augmenter le recalcul du chemin d'attaque par 'outer_boundary_tick_increase'."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "random_stop_interval": {"type": "integer", "description": "Cette Entité aura 1 chance sur N d'arrêter son attaque en cours, où N = 'random_stop_interval'."},
                "reach_multiplier": {"type": "number", "description": "Utilisé avec la taille de base de l'Entité pour déterminer la distance minimale de la cible avant d'essayer d'infliger des dégâts d'attaque."},
                "require_complete_path": {"type": "boolean", "description": "Active/désactive la nécessité d'avoir un chemin complet de l'Entité à la cible lors de l'utilisation de ce comportement d'attaque au corps à corps."},
                "set_persistent": {"type": "boolean", "description": "Permet à l'Entité d'être définie pour persister lors du ciblage d'un joueur."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité attaquante lorsqu'elle se dirige vers la cible."},
                "target_dist": {"type": "number", "description": "PAS DE DOCUMENTATION."},
                "track_target": {"type": "boolean", "description": "Permet à l'Entité de suivre la cible de l'attaque, même si l'Entité n'a aucune détection."},
                "x_max_rotation": {"type": "number", "description": "Rotation maximale (en degrés), sur l'axe X, cette Entité peut tourner en essayant de regarder la cible."},
                "y_max_head_rotation": {"type": "number", "description": "Rotation maximale (en degrés), sur l'axe Y, cette Entité peut faire pivoter sa tête tout en essayant de regarder la cible."}
            }},
            "minecraft:behavior.mingle": {"type": "object", "description": "Oblige l'Entité à naviguer vers le point d'intérêt de la cloche du village et à interagir avec d'autres entités qui lui ont été assignées.", "properties": {
                "cooldown_time": {"type": "number", "description": "Temps (en secondes) pendant lequel l'Entité doit attendre avant d'utiliser à nouveau le Goal."},
                "duration": {"type": "number", "description": "Temps en secondes que l'Entité discutera avec une autre entité."},
                "mingle_distance": {"type": "number", "description": "La distance avec son partenaire que cette Entité va se mêler. Si le type d'entité n'est pas le même que l'Entité, cette valeur doit être identique sur les deux entités."},
                "mingle_partner_type": {"description": "Le type d'entité avec lequel cette Entité est autorisée à se mêler.", "anyOf": [
                    {"type": "array", "items": {"type": "string"}},
                    {"type": "string"}
                ]},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité attaquante lorsqu'elle se dirige vers la cible."}
            }},
            "minecraft:behavior.mount_pathing": {"type": "object", "description": "Oblige l'Entité à se déplacer seule lorsqu'elle est montée. minecraft:behavior.mount_pathing permettra également à l'Entité de cibler une autre entité pour une attaque.", "properties": {
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité attaquante lorsqu'elle se dirige vers la cible."},
                "target_dist": {"type": "number", "description": "La distance à laquelle l'Entité veut s'éloigner de sa cible."},
                "track_target": {"type": "boolean", "description": "Si 'true', cette Entité poursuivra la cible tant qu'elle est une cible valide."}
            }},
            "minecraft:behavior.move_around_target": {"type": "object", "description": "Oblige l'Entité à se déplacer autour d'une cible. Si la cible est trop proche, l'Entité essaiera de s'éloigner de sa cible et inversement.", "properties": {
                "destination_pos_search_spread_degrees": {"type": "number", "description": "Cet angle (en degrés) est utilisé pour contrôler la dispersion lors de la selection d'une position de destination derrière la cible. Un angle de dispersion nul signifie que la position de destination sera directement derrière la cible sans variation. Un angle de dispersion de 90 degrés signifie que la position de destination peut être jusqu'à 45 degrés à gauche et à droite de la position directement derrière la direction de vision de la cible."},
                "destination_position_range": {"type": "array", "description": "La plage de distances à partir de l'entité cible dans laquelle ce Goal doit rechercher une position vers laquelle déplacer l'entité propriétaire.", "minItems": 2, "maxItems": 2, "items": {"type": "number"}},
                "filters": {"description": "Les filtres de test pour les entités.", "$ref": "#/definitions/minecraft_filter-ref"},
                "height_difference_limit": {"type": "number", "description": "La distance en hauteur (en blocs) entre l'entité propriétaire et la cible doit être inférieure à cette valeur lorsque le propriétaire vérifie s'il est trop proche et doit s'éloigner de la cible. Cette valeur doit être supérieure à zéro pour que la logique d'éloignement se déclenche."},
                "horizontal_search_distance": {"type": "integer", "description": "Distance de recherche horizontale (en blocs) lors de la recherche d'une position pour s'éloigner de la cible."},
                "movement_speed": {"type": "number", "description": "La vitesse à laquelle l'entité doit se déplacer vers sa position cible."},
                "vertical_search_distance": {"type": "integer", "description": "Distance de recherche verticale (en blocs) lors de la recherche d'une position pour s'éloigner de la cible."}
            }},
            "minecraft:behavior.move_indoors": {"type": "object", "description": "Permet à l'Entité de se déplacer à l'intérieur d'un batiment ou d'une structure.", "properties": {
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité attaquante lorsqu'elle se dirige vers la cible."},
                "timeout_cooldown": {"type": "number", "description": "Le temps de recharge en secondes avant que l'objectif puisse être réutilisé après l'échec de la recherche de chemin."}
            }},
            "minecraft:behavior.move_outdoors": {"type": "object", "description": "Permet à l'Entité de se déplacer à l'exterieur.", "properties": {
                "goal_radius": {"type": "number", "description": "Le rayon à partir du bloc cible pour compter comme atteignant l'objectif."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "search_count": {"type": "integer", "description": "Le nombre de fois où il faut essayer de trouver une position extérieure aléatoire avant d'échouer."},
                "search_height": {"type": "integer", "description": "La plage y pour laquelle rechercher une position extérieure."},
                "search_range": {"type": "integer", "description": "La plage x et z pour laquelle rechercher une position extérieure."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité attaquante lorsqu'elle se dirige vers la cible."},
                "timeout_cooldown": {"type": "boolean", "description": "Le temps de recharge en secondes avant que l'objectif puisse être réutilisé après l'échec de la recherche de chemin."}
            }},
            "minecraft:behavior.move_through_village": {"type": "object", "description": "Oblige l'Entité à naviguer autour d'un village en créant un chemin pour patrouiller.", "properties": {
                "only_at_night": {"type": "boolean", "description": "Si 'true', l'Entité patrouillera dans le village uniquement durant la nuit."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité attaquante lorsqu'elle se dirige vers la cible."}
            }},
            "minecraft:behavior.move_to_block": {"type": "object", "description": "Oblige l'Entité à se déplacer vers un bloc.", "properties": {
                "goal_radius": {"type": "number", "description": "La distance en blocs au sein de la foule considère qu'elle a atteint l'objectif. Il s'agit de la « marge de manœuvre » pour empêcher l'IA de rebondir en essayant d'atteindre un endroit spécifique."},
                "on_reach": {"description": "Evénement à exécuter quand le bloc est atteint.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                "on_stay_completed": {"description": "Evénement à exécuter à après avoir passé un certain temps définit 'stay_duration' sur le bloc cible.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "search_height": {"type": "integer", "description": "La hauteur en blocs à laquelle l'Entité recherchera le bloc."},
                "search_range": {"type": "integer", "description": "La distance en blocs à laquelle l'Entité recherchera le bloc."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité attaquante lorsqu'elle se dirige vers la cible."},
                "start_chance": {"type": "number", "description": "Chance de démarrer le comportement (appliqué après chaque tick_interval aléatoire)."},
                "stay_duration": {"type": "number", "description": "Nombre de ticks nécessaires pour effectuer un séjour au bloc."},
                "target_blocks": {"type": "array", "description": "Types de blocs vers lesquels se déplacer.", "items": {"anyOf": [
                    {"type": "object", "properties": {
                        "name": {"type": "string", "description": "Le nom du Bloc."},
                        "states": {"type": "array", "items": {"type": "object"}, "description": "La paire état de Bloc et sa valeur."},
                        "tags": {"type": "string", "description": "Le tag de Bloc exprimé en Molang."}
                    }},
                    {"type": "string"}
                ]}},
                "target_offset": {"type": "array", "description": "Décalage à ajouter à la position cible sélectionnée.", "items": [{"type": "number"}, {"type": "number"}, {"type": "number"}]},
                "target_selection_method": {"type": "string", "description": "Méthode de sélection des blocs correspondant à la spécification.", "enum": ["random", "nearest"]},
                "tick_interval": {"type": "integer", "description": "Intervalle moyen en ticks pour essayer d'exécuter ce comportement."}
            }},
            "minecraft:behavior.move_to_land": {"type": "object", "description": "Oblige l'Entité de se déplacer vers la terre ferme lorsqu'elle se trouve dans un milieu non terrestre.", "properties": {
                "goal_radius": {"type": "number", "description": "Distance en blocs à laquelle l'Entité considère avoir atteint son objectif. Cela empêche l'IA de rebondir en essayant d'atteindre un point précis."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "search_count": {"type": "integer", "description": "Le nombre de blocs que l'Entité vérifiera chaque tick dans sa plage de recherche et sa hauteur pour trouver un bloc valide vers lequel se déplacer. Une valeur de 0 fera que l'entité vérifiera tous les blocs dans la plage en un seul tick."},
                "search_height": {"type": "integer", "description": "La hauteur en blocs que l'Entité recherchera pour trouver de la terre ferme."},
                "search_range": {"type": "integer", "description": "La distance en blocs vers laquelle il recherchera un terrain vers lequel se déplacer."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité attaquante lorsqu'elle se dirige vers la cible."}
            }},
            "minecraft:behavior.move_to_lava": {"type": "object", "description": "Oblige l'Entité de se déplacer vers la lave lorsqu'elle est sur terre.", "properties": {
                "goal_radius": {"type": "number", "description": "Distance en blocs à laquelle l'Entité considère avoir atteint son objectif. Cela empêche l'IA de rebondir en essayant d'atteindre un point précis."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "search_count": {"type": "integer", "description": "Le nombre de blocs que l'Entité vérifiera chaque tick dans sa plage de recherche et sa hauteur pour trouver un bloc valide vers lequel se déplacer. Une valeur de 0 fera que l'entité vérifiera tous les blocs dans la plage en un seul tick."},
                "search_height": {"type": "integer", "description": "La hauteur en blocs que l'Entité recherchera pour trouver de la terre ferme."},
                "search_range": {"type": "integer", "description": "La distance en blocs vers laquelle il recherchera un terrain vers lequel se déplacer."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité attaquante lorsqu'elle se dirige vers la cible."}
            }},
            "minecraft:behavior.move_to_liquid": {"type": "object", "description": "Oblige l'Entité de se déplacer dans un liquide lorsqu'elle est sur terre.", "properties": {
                "goal_radius": {"type": "number", "description": "Distance en blocs à laquelle l'Entité considère avoir atteint son objectif. Cela empêche l'IA de rebondir en essayant d'atteindre un point précis."},
                "material_type": {"type": "string", "description": "Le type de materiel du bloc de liquide à trouver.", "enum": ["Any", "Water", "Lava"]},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "search_count": {"type": "integer", "description": "Le nombre de blocs que l'Entité vérifiera chaque tick dans sa plage de recherche et sa hauteur pour trouver un bloc valide vers lequel se déplacer. Une valeur de 0 fera que l'entité vérifiera tous les blocs dans la plage en un seul tick."},
                "search_height": {"type": "integer", "description": "La hauteur en blocs que l'Entité recherchera pour trouver de la terre ferme."},
                "search_range": {"type": "integer", "description": "La distance en blocs vers laquelle il recherchera un terrain vers lequel se déplacer."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité attaquante lorsqu'elle se dirige vers la cible."}
            }},
            "minecraft:behavior.move_to_poi": {"type": "object", "description": "Permet à l'Entité de se déplacer vers un POI si elle peut.", "properties": {
                "poi_type": {"description": "Indique à l'objectif quel type de POI il doit rechercher.", "anyOf": [
                    {"type": "string", "enum": ["bed"]},
                    {"type": "string"}
                ]},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité attaquante lorsqu'elle se dirige vers la cible."}
            }},
            "minecraft:behavior.move_to_random_block": {"type": "object", "description": "Oblige l'Entité à se déplacer vers un bloc aléatoire dans un rayon défini.", "properties": {
                "block_distance": {"type": "number", "description": "Définit la distance par rapport à l'Entité, en blocs, vers laquelle le bloc vers lequel se déplacer sera choisi."},
                "within_radius": {"type": "number", "description": "Définit la distance en blocs entre l'Entité et le bloc pour que le mouvement soit terminé."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité attaquante lorsqu'elle se dirige vers la cible."}
            }},
            "minecraft:behavior.move_to_village": {"type": "object", "description": "Oblige l'Entité à se rendre à une coordonnée x, y, z dans un village.", "properties": {
                "cooldown_time": {"type": "number", "description": "Temps en secondes pendant lequel l'Entité doit attendre avant d'utiliser à nouveau le but."},
                "goal_radius": {"type": "number", "description": "Distance en blocs à laquelle l'Entité considère avoir atteint son objectif. Cela empêche l'IA de rebondir en essayant d'atteindre un point précis."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "search_range": {"type": "integer", "description": "La distance en blocs pour rechercher des villages. Si <= 0, trouvez le village le plus proche quelle que soit la distance."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité attaquante lorsqu'elle se dirige vers la cible."}
            }},
            "minecraft:behavior.move_to_water": {"type": "object", "description": "Oblige l'Entité de se déplacer vers l'eau lorsqu'elle est sur terre.", "properties": {
                "goal_radius": {"type": "number", "description": "Distance en blocs à laquelle l'Entité considère avoir atteint son objectif. Cela empêche l'IA de rebondir en essayant d'atteindre un point précis."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "search_count": {"type": "integer", "description": "Le nombre de blocs que l'Entité vérifiera chaque tick dans sa plage de recherche et sa hauteur pour trouver un bloc valide vers lequel se déplacer. Une valeur de 0 fera que l'entité vérifiera tous les blocs dans la plage en un seul tick."},
                "search_height": {"type": "integer", "description": "La hauteur en blocs que l'Entité recherchera pour trouver de la terre ferme."},
                "search_range": {"type": "integer", "description": "La distance en blocs vers laquelle il recherchera un terrain vers lequel se déplacer."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité attaquante lorsqu'elle se dirige vers la cible."}
            }},
            "minecraft:behavior.move_towards_dwelling_restriction": {"type": "object", "description": "Permet à l'Entité avec le component 'dweller' de se déplacer vers la zone de leur village à laquelle l'Entité devrait être limitée.", "properties": {
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité attaquante lorsqu'elle se dirige vers la cible."}
            }},
            "minecraft:behavior.move_towards_home_restriction": {"type": "object", "description": "Permet à l'Entité avec le component 'home' de se déplacer vers leur zone prédéfinie à laquelle l'Entité devrait être limitée.", "properties": {
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité attaquante lorsqu'elle se dirige vers la cible."}
            }},
            "minecraft:behavior.move_towards_target": {"type": "object", "description": "Oblige l'Entité à se déplacer vers une cible. Nécessite une cible.", "properties": {
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "within_radius": {"type": "number", "description": "Définit le rayon en blocs que l'Entité essaie de distancer de la cible. Une valeur de 0 signifie qu'il essaie d'occuper le même bloc que la cible."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité attaquante lorsqu'elle se dirige vers la cible."}
            }},
            "minecraft:behavior.nap": {"type": "object", "description": "Oblige l'Entité à s'arrêter occasionnellement et à faire une sieste sous certaines conditions.", "properties": {
                "can_nap_filters": {"description": "Conditions pour que l'Entité puisse faire une sieste.", "$ref": "#/definitions/minecraft_filter-ref"},
                "cooldown_max": {"type": "number", "description": "Le temps maximum en secondes que l'Entité doit attendre avant de pouvoir utiliser ce comportement à nouveau."},
                "cooldown_min": {"type": "number", "description": "Le temps minimum en secondes que l'Entité doit attendre avant de pouvoir utiliser ce comportement à nouveau."},
                "mob_detect_dist": {"type": "number", "description": "La distance de bloc en x et z qui sera vérifiée pour les monstres détectés par cet Entité."},
                "mob_detect_height": {"type": "number", "description": "La distance de bloc en y qui sera vérifiée pour les monstres détectés par cette Entité."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "wake_mob_exceptions": {"description": "Conditions définissant quels entités peuvent approcher sans réveiller l'Entité endormie.", "$ref": "#/definitions/minecraft_filter-ref"}
            }},
            "minecraft:behavior.nearest_attackable_target": {"type": "object", "description": "Oblige l'Entité à attaquer la cible la plus proche dans un sous-ensemble donné de types de cibles spécifiques.", "properties": {
                "attack_interval": {"type": "integer", "description": "Intervalle de temps (en secondes) entre la recherche d'une cible d'attaque, la plage est en (0, 'attack_interval']. Utilisé uniquement si 'attack_interval' est supérieur à 0, sinon 'scan_interval' est utilisé."},
                "attack_interval_min": {"type": "integer", "description": "Alias pour 'attack_interval'; fournit la même fonctionnalité que 'attack_interval'."},
                "attack_owner": {"type": "boolean", "description": "Si 'true', l'Entité peut attaquer son propriétaire."},
                "entity_types": {"type": "array", "description": "Définit avec des conditions les types de cibles qui sont valide pour cette Entité.", "items": {"type": "object", "properties": {
                    "filters": {"description": "Les filtres de test pour les entités.", "$ref": "#/definitions/minecraft_filter-ref"},
                    "max_dist": {"type": "number", "description": "Pour être un choix de cible valide, le type de cible ne peut pas être plus éloigné de cette Entité que 'max_dist'."},
                    "must_see": {"type": "boolean", "description": "Détermine si la validité de la cible nécessite que cette Entité soit à portée uniquement, ou à la fois à portée et en vue."},
                    "must_see_forget_duration": {"type": "number", "description": "Temps (en secondes) pendant lequel la cible ne doit pas être vue par cette Entité pour devenir invalide. Utilisé uniquement si « must_see » est vrai."},
                    "reevaluate_description": {"type": "boolean", "description": "Si c'est vrai, le mob cessera d'être ciblée si elle ne remplit plus les conditions."}
                }}},
                "must_reach": {"type": "boolean", "description": "Si c'est vrai, cette Entité nécessite un chemin vers la cible."},
                "must_see": {"type": "boolean", "description": "Détermine si la validité de la cible nécessite que cette Entité soit à portée uniquement, ou à la fois à portée et en vue."},
                "must_see_forget_duration": {"type": "number", "description": "Temps (en secondes) pendant lequel la cible ne doit pas être vue par cette Entité pour devenir invalide. Utilisé uniquement si « must_see » est vrai."},
                "persist_time": {"type": "number", "description": "Temps (en secondes) pendant lequel cette Entité peut continuer à attaquer la cible une fois que la cible n'est plus valide."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "reevaluate_description": {"type": "boolean", "description": "Si c'est vrai, le mob cessera d'être ciblée si elle ne remplit plus les conditions."},
                "reselect_targets": {"type": "boolean", "description": "Permet à l'Entité attaquante de mettre à jour la cible la plus proche, sinon une cible n'est resélectionnée qu'après chaque 'scan_interval' ou 'attack_interval'."},
                "scan_interval": {"type": "integer", "description": "Si 'attack_interval' est 0 ou n'est pas déclaré, alors entre les attaques : la recherche d'une nouvelle cible se produit à chaque nombre de ticks égal à 'scan_interval', la valeur minimale est 1. Les valeurs inférieures à 10 peuvent affecter les performances."},
                "set_persistent": {"type": "boolean", "description": "Permet à l'Entité d'être définie pour persister lors du ciblage d'un joueur."},
                "target_invisible_multiplier": {"type": "number", "description": "Multiplié par le pourcentage de couverture blindée de la cible pour modifier 'max_dist' lors de la détection d'une cible invisible."},
                "target_search_height": {"type": "number", "description": "Distance verticale maximale de recherche de cible, si elle est supérieure au 'max_dist' du type de cible. Une valeur négative est par défaut 'entity_types' et le plus grand 'max_dist'."},
                "target_sneak_visibility_multiplier": {"type": "number", "description": "Multiplié par le 'max_dist' du type de cible lorsque vous essayez de détecter une cible furtive."},
                "within_radius": {"type": "number", "description": "Distance maximale entre cette Entité et la cible lorsqu'elle la suit, sinon la cible devient invalide. Cette valeur n'est utilisée que si l'Entité ne déclare pas 'minecraft:follow_range'."}
            }},
            "minecraft:behavior.nearest_prioritized_attackable_target": {"type": "object", "description": "Permet à l'Entité de rechercher et de poursuivre la cible valide la plus proche.", "properties": {
                "attack_interval": {"type": "integer", "description": "Intervalle de temps (en secondes) entre la recherche d'une cible d'attaque, la plage est en (0, 'attack_interval']. Utilisé uniquement si 'attack_interval' est supérieur à 0, sinon 'scan_interval' est utilisé."},
                "cooldown": {"type": "number", "description": "Le temps en secondes pendant lequel l'Entité doit attendre avant de sélectionner à nouveau une cible du même type."},
                "entity_types": {"type": "array", "description": "Définit avec des conditions les types de cibles qui sont valide pour cette Entité.", "items": {"type": "object", "properties": {
                    "cooldown": {"type": "number", "description": "Le temps en secondes pendant lequel l'Entité doit attendre avant de sélectionner à nouveau une cible du même type."},
                    "filters": {"description": "Les filtres de test pour les entités.", "$ref": "#/definitions/minecraft_filter-ref"},
                    "max_dist": {"type": "number", "description": "Pour être un choix de cible valide, le type de cible ne peut pas être plus éloigné de cette Entité que 'max_dist'."},
                    "must_see": {"type": "boolean", "description": "Détermine si la validité de la cible nécessite que cette Entité soit à portée uniquement, ou à la fois à portée et en vue."},
                    "must_see_forget_duration": {"type": "number", "description": "Temps (en secondes) pendant lequel la cible ne doit pas être vue par cette Entité pour devenir invalide. Utilisé uniquement si « must_see » est vrai."},
                    "reevaluate_description": {"type": "boolean", "description": "Si c'est vrai, le mob cessera d'être ciblée si elle ne remplit plus les conditions."},
                    "sprint_speed_multiplier": {"type": "number", "description": "Multiplicateur pour la vitesse de course. Une valeur de 1,0 signifie que la vitesse est inchangée"},
                    "walk_speed_multiplier": {"type": "number", "description": "Multiplicateur de la vitesse de marche. Une valeur de 1,0 signifie que la vitesse est inchangée"}
                }}},
                "must_reach": {"type": "boolean", "description": "Si c'est vrai, cette Entité nécessite un chemin vers la cible."},
                "must_see": {"type": "boolean", "description": "Détermine si la validité de la cible nécessite que cette Entité soit à portée uniquement, ou à la fois à portée et en vue."},
                "must_see_forget_duration": {"type": "number", "description": "Temps (en secondes) pendant lequel la cible ne doit pas être vue par cette Entité pour devenir invalide. Utilisé uniquement si « must_see » est vrai."},
                "persist_time": {"type": "number", "description": "Temps (en secondes) pendant lequel cette Entité peut continuer à attaquer la cible une fois que la cible n'est plus valide."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "reevaluate_description": {"type": "boolean", "description": "Si c'est vrai, le mob cessera d'être ciblée si elle ne remplit plus les conditions."},
                "reselect_targets": {"type": "boolean", "description": "Permet à l'Entité attaquante de mettre à jour la cible la plus proche, sinon une cible n'est resélectionnée qu'après chaque 'scan_interval' ou 'attack_interval'."},
                "scan_interval": {"type": "integer", "description": "Si 'attack_interval' est 0 ou n'est pas déclaré, alors entre les attaques : la recherche d'une nouvelle cible se produit à chaque nombre de ticks égal à 'scan_interval', la valeur minimale est 1. Les valeurs inférieures à 10 peuvent affecter les performances."},
                "set_persistent": {"type": "boolean", "description": "Permet à l'Entité d'être définie pour persister lors du ciblage d'un joueur."},
                "target_search_height": {"type": "number", "description": "Distance verticale maximale de recherche de cible, si elle est supérieure au 'max_dist' du type de cible. Une valeur négative est par défaut 'entity_types' et le plus grand 'max_dist'."},
                "within_radius": {"type": "number", "description": "Distance maximale entre cette Entité et la cible lorsqu'elle la suit, sinon la cible devient invalide. Cette valeur n'est utilisée que si l'Entité ne déclare pas 'minecraft:follow_range'."}
            }},
            "minecraft:behavior.ocelot_sit_on_block": {"type": "object", "description": "Oblige à l'Entité à s'asseoir sur place similaire à la pose d'animation des Ocelots.", "properties": {
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité attaquante lorsqu'elle utilise cet AI Goal."}
            }},
            "minecraft:behavior.ocelotattack": {"type": "object", "description": "Permert à l'Entité d'attaquer en se faufilant et en bondissant.", "properties": {
                "cooldown_time": {"type": "number", "description": "Temps en secondes entre chaque attaque."},
                "max_distance": {"type": "number", "description": "Distance maximale de la cible, cette Entité utilisera ce comportement d'attaque."},
                "max_sneak_range": {"type": "number", "description": "Distance maximale de la cible, cette Entité commence à se faufiler."},
                "max_sprint_range": {"type": "number", "description": "Distance maximale de la cible, cette Entité commence à sprinter (le sprint est prioritaire sur la furtivité)."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "reach_multiplier": {"type": "number", "description": "Utilisé avec la taille de base de l'Entité pour déterminer la distance minimale de la cible avant d'essayer d'infliger des dégâts d'attaque."},
                "sneak_speed_multiplier": {"type": "number", "description": "Modifie la vitesse de déplacement de l'Entité attaquante en se faufilant."},
                "sprint_speed_multiplier": {"type": "number", "description": "Modifie la vitesse de déplacement de l'Entité attaquante lors du sprint."},
                "walk_speed_multiplier": {"type": "number", "description": "Modifie la vitesse de déplacement de l'Entité attaquante lorsqu'elle ne se faufile pas ou ne sprinte pas, mais toujours à portée d'attaque."},
                "x_max_rotation": {"type": "number", "description": "Rotation maximale (en degrés), sur l'axe X, cette Entité peut tourner en essayant de regarder la cible."},
                "y_max_head_rotation": {"type": "number", "description": "Rotation maximale (en degrés), sur l'axe Y, cette Entité peut faire pivoter sa tête tout en essayant de regarder la cible."}
            }},
            "minecraft:behavior.offer_flower": {"type": "object", "description": "Oblige l'Entité à offrir une fleur à une autre entité avec le component 'minecraft:take_flower'.", "properties": {
                "chance_to_start": {"type": "number", "description": "Pourcentage de chance que l'Entité commence ce Goal."},
                "filters": {"description": "Filtres qui doivent être validé pour que ce component commence.", "$ref": "#/definitions/minecraft_filter-ref"},
                "max_head_rotation_y": {"type": "number", "description": "Rotation maximale (en degrés), sur l'axe Y, cette Entité peut faire pivoter sa tête tout en essayant de regarder la cible."},
                "max_offer_flower_duration": {"type": "number", "description": "La durée maximale (en secondes) pendant laquelle l'Entité offrira la fleur avant de quitter le but."},
                "max_rotation_x": {"type": "number", "description": "Rotation maximale (en degrés), sur l'axe X, cette Entité peut tourner en essayant de regarder la cible."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "search_area": {"type": "array", "description": "Les dimensions de l'AABB étaient utilisées pour rechercher une foule potentielle à qui offrir des fleurs.", "items": [{"type": "number"}, {"type": "number"}, {"type": "number"}]}
            }},
            "minecraft:behavior.open_door": {"type": "object", "description": "Permet à l'Entité d'ouvrir les portes. Nécessite que l'Entité soit capable de franchir les portes.", "properties": {
                "close_door_after": {"type": "boolean", "description": "Si 'true', l'Entité fermera la porte après l'avoir ouvert en ayant passé à travers."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."}
            }},
            "minecraft:behavior.owner_hurt_by_target": {"type": "object", "description": "Permet à l'Entité de cibler un eentité qui frappe son propriétaire.", "properties": {
                "entity_types": {"type": "object", "description": "Liste des types d'entités que l'Entité peut ciblé quand elle blesse son propriétaire.", "items": {"type": "object", "properties": {
                    "cooldown": {"type": "number", "description": "Le temps en secondes que l'Entité doit attendre avant de selectionner à nouveau une cible du même type."},
                    "filters": {"description": "Les filtres de test pour les entités.", "$ref": "#/definitions/minecraft_filter-ref"},
                    "max_dist": {"type": "number", "description": "Distance maximale pour que cette Entité soit un choix valide."},
                    "must_see": {"type": "boolean", "description": "Si 'true', l'Entité doit être visible pour être un choix valide."},
                    "must_see_forget_duration": {"type": "number", "description": "Détermine le temps en secondes pendant lequel cette Entité cherchera une cible avant de l'oublier et d'en chercher une nouvelle lorsque la cible n'est plus visible."},
                    "reevaluate_description": {"type": "boolean", "description": "Si 'true', l'Si c'est vrai, la cible cessera d'être ciblée si elle ne remplit plus les conditions."},
                    "sprint_speed_modifier": {"type": "number", "description": "Modificateur de la vitesse de sprint."},
                    "walk_speed_modifier": {"type": "number", "description": "Modificateur de la vitesse de marche."}
                }}},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."}
            }},
            "minecraft:behavior.owner_hurt_target": {"type": "object", "description": "Permet à l'Entité de cibler une entité frappée par son propriétaire.", "properties": {
                "entity_types": {"type": "object", "description": "Liste des types d'entités que l'Entité peut ciblé quand l'autre entité est frappé par le propriétaire.", "items": {"type": "object", "properties": {
                    "cooldown": {"type": "number", "description": "Le temps en secondes que l'Entité doit attendre avant de selectionner à nouveau une cible du même type."},
                    "filters": {"description": "Les filtres de test pour les entités.", "$ref": "#/definitions/minecraft_filter-ref"},
                    "max_dist": {"type": "number", "description": "Distance maximale pour que cette Entité soit un choix valide."},
                    "must_see": {"type": "boolean", "description": "Si 'true', l'Entité doit être visible pour être un choix valide."},
                    "must_see_forget_duration": {"type": "number", "description": "Détermine le temps en secondes pendant lequel cette Entité cherchera une cible avant de l'oublier et d'en chercher une nouvelle lorsque la cible n'est plus visible."},
                    "reevaluate_description": {"type": "boolean", "description": "Si 'true', l'Si c'est vrai, la cible cessera d'être ciblée si elle ne remplit plus les conditions."},
                    "sprint_speed_modifier": {"type": "number", "description": "Modificateur de la vitesse de sprint."},
                    "walk_speed_modifier": {"type": "number", "description": "Modificateur de la vitesse de marche."}
                }}},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."}
            }},
            "minecraft:behavior.panic": {"type": "object", "description": "Permet à l'Entité de rentrer dans l'état 'panic', qui fait en sorte que l'Entité court et s'éloigne de la source de dégât qui l'a fait rentré dans cet état.", "properties": {
                "damage_sources": {"type": "array", "description": "Liste des différentes sources de dégâts qui amènera cet Entité à paniquer.", "items": {
                    "type": "string", "enum": [
                        "all, anvil", "block_explosion", "contact", "drowning", "entity_attack", "entity_explosion", "fall", "falling_block", "fatal", "fire", "fire_tick", "fly_into_wall", 
                        "lava", "magic", "none", "override", "piston", "projectile", "self_destruct", "sonic_boom", "stalactite", "stalagmite", "starve", "suffocation", "thorns", 
                        "void", "wither"
                    ]
                }},
                "force": {"type": "boolean", "description": "Si 'true', cette Entité n'arrêtera pas de paniquer jusqu'à ce qu'elle ne puisse plus bouger ou que l'objectif lui soit retiré."},
                "ignore_mob_damage": {"type": "boolean", "description": "Si 'true', l'Entité ne paniquera pas en réponse aux dégâts causés par d'autres foules. Cela remplace les types de dégâts dans 'damage_sources'."},
                "panic_sound": {"type": "string", "description": "Son à jouer durant la panique."},
                "prefer_water": {"type": "boolean", "description": "Si 'true', l'Entité préférera l'eau à la terre."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "sound_interval": {"type": "array", "description": "Temps minimum et maximum en secondes entre chaque lecture du son.", "items": [{"type": "number"}, {"type": "number"}]},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité attaquante lorsqu'elle utilise cet AI Goal."}
            }},
            "minecraft:behavior.peek": {"type": "object", "description": "Permet à l'Entité de jeter un coup d'oeil à la manière d'un Shulker.", "properties": {
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."}
            }},
            "minecraft:behavior.pet_sleep_with_owner": {"type": "object", "description": "Oblige l'Entité à dormir sur un lit partagé avec son propriétaire endormi.", "properties": {
                "goal_radius": {"type": "number", "description": "La distance en blocs au sein de l'Entité considère qu'elle a atteint l'objectif. Il s'agit de la 'marge de manœuvre' pour empêcher l'IA de rebondir en essayant d'atteindre un endroit spécifique."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "search_height": {"type": "integer", "description": "Hauteur en blocs à partir du propriétaire, l'animal peut dormir avec le propriétaire."},
                "search_radius": {"type": "integer", "description": "Le rayon dans lequel l'Entité recherchera un propriétaire avec lequel se blottir."},
                "search_range": {"type": "integer", "description": "La plage dans laquelle l'Entité recherchera un propriétaire avec lequel se blottir."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité attaquante lorsqu'elle utilise cet AI Goal."}
            }},
            "minecraft:behavior.pickup_items": {"type": "object", "description": "Permet à l'Entité de ramasser des Items au sol.", "properties": {
                "can_pickup_any_item": {"type": "boolean", "description": "Si 'true', l'Entité peut récupérer n'importe quel item."},
                "can_pickup_to_hand_or_equipment": {"type": "boolean", "description": "Si 'true', l'Entité peut prendre les items dans sa main ou dans les slots d'armures."},
                "cooldown_after_being_attacked": {"type": "number", "description": "Temps dont une Entité offensée a besoin avant d'être prête à ramasser des objets."},
                "excluded_items": {"type": "array", "description": "Listes des Items que cet Entité ne prendra pas.", "items": {"type": "string"}},
                "goal_radius": {"type": "number", "description": "La distance en blocs au sein de l'Entité considère qu'elle a atteint l'objectif. Il s'agit de la 'marge de manœuvre' pour empêcher l'IA de rebondir en essayant d'atteindre un endroit spécifique."},
                "max_dist": {"type": "number", "description": "Distance maximale que cet Entité cherchera des Items à ramasser."},
                "pickup_based_on_chance": {"type": "boolean", "description": "Si 'true', en fonction de la difficulté, il y a une chance aléatoire que l'Entité ne soit pas capable de prendre les items."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité attaquante lorsqu'elle utilise cet AI Goal."},
                "track_target": {"type": "boolean", "description": "Si 'true', cette Entité poursuivra la cible tant qu'elle est une cible valide."}
            }},
            "minecraft:behavior.play": {"type": "object", "description": "Permet à l'Entité de jouer avec d'autres mobs en se poursuivant et en se déplaçant de manière aléatoire.", "properties": {
                "chance_to_start": {"type": "number", "description": "Pourcentage de chance que l'Entité commence ce Goal."},
                "follow_distance": {"type": "integer", "description": "La distance ern blocs que l'Entité essaie d'être dans la range de l'entité ami qu'elle suit."},
                "friend_search_area": {"type": "array", "description": "Les dimensions de l'AABB sont utilisées pour rechercher un ami potentiel avec qui jouer.", "items": [{"type": "number"}, {"type": "number"}, {"type": "number"}]},
                "friend_types": {"type": "array", "description": "Les types d'entités à considérer lors de la recherche d'un potentiel ami avec qui jouer.", "items": {"type": "string"}},
                "max_play_duration_seconds": {"type": "number", "description": "Le nombre maximum de secondes pendant lesquelles l'Entité jouera avant de quitter le but."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "random_pos_search_height": {"type": "integer", "description": "La hauteur (en blocs) à laquelle l'Entité recherchera pour trouver une position aléatoire vers laquelle se déplacer. Doit être au moins 1."},
                "random_pos_search_range": {"type": "integer", "description": "La distance (en blocs) au sol sur laquelle l'Entité cherchera pour trouver une position aléatoire vers laquelle se déplacer. Doit être au moins 1."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité attaquante lorsqu'elle utilise cet AI Goal."}
            }},
            "minecraft:behavior.play_dead": {"type": "object", "description": "Permet à l'Entité de faire semblant d'être morte pour éviter d'être ciblée par des attaquants.", "properties": {
                "apply_regeneration": {"type": "boolean", "description": "Détermine si l'Entité recevra l'effet de régénération en faisant le mort."},
                "damage_sources": {"type": "array", "description": "Liste des différentes sources de dégâts qui amènera cet Entité à paniquer.", "items": {
                    "type": "string", "enum": [
                        "all, anvil", "block_explosion", "contact", "drowning", "entity_explosion", "entity_attack", "fall", "falling_block", "fatal", "fire", "fire_tick", "fly_into_wall", 
                        "lava", "magic", "none", "override", "piston", "projectile", "self_destruct", "sonic_boom", "stalactite", "stalagmite", "starve", "suffocation", "thorns", 
                        "void", "wither"
                    ]
                }},
                "duration": {"type": "number", "description": "La durée pendant laquelle l'Entité fera le mort (en secondes)."},
                "filters": {"description": "La liste des autres déclencheurs requis pour que l'Entité activer le jouement de mort.", "$ref": "#/definitions/minecraft_filter-ref"},
                "force_below_health": {"type": "integer", "description": "La quantité de santé à laquelle les dégâts feront faire le mort à l'Entité."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "random_damage_range": {"type": "array", "description": "La gamme de dégâts qui peuvent provoquer le démarrage de l'objectif en fonction du caractère aléatoire. Les dégâts subis en dessous du minimum ne feront jamais démarrer l'objectif. Les dégâts subis au-dessus du maximum feront toujours démarrer l'objectif.", "items": [{"type": "number"}, {"type": "number"}]},
                "random_start_chance": {"type": "number", "description": ""}
            }},
            "minecraft:behavior.player_ride_tamed": {"type": "object", "description": "Permet à l'Entité d'être chevauchable après avoir été apprivoisé par un joueur.", "properties": {
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."}
            }},
            "minecraft:behavior.raid_garden": {"type": "object", "description": "Permet à l'Entité de manger/piller les cultures qui ont été planté dans une ferme.", "properties": {
                "blocks": {"type": "array", "description": "Les Blocs que l'Entité fixe pour le manger/piller.", "items": {"anyOf": [
                    {"type": "object", "properties": {
                        "name": {"type": "string", "description": "Le nom du Bloc."},
                        "states": {"type": "array", "items": {"type": "object"}, "description": "La paire état de Bloc et sa valeur."},
                        "tags": {"type": "string", "description": "Le tag de Bloc exprimé en Molang."}
                    }},
                    {"type": "string"}
                ]}},
                "eat_delay": {"type": "integer", "description": "Temps en secondes entre chaque fois que l'Entité mange/pille."},
                "full_delay": {"type": "integer", "description": "Temps en secondes avanrt que l'Entité mange/pille de nouveau après avoir mangé au maximum."},
                "goal_radius": {"type": "number", "description": "La distance en blocs au sein de l'Entité considère qu'elle a atteint l'objectif. Il s'agit de la 'marge de manœuvre' pour empêcher l'IA de rebondir en essayant d'atteindre un endroit spécifique."},
                "initial_eat_delay": {"type": "integer", "description": "Temps en secondes avant de commencer à manger/piller une fois que l'Entité arrive à la culture."},
                "max_to_eat": {"type": "integer", "description": "Nombre maximum de cultures que cette Entité souhaite manger/piller. S'il est définit sur 0 ou moins, il n'y a pas de maximum."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "search_height": {"type": "integer", "description": "Distance maximale pour rechercher un bloc en y."},
                "search_range": {"type": "integer", "description": "Distance en blocs sur laquelle l'Entité cherchera des récoltes à manger."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité attaquante lorsqu'elle utilise cet AI Goal."}
            }},
            "minecraft:behavior.ram_attack": {"type": "object", "description": "Oblige l'Entité à rechercher une cible aléatoire et, si un chemin direct existe entre l'Entité et la cible, elle effectuera une charge. Si l'attaque de bélier réussit, la cible sera repoussée en fonction de la vitesse de l'Entité.", "properties": {
                "baby_knockback_modifier": {"type": "number", "description": "Le modificateur de recul que les bébés ont."},
                "cooldown_range": {"type": "array", "description": "Plage de temps de recharge minimale et maximale (positive, en secondes) entre chaque tentative d'attaque par bélier.", "items": [{"type": "number"}, {"type": "number"}]},
                "knockback_force": {"type": "number", "description": "La force de l'attaque du bélier repousse."},
                "knockback_height": {"type": "number", "description": "La hauteur du recul de l'attaque du bélier."},
                "min_ram_distance": {"type": "number", "description": "La distance minimale à laquelle l'Entité peut lancer une attaque bélier."},
                "on_start": {"description": "Evénement à déclencher quand l'Entité attaque.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                "pre_ram_sound": {"type": "string", "description": "Son à jouer quand l'Entité est sur le point d'effectuer une attaque bélier."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "ram_distance": {"type": "number", "description": "La distance que l'Entité commence à parcourir à la vitesse du bélier."},
                "ram_impact_sound": {"type": "string", "description": "Son à jouer quand une entité est impacté par une attaque de bélier."},
                "ram_speed": {"type": "number", "description": "La vitesse de l'Entité lors de la charge vers la cible."},
                "run_speed": {"type": "number", "description": "La vitesse de l'Entité lorsqu'elle court vers la cible."}
            }},
            "minecraft:behavior.random_breach": {"type": "object", "description": "Oblige l'Entité à franchir la surface de l'eau à une intervalle aléatoire.", "properties": {
                "cooldown_time": {"type": "number", "description": "Temps en secondes entre chaque attaque."},
                "interval": {"type": "integer", "description": "Une valeur aléatoire pour déterminer quand se déplacer de manière aléatoire quelque part. Cela a une chance de 1/intervalle de choisir cet objectif."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité attaquante lorsqu'elle utilise cet AI Goal."},
                "xz_dist": {"type": "integer", "description": "Distance en blocs au sol à laquelle l'Entité cherchera un nouvel endroit vers lequel se déplacer. Doit être au moins 1."},
                "y_dist": {"type": "integer", "description": "Distance en blocs que l'Entité recherchera vers le haut ou vers le bas pour trouver un nouvel endroit vers lequel se déplacer. Doit être au moins 1."}
            }},
            "minecraft:behavior.random_fly": {"type": "object", "description": "Permet à l'Entité de voler au hasard.", "properties": {
                "avoid_damage_blocks": {"type": "boolean", "description": "Indique au pathfinder d'éviter les blocs qui causent des dégâts lors de la création d'un chemin."},
                "can_land_on_trees": {"type": "boolean", "description": "Si 'true', l'Entité peut arrêter de voler et atterrir sur un arbre au lieu du sol."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité attaquante lorsqu'elle utilise cet AI Goal."},
                "xz_dist": {"type": "integer", "description": "Distance en blocs au sol à laquelle l'Entité cherchera un nouvel endroit vers lequel se déplacer. Doit être au moins 1."},
                "y_dist": {"type": "integer", "description": "Distance en blocs que l'Entité recherchera vers le haut ou vers le bas pour trouver un nouvel endroit vers lequel se déplacer. Doit être au moins 1."},
                "y_offset": {"type": "number", "description": "Hauteur en blocs à ajouter à la position cible sélectionnée."}
            }},
            "minecraft:behavior.random_hover": {"type": "object", "description": "Permet l'Entité de planer au hasard, près de la surface.", "properties": {
                "hover_height": {"type": "array", "description": "La hauteur au-dessus de la surface que l'Entité tentera de maintenir.", "items": [{"type": "number"}, {"type": "number"}]},
                "interval": {"type": "integer", "description": "Une valeur aléatoire pour déterminer quand se déplacer de manière aléatoire quelque part. Cela a une chance de 1/intervalle de choisir cet objectif."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité attaquante lorsqu'elle utilise cet AI Goal."},
                "xz_dist": {"type": "integer", "description": "Distance en blocs au sol à laquelle l'Entité cherchera un nouvel endroit vers lequel se déplacer. Doit être au moins 1."},
                "y_dist": {"type": "integer", "description": "Distance en blocs que l'Entité recherchera vers le haut ou vers le bas pour trouver un nouvel endroit vers lequel se déplacer. Doit être au moins 1."},
                "y_offset": {"type": "number", "description": "Hauteur en blocs à ajouter à la position cible sélectionnée."}
            }},
            "minecraft:behavior.random_look_around": {"type": "object", "description": "Oblige l'Entité à choisir une direction aléatoire dans laquelle regarder pendant une durée aléatoire dans une plage.", "properties": {
                "angle_of_view_horizontal": {"type": "integer", "description": "L'angle en degrés que l'Entité peut voir sur l'axe X (gauche-droite)"},
                "angle_of_view_vertical": {"type": "integer", "description": "L'angle en degrés que l'Entité peut voir sur l'axe Y (haut-bas)"},
                "look_distance": {"type": "number", "description": "La distance en blocs à partir de laquelle l'Entité regardera"},
                "look_time": {"type": "array", "description": "Plage de temps en secondes que l'Entité va rester en regardant une direction aléatoire avant de regarder dans une autre direction.", "items": [{"type": "number"}, {"type": "number"}]},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "probability": {"type": "number", "description": "La probabilité de regarder l'Entité."}
            }},
            "minecraft:behavior.random_look_around_and_sit": {"type": "object", "description": "Oblige l'Entité à s'asseoir sur place et à regarder autour d'elle dans différentes directions. L'Entité soit avoir une animation 'sitting' configurée pour pouvoir utiliser cet objectif.", "properties": {
                "continue_if_leashed": {"type": "boolean", "description": "Détermine si le Goal devrait continuer à être utilisé si l'Entité est attachée."},
                "continue_sitting_on_reload": {"type": "boolean", "description": "Lorsque définit sur 'true', l'Entité restera assiis lors du relancement du monde."},
                "max_angle_of_view_horizontal": {"type": "number", "description": "L'angle le plus à droite que l'Entité peut regarder sur le plan horizontal par rapport à sa direction d'orientation initiale."},
                "max_look_count": {"type": "integer", "description": "Le nombre maximum de regards que l'Entité aura en regardant autour d'elle."},
                "max_look_time": {"type": "integer", "description": "La durée maximale (en ticks) pendant laquelle l'Entité restera dans une direction tout en regardant autour de lui."},
                "min_angle_of_view_horizontal": {"type": "number", "description": "L'angle le plus à gauche que l'Entité peut regarder sur le plan horizontal par rapport à sa direction d'orientation initiale."},
                "min_look_count": {"type": "integer", "description": "Le nombre minimum de regards que l'Entité aura en regardant autour d'elle."},
                "min_look_time": {"type": "integer", "description": "La durée minimale (en ticks) pendant laquelle l'Entité restera dans une direction tout en regardant autour de lui."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "probability": {"type": "number", "description": "La probabilité de regarder autour de soi/de s'asseoir au hasard."},
                "random_look_around_cooldown": {"type": "integer", "description": "Le temps de recharge en secondes avant que l'objectif puisse être à nouveau utilisé."}
            }},
            "minecraft:behavior.random_search_and_dig": {"type": "object", "description": "Permet à l'Entité de localiser un bloc cible aléatoire vers lequel elle peut trouver un chemin. Une fois trouvée, l'Entité se dirigera vers le bloc et déterrera un item. Les blocs cibles par défaut sont [ Dirt, Grass, Podzol, DirtWithRoots, MossBlock, Mud, MuddyMangroveRoots].", "properties": {
                "cooldown_range": {"type": "array", "description": "Plage de temps de recharge de l'objectif en secondes.", "items": [{"type": "number"}, {"type": "number"}]},
                "digging_duration_range": {"type": "array", "description": "Durée de creusement en secondes.", "items": [{"type": "number"}, {"type": "number"}]},
                "find_valid_position_retries": {"type": "number", "description": "Nombre de tentatives pour trouver une position cible valide dans la plage de recherche."},
                "goal_radius": {"type": "number", "description": "Distance en blocs au sein de l'eEntité pour considérer qu'elle a atteint la position cible."},
                "item_table": {"type": "string", "description": "Chemin d'accès à la Loot_Table pour les items à faire apparaitre après le deterrement."},
                "on_digging_start": {"description": "Evénement à executer quand le Goal finit de chercher et que l'Entité commence à creuser.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                "on_fail_during_digging": {"description": "Evénement à executer quand le Goal échoue durant l'état 'digging'.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                "on_fail_during_searching": {"description": "Evénement à executer quand le Goal échoue durant l'état 'searching'.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                "on_item_found": {"description": "Evénement à executer quand le Goal trouve un Item..", "$ref": "#/definitions/trigger_event_parameters-ref"},
                "on_searching_start": {"description": "Evénement à executer quand le Goal commence la recherche.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                "on_success": {"description": "Evénement à executer quand la recherche et le creusement se finit.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "search_range_xz": {"type": "number", "description": "Largeur et longueur du volume autour de l'Entité utilisée pour trouver une position cible valide."},
                "search_range_y": {"type": "number", "description": "Hauteur du volume autour de l'Entité utilisée pour trouver une position cible valide."},
                "spawn_item_after_seconds": {"type": "number", "description": "Durée de fouille avant l'apparition de l'item en secondes."},
                "spawn_item_pos_offset": {"type": "number", "description": "Distance pour décaler l'emplacement d'apparition de l'item dans la direction vers laquelle l'Entité fait face."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité attaquante lorsqu'elle utilise cet AI Goal."},
                "target_blocks": {"type": "array", "description": "Liste des types de blocs cibles auquel le Goal regardera pour creuser. Remplace la liste par défaut.", "items": {"anyOf": [
                    {"type": "object", "properties": {
                        "name": {"type": "string", "description": "Le nom du Bloc."},
                        "states": {"type": "array", "items": {"type": "object"}, "description": "La paire état de Bloc et sa valeur."},
                        "tags": {"type": "string", "description": "Le tag de Bloc exprimé en Molang."}
                    }},
                    {"type": "string"}
                ]}},
                "target_dig_position_offset": {"type": "number", "description": "Décalage de la position ciblé de creusement depuis la position des pieds de l'Entité dans la direction qui lui fait face."}
            }},
            "minecraft:behavior.random_sitting": {"type": "object", "description": "Permet à l'Entité de s'asseoir aléatoirement pendant un certain temps.", "properties": {
                "cooldown_time": {"type": "number", "description": "Temps en secondes que l'Entité doit attendre avant d'utiliser Goal encore une fois."},
                "min_sit_time": {"type": "number", "description": "Le temps minimum en secondes avant que l'Entité puisse se relever."},
                "start_chance": {"type": "number", "description": "La chance que l'Entité commence ce Goal entre 0 et 1."},
                "stop_chance": {"type": "number", "description": "La chance que l'Entité arrête ce Goal entre 0 et 1."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."}
            }},
            "minecraft:behavior.random_stroll": {"type": "object", "description": "Permet à l'Entité de choisir une direction aléatoire vers laquelle marcher", "properties": {
                "interval": {"type": "integer", "description": "Une valeur aléatoire pour déterminer quand se déplacer de manière aléatoire quelque part. Cela a une chance de 1/intervalle de choisir cet objectif."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité attaquante lorsqu'elle utilise cet AI Goal."},
                "xz_dist": {"type": "integer", "description": "Distance en blocs au sol à laquelle l'Entité cherchera un nouvel endroit vers lequel se déplacer. Doit être au moins 1."},
                "y_dist": {"type": "integer", "description": "Distance en blocs que l'Entité recherchera vers le haut ou vers le bas pour trouver un nouvel endroit vers lequel se déplacer. Doit être au moins 1."}
            }},
            "minecraft:behavior.random_swin": {"type": "object", "description": "Permet à l'Entité de se déplacer de manière aléatoire dans l'eau", "properties": {
                "avoid_surface": {"type": "boolean", "description": "Si 'true', l'Entité évitera les blocs d'eau de surface en nageanrt en dessous."},
                "interval": {"type": "integer", "description": "Une valeur aléatoire pour déterminer quand se déplacer de manière aléatoire quelque part. Cela a une chance de 1/intervalle de choisir cet objectif."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité attaquante lorsqu'elle utilise cet AI Goal."},
                "xz_dist": {"type": "integer", "description": "Distance en blocs au sol à laquelle l'Entité cherchera un nouvel endroit vers lequel se déplacer. Doit être au moins 1."},
                "y_dist": {"type": "integer", "description": "Distance en blocs que l'Entité recherchera vers le haut ou vers le bas pour trouver un nouvel endroit vers lequel se déplacer. Doit être au moins 1."}
            }},
            "minecraft:behavior.ranged_attack": {"type": "object", "description": "Permet à l'Entité d'attaquer en utilisant des tirs à distance. 'charge_shoot_trigger' doit être supérieur à 0 pour permettre des attaques en rafale chargées. Nécessite le component 'minecraft:shooter' pour définit les comportements des projectiles tirés.", "properties": {
                "attack_interval": {"type": "number", "description": "Alternative à 'attack_interval_max' et 'attack_interval_min'. Temps de rechargement constant (en secondes), lorsque vous n'utilisez pas de tir chargé. Ne s'adapte pas à la distance cible."},
                "attack_interval_max": {"type": "number", "description": "Limite maximale de la plage de temps de rechargement (en secondes), lorsque vous n'utilisez pas de tir chargé. La plage de temps de rechargement évolue en fonction de la distance cible."},
                "attack_interval_min": {"type": "number", "description": "Limite minimale de la plage de temps de rechargement (en secondes), lorsque vous n'utilisez pas de tir chargé. La plage de temps de rechargement évolue en fonction de la distance cible."},
                "attack_radius": {"type": "number", "description": "Distance minimale à atteindre avant que cette Entité ne tente de tirer."},
                "attack_radius_min": {"type": "number", "description": "Distance minimale de la cible pour que cette Entité puisse tirer. Si la cible est plus proche, cette Entité se déplacera en premier avant de tirer"},
                "burst_interval": {"type": "number", "description": "Temps (en secondes) entre chaque tir individuel lors du tir d'une rafale de tirs lors d'une attaque chargée."},
                "burst_shots": {"type": "integer", "description": "Nombre de coups de feu tirés chaque fois que l'Entité attaquante utilise une attaque chargée."},
                "charge_charged_trigger": {"type": "number", "description": "Temps (en secondes, puis ajoutez 'charge_shoot_trigger'), avant qu'une attaque chargée ne soit chargée. Le temps de charge diminue lorsque la cible n'est pas en vue."},
                "charge_shoot_trigger": {"type": "number", "description": "Durée (en secondes, puis doublée) pendant laquelle un tir chargé doit se charger avant de recharger des tirs en rafale. Le temps de charge diminue lorsque la cible n'est pas en vue."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "ranged_fov": {"type": "number", "description": "Champ de vision (en degrés) lors de l'utilisation de la détection pour détecter une cible d'attaque."},
                "set_persistent": {"type": "boolean", "description": "Permet à l'Entité d'être définie pour persister lors du ciblage d'un joueur."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité attaquante lorsqu'elle utilise cet AI Goal."},
                "swing": {"type": "boolean", "description": "Si une animation 'swing' (utilisant 'variable.attack_time') existe, celà amènera l'Entité à tendre son/ses bras lors du tir de l'attaque à distance."},
                "target_in_sight_time": {"type": "number", "description": "Durée minimale (en secondes) dont l'Entité attaquante a besoin pour voir la cible avant de se diriger vers elle."},
                "x_max_rotation": {"type": "number", "description": "Rotation maximale (en degrés), sur l'axe X, cette Entité peut tourner en essayant de regarder la cible."},
                "y_max_head_rotation": {"type": "number", "description": "Rotation maximale (en degrés), sur l'axe Y, cette Entité peut faire pivoter sa tête tout en essayant de regarder la cible."}
            }},
            "minecraft:behavior.receive_love": {"type": "object", "description": "Permet au villageois de s'arrêter pour qu'un autre vilageois puisse se reproduire avec lui. Utilisable uniquement par les Villageois.", "properties": {
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité attaquante lorsqu'elle utilise cet AI Goal."}
            }},
            "minecraft:behavior.restrict_open_door": {"type": "object", "description": "Oblige l'Entité à rester à l'intérieur quand le soleil est couché.", "properties": {
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."}
            }},
            "minecraft:behavior.restrict_sun": {"type": "object", "description": "Oblige l'Entité à automatiquement commencer à éviter le soleil lorsqu'il fairt beau.", "properties": {
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."}
            }},
            "minecraft:behavior.rise_to_liquid_level": {"type": "object", "description": "Permet à l'Entité de rester à un certain niveau lorsqu'elle est dans un liquide.", "properties": {
                "liquid_y_offset": {"type": "number", "description": "Décalage vertical par rapport au liquide"},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "rise_delta": {"type": "number", "description": "Déplacement correspondant au déplacement de l'Entité vers le haut sur l'axe vertical."},
                "sink_delta": {"type": "number", "description": "Déplacement de combien l'Entité descendra sur l'axe vertical"}
            }},
            "minecraft:behavior.roar": {"type": "object", "description": "Permet à l'Entité de rugir contre une autre entité en fonction des données de 'minecraft:anger_level'. Une fois le seuil de colère spécifié dans 'minecraft:anger_level' est atteint, cette Entité rugira pendant le temps spécifié, regardera l'autre entité, lui appliquera un boost de colère et enfin la ciblera.", "properties": {
                "duration": {"type": "number", "description": "Le temps pendant lequel rugir."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."}
            }},
            "minecraft:behavior.roll": {"type": "object", "description": "Permet à l'Entité de rouler vers l'avant.", "properties": {
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "probability": {"type": "number", "description": "La probabilité de regarder autour de soi/de s'asseoir au hasard."}
            }},
            "minecraft:behavior.run_around_like_crazy": {"type": "object", "description": "Permet à l'Entité de courir sans défnir de Goal.", "properties": {
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité attaquante lorsqu'elle utilise cet AI Goal."}
            }},
            "minecraft:behavior.scared": {"type": "object", "description": "Permet à l'Entité de devenir effrayé quand la météo dehors est orageuse.", "properties": {
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "sound_interval": {"type": "integer", "description": "L'intervalle dans lequel un son sera joué lorsqu'il est actif avec une chance de 1/délai de démarrer."}
            }},
            "minecraft:behavior.send_event": {"type": "object", "description": "Peermet à l'Entité d'evnoyer un événement à un autre mob.", "properties": {
                "cast_duration": {"type": "number", "description": "Temps en secondes pour l'ensemble du processus d'envoi de l'événement."},
                "look_at_target": {"type": "boolean", "description": "Si true, le mob fera face à l'Entité à laquelle elle envoie un événement."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "sequence": {"type": "array", "description": "Liste des événements à envoyer.", "items": {"type": "object", "properties": {
                    "base_delay": {"type": "number", "description": "Temps en secondes avant de commencer cette étape."},
                    "event": {"type": "string", "description": "L'événement à envoyer à l'entité."},
                    "sound_event": {"type": "string", "description": "Le son à jouer quans cette étape se produit."}
                }}},
                "event_choices": {"type": "array", "description": "Liste de choix d'événements avec des paramètres supplémentaires pour chaque choix. Cela permet de spécifier différentes conditions et actions pour l'envoi d'événements.", "items": {"type": "object", "properties": {
                    "min_activation_range": {"type": "number", "description": "Distance minimale à laquelle l'événement peut être activé."},
                    "max_activation_range": {"type": "number", "description": "Distance maximale à laquelle l'événement peut être activé."},
                    "cooldown_time": {"type": "number", "description": "Temps de recharge en secondes avant que l'événement puisse être réactivé."},
                    "cast_duration": {"type": "number", "description": "Temps en secondes pour l'ensemble du processus d'envoi de l'événement."},
                    "look_at_target": {"type": "boolean", "description": "Si true, le mob fera face à l'Entité à laquelle elle envoie un événement."},
                    "particle_color": {"type": "string", "description": "Couleur des particules à afficher lors de l'envoi de l'événement (Format héxadécimal RGBA)."},
                    "weight": {"type": "integer", "description": "Poids de cet événement dans le choix des événements (plus le poids est élevé, plus l'événement a de chances d'être choisi)."},
                    "filters": {"description": "Conditions à remplir pour que l'événement soit envoyé.", "$ref": "#/definitions/minecraft_filter-ref"},
                    "start_sound_event": {"type": "string", "description": "Son à jouer au début de l'envoi de l'événement."},
                    "sequence": {"type": "array", "description": "Liste des événements à envoyer.", "items": {"type": "object", "properties": {
                        "base_delay": {"type": "number", "description": "Temps en secondes avant de commencer cette étape."},
                        "event": {"type": "string", "description": "L'événement à envoyer à l'entité."},
                        "sound_event": {"type": "string", "description": "Le son à jouer quans cette étape se produit."}
                    }}}
                }}}
            }},
            "minecraft:behavior.share_items": {"type": "object", "description": "Permet à l'Entité de donner des items qu'elle possède à d'autres entités.", "properties": {
                "entity_types": {"type": "array", "description": "Listes des Entités que cette Entité poartagera les items avec.", "items": {"type": "object", "properties": {
                    "cooldown": {"type": "number", "description": "Le temps en secondes pendant lequel l'Entité doit attendre avant de sélectionner à nouveau une cible du même type."},
                    "filters": {"description": "Les filtres de test pour les entités.", "$ref": "#/definitions/minecraft_filter-ref"},
                    "max_dist": {"type": "number", "description": "Pour être un choix de cible valide, le type de cible ne peut pas être plus éloigné de cette Entité que 'max_dist'."},
                    "must_see": {"type": "boolean", "description": "Détermine si la validité de la cible nécessite que cette Entité soit à portée uniquement, ou à la fois à portée et en vue."},
                    "must_see_forget_duration": {"type": "number", "description": "Temps (en secondes) pendant lequel la cible ne doit pas être vue par cette Entité pour devenir invalide. Utilisé uniquement si « must_see » est vrai."},
                    "reevaluate_description": {"type": "boolean", "description": "Si c'est vrai, le mob cessera d'être ciblée si elle ne remplit plus les conditions."},
                    "sprint_speed_multiplier": {"type": "number", "description": "Multiplicateur pour la vitesse de course. Une valeur de 1,0 signifie que la vitesse est inchangée"},
                    "walk_speed_multiplier": {"type": "number", "description": "Multiplicateur de la vitesse de marche. Une valeur de 1,0 signifie que la vitesse est inchangée"}
                }}},
                "goal_radius": {"type": "number", "description": "La distance en blocs au sein de l'Entité considère qu'elle a atteint l'objectif. Il s'agit de la 'marge de manœuvre' pour empêcher l'IA de rebondir en essayant d'atteindre un endroit spécifique."},
                "max_dist": {"type": "number", "description": "Pour être un choix de cible valide, le type de cible ne peut pas être plus éloigné de cette Entité que 'max_dist'."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité attaquante lorsqu'elle utilise cet AI Goal."}
            }},
            "minecraft:behavior.silverfish_merge_with_stone": {"type": "object", "description": "Permet à l'Entité d'entrer dans les blocs de pierre comme le fait le Silverfish. Utilisable uniquement par le Silverfish.", "properties": {
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."}
            }},
            "minecraft:behavior.silverfish_wake_up_friends": {"type": "object", "description": "Permet à l'Entité d'alerter les mobs dans les blocs proches pour qu'ils en sortent. Utilisable uniquement par le Silverfish. Nécessite le component 'minecraft:behavior.silverfish_merge_with_stone'.", "properties": {
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."}
            }},
            "minecraft:behavior.skeleton_horse_trap": {"type": "object", "description": "Permet à l'Entité d'executer une fonction de piège de cheval squelette et d'être déclenché en invoquant un éclair, avec plus de chveaux squelettes et des squeletets en tant que chevaucheurs, lorsqu'un joueur s'approche dans le rayon définit. Uilisable uniquement par : 'horse', 'mule', 'donkey', 'skeleton_horses'.", "properties": {
                "duration": {"type": "number", "description": "Durée en secondes pendant laquelle le piège existe. Une fois ce laps de temps écoulé, le piège est retiré du monde s'il n'a pas été activé."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "within_radius": {"type": "number", "description": "Distance en blocs dans laquelle le joueur doit se trouver pour déclencher le piège à chevaux."}
            }},
            "minecraft:behavior.sleep": {"type": "object", "description": "Permet à l'Entité de dormir dans un lit.", "properties": {
                "can_sleep_while_riding": {"type": "boolean", "description": "Si 'true', l'Entité pourra utiliser l'objectif de sommeil si elle chevauche."},
                "cooldown_time": {"type": "number", "description": "Temps de recharge en secondes avant que l'événement puisse être réactivé."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "sleep_collider_height": {"type": "number", "description": "La hauteur du collisionneur de l'Entité pendant son sommeil."},
                "sleep_collider_width": {"type": "number", "description": "La largeur du collisionneur de l'Entité pendant son sommeil."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité attaquante lorsqu'elle utilise cet AI Goal."},
                "timeout_cooldown": {"type": "number", "description": "Le temps de recharge en secondes avant que l'objectif puisse être réutilisé après un echec interne ou une condition de délai d'attente."}
            }},
            "minecraft:behavior.slime_attack": {"type": "object", "description": "Permet à l'Entité qui a le component 'minevcraft:movement.jump' de se diriger vers sa cible comme le fait un slime pour attaquer. Pour attaquer l'Entité doit avoir un 'runtime_identifier' sur 'minecraft:slime' et un component 'minecraft:variant' avec une valeur plus grande que 1. Sinon, elle se dirigera vers sa cible mais ne fera pas de dégât. Nécessite une cible. Nécissite un attribut d'attaque.", "properties": {
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "set_persistent": {"type": "boolean", "description": "Permet à l'Entité d'être définie pour persister lors du ciblage d'un joueur."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité attaquante lorsqu'elle utilise cet AI Goal."},
                "x_max_rotation": {"type": "number", "description": "Rotation maximale (en degrés), sur l'axe X, cette Entité peut tourner en essayant de regarder la cible."},
                "y_max_rotation": {"type": "number", "description": "Rotation maximale (en degrés), sur l'axe Y, cette Entité peut tourner en essayant de regarder la cible."}
            }},
            "minecraft:behavior.slime_float": {"type": "object", "description": "Permet à l'Entité de flotter dans l'eau/lave. Utilisable seulment par les Slimes et les Magma_Cubes", "properties": {
                "jump_chance_percentage": {"type": "number", "description": "Pourcentage de chances qu'un cube de slime ou de magma saute dans l'eau/la lave."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité attaquante lorsqu'elle utilise cet AI Goal."}
            }},
            "minecraft:behavior.slime_keep_on_jumping": {"type": "object", "description": "Oblige l'Entité à sauter continuellement comme un slime.", "properties": {
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité attaquante lorsqu'elle utilise cet AI Goal."}
            }},
            "minecraft:behavior.slime_random_direction": {"type": "object", "description": "Oblige l'Entité à se déplacer dans des directions aléatoires comme un Slime.", "properties": {
                "add_random_time_range": {"type": "integer", "description": "Temps supplémentaire (en secondes entières), choisi aléatoirement dans la plage de [0, 'add_random_time_range'], à ajouter à 'min_change_direction_time'."},
                "min_change_direction_time": {"type": "number", "description": "Temps d'attente minimum constant (en secondes) avant de choisir une nouvelle direction."},
                "turn_range": {"type": "integer", "description": "Plage d'angle de rotation maximale (en degrés) lors du choix aléatoire d'une nouvelle direction."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."}
            }},
            "minecraft:behavior.snacking": {"type": "object", "description": "Permet à l'Entité de s'arrêter et d'intéragir avec certains items de nourritures qui se trouvent à proximité.", "properties": {
                "items": {"type": "array", "description": "Les Items que l'Entité grignotera.", "items": {"type": "string"}},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "snacking_cooldown": {"type": "number", "description": "Temps de recharge en secondes avant que l'Entité soit capable de grignoter une nouvelle fois."},
                "snacking_cooldown_min": {"type": "number", "description": "Temps minimum en secondes avant que l'Entité soit capable de grignoter une nouvelle fois."},
                "snacking_stop_chance": {"type": "number", "description": "Chance que l'Entité s'arretera de grignoter de 0 à 1."}
            }},
            "minecraft:behavior.sneeze": {"type": "object", "description": "Permet à l'Entité d'éternuer et potentiellement à effrayer d'autres entités. En éternuant l'Entité peut laisser tomber un item.", "properties": {
                "cooldown_time": {"type": "number", "description": "Temps en secondes que l'Entité doit attendre avant d'utiliser Goal encore une fois."},
                "drop_item_chance": {"type": "number", "description": "Probabilité que l'Entité lachera un item quand elle eternue."},
                "entity_types": {"type": "array", "description": "Listes des Entités que cette Entité poartagera les items avec.", "items": {"type": "object", "properties": {
                    "cooldown": {"type": "number", "description": "Le temps en secondes pendant lequel l'Entité effrayera (en les faisant sauter) quand elle eternue."},
                    "filters": {"description": "Les filtres de test pour les entités.", "$ref": "#/definitions/minecraft_filter-ref"},
                    "max_dist": {"type": "number", "description": "Pour être un choix de cible valide, le type de cible ne peut pas être plus éloigné de cette Entité que 'max_dist'."},
                    "must_see": {"type": "boolean", "description": "Détermine si la validité de la cible nécessite que cette Entité soit à portée uniquement, ou à la fois à portée et en vue."},
                    "must_see_forget_duration": {"type": "number", "description": "Temps (en secondes) pendant lequel la cible ne doit pas être vue par cette Entité pour devenir invalide. Utilisé uniquement si « must_see » est vrai."},
                    "reevaluate_description": {"type": "boolean", "description": "Si c'est vrai, le mob cessera d'être ciblée si elle ne remplit plus les conditions."},
                    "sprint_speed_multiplier": {"type": "number", "description": "Multiplicateur pour la vitesse de course. Une valeur de 1,0 signifie que la vitesse est inchangée"},
                    "walk_speed_multiplier": {"type": "number", "description": "Multiplicateur de la vitesse de marche. Une valeur de 1,0 signifie que la vitesse est inchangée"}
                }}},
                "loot_table": {"type": "string", "description": "La Loot_Table pour les Items droppés lors de l'eternuement."},
                "prepare_sound": {"type": "string", "description": "Son à jouer lorsque l'éternuement est sur le point de se produire."},
                "prepare_time": {"type": "number", "description": "Temps en secondes que prend l'Entité pour se préparer à eternuer (pendant que 'prepare_sound' se joue.)"},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "probability": {"type": "number", "description": "Probabilité d'eternuer."},
                "sound": {"type": "string", "description": "Son à jouer lorsque l'eternuement se produit."},
                "within_radius": {"type": "number", "description": "Distance en blocs que les entités les entités seront surprises."}
            }},
            "minecraft:behavior.sniff": {"type": "object", "description": "Permet à l'Entité de détecter le joueur le plus proche dans 'sniffing_radius' et à mettre à jour l'état de son component 'minecraft:suspect_tracking'.", "properties": {
                "cooldown_range": {"type": "array", "description": "Plage de temps de recharge minimale et maximale (positive, en secondes) entre chaque reniflement.", "items": [{"type": "number"}, {"type": "number"}]},
                "duration": {"type": "number", "description": "Durée du reniflement en secondes."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "sniffing_radius": {"type": "number", "description": "Rayon de détection d'entité."},
                "suspicion_radius_horizontal": {"type": "number", "description": "Rayon horizontal de suspicion d'entité. Lorsqu'un joueur se trouve horizontalement dans ce rayon, le niveau de colère envers ce joueur augmente."},
                "suspicion_radius_vertical": {"type": "number", "description": "Rayon vertical de suspicion d'entité. Lorsqu'un joueur se trouve horizontalement dans ce rayon, le niveau de colère envers ce joueur augmente."}
            }},
            "minecraft:behavior.sonic_boom": {"type": "object", "description": "Permet à l'Entité d'effectuer une attaque à distance 'sonic_boom'.", "properties": {
                "attack_cooldown": {"type": "number", "description": "Temps de recharge en secondes requis après avoir utilisé cette attaque jusqu'à ce que l'Entité puisse à nouveau utiliser le bang sonique."},
                "attack_damage": {"type": "number", "description": "Dégâts d'attaque du boom sonique."},
                "attack_range_horizontal": {"type": "number", "description": "Portée horizontale (en blocs) à laquelle le bang sonique peut endommager la cible."},
                "attack_range_vertical": {"type": "number", "description": "Portée verticale (en blocs) à laquelle le bang sonique peut endommager la cible."},
                "attack_sound": {"type": "string", "description": "Son pour l'attaque"},
                "charge_sound": {"type": "string", "description": "Son pour la recharge de l'attaque."},
                "duration": {"type": "number", "description": "Durée de ce Goal en secondes."},
                "duration_until_attack_sound": {"type": "number", "description": "Durée en secondes jusqu'à ce que le son d'attaque soit joué."},
                "knockback_height_cap": {"type": "number", "description": "Hauteur maximale du delta vertical du recul de l'attaque."},
                "knockback_horizontal_strength": {"type": "number", "description": "Force horizontale du recul de l'attaque appliquée à la cible de l'attaque."},
                "knockback_vertical_strength": {"type": "number", "description": "Force verticale du recul de l'attaque appliquée à la cible de l'attaque."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité attaquante lorsqu'elle utilise cet AI Goal."}
            }},
            "minecraft:behavior.squid_dive": {"type": "object", "description": "Permet à la Pieuvre de plonger dans l'eau. Utilisable uniquement par les Pieuvres.", "properties": {
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."}
            }},
            "minecraft:behavior.squid_flee": {"type": "object", "description": "Permet à la Pieuvre de nager. Utilisable uniquement par les Pieuvres.", "properties": {
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."}
            }},
            "minecraft:behavior.squid_idle": {"type": "object", "description": "Permet à la Pieuvre de nager sur place sans rien faire. Utilisable uniquement par les Pieuvres.", "properties": {
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."}
            }},
            "minecraft:behavior.squid_move_away_from_ground": {"type": "object", "description": "Permet à la Pieuvre de nager loin des blocs de terre et de retourner à l'eau. Utilisable uniquement par les Pieuvres.", "properties": {
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."}
            }},
            "minecraft:behavior.squid_out_of_water": {"type": "object", "description": "Permet à la Pieuvre d'être coller au sol lorsqu'il est hors de l'eau. Utilisable uniquement par les Pieuvres.", "properties": {
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."}
            }},
            "minecraft:behavior.stalk_and_pounce_on_target": {"type": "object", "description": "Permet à l'Entité de traquer une cible spécifique. Une fois à portée de la cible, l'Entité sautera alors sur la cible et lui infligera des dégâts en fonction de son attribut d'attaque. En cas d'echec, l'Entité risque de rester coincé. Nécesite une cible et un attribut d'attaque.", "properties": {
                "interest_time": {"type": "number", "description": "La durée pendant laquelle l'Entité sera intéressée avant de bondir. Cela se produit lorsque l'Entité est à portée de bondir."},
                "leap_distance": {"type": "number", "description": "La distance en blocs que l'Entité de sauter en direction de sa cible."},
                "leap_height": {"type": "number", "description": "La hauteur en bloque les sauts de l'Entité lorsqu'elle saute sur sa cible."},
                "max_stalk_dist": {"type": "number", "description": "La distance maximale d'une cible peut être avant que l'Entité n'abandonne sa traque."},
                "pounce_max_dist": {"type": "number", "description": "La distance maximale de la cible en blocs pour commencer à bondir sur la cible."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "set_persistent": {"type": "boolean", "description": "Permet à l'Entité d'être définie pour persister lors du ciblage d'un joueur."},
                "stalk_speed": {"type": "number", "description": "La vitesse de déplacement à laquelle vous traquez votre cible."},
                "strike_dist": {"type": "number", "description": "La distance maximale de la cible lors de l'atterrissage depuis le bond qui entraînera toujours des dommages à la cible."},
                "stuck_blocks": {"description": "Définit les types de blocs sur lesquels l'Entité peut rester bloquée si elle échoue son saut.", "$ref": "#/definitions/minecraft_filter-ref"},
                "stuck_time": {"type": "number", "description": "La durée pendant laquelle l'Entité sera bloquée si elle échoue et atterrit sur un bloc sur lequel elle peut être bloquée."}
            }},
            "minecraft:behavior.stay_near_noteblock": {"type": "object", "description": "L'Entité essayera de lancer les items de son inventaire vers un bloc-notes récemment joué à proximité.", "properties": {
                "listen_time": {"type": "integer", "description": "Définit la durée pendant laquelle l'Entité doit rester près d'un bloc-notes après l'avoir entendu."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "speed": {"type": "number", "description": "Définit la vitesse de l'Entité lorsqu'elle se déplace vers le bloc."},
                "start_distance": {"type": "number", "description": "Définit la distance à laquelle l'Entité doit s'éloigner du bloc pour tenter de démarrer l'objectif."},
                "stop_distance": {"type": "number", "description": "Définit la distance du bloc que l'Entité tentera d'atteindre."}
            }},
            "minecraft:behavior.stay_while_sitting": {"type": "object", "description": "Permet à l'Entité de rester sur place pendant qu'elle est assise au lieu de faire autre chose.", "properties": {
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."}
            }},
            "minecraft:behavior.stomp_attack": {"type": "object", "description": "Permet à l'Entité d'attaquer en utilisant le comportement d'attaque de zone d'effet AoE.", "properties": {
                "attack_once": {"type": "boolean", "description": "Permet à l'Entité d'utiliser ce comportement d'attaque, une seule fois seulement."},
                "attack_types": {"description": "Définit les types d'Entités que cette Entité attaquera.", "anyOf": [
                    {"type": "string"},
                    {"type": "array", "items": {"type": "string"}}
                ]},
                "can_spread_on_fire": {"type": "boolean", "description": "Si l'Entité est en feu, celà permet à la cible de l'Entité d'être en feu quand elle se fait attaquer."},
                "cooldown_time": {"type": "number", "description": "Temps de cooldown en secondes entre chaque attaque."},
                "inner_boundary_time_increase": {"type": "number", "description": "Temps (en secondes) à ajouter au recalcul du chemin d'attaque lorsque la cible est au-delà du 'path_inner_boundary'."},
                "max_dist": {"type": "number", "description": "PAS DE DOCUMENTATION."},
                "max_path_time": {"type": "number", "description": "Temps de base maximum (en secondes) pour recalculer le nouveau chemin d'attaque vers la cible (avant application des augmentations)."},
                "melee_fov": {"type": "number", "description": "Champ de vision (en degrés) lors de l'utilisation du compoent sensing pour détecter une cible d'attaque."},
                "min_path_time": {"type": "number", "description": "Temps de base maximum (en secondes) pour recalculer le nouveau chemin d'attaque vers la cible (avant application des augmentations)."},
                "no_damage_range_multiplier": {"type": "number", "description": "Multiplié avec la portée finale des dégâts AoE pour déterminer une portée sans dégâts."},
                "on_attack": {"description": "Evenement à déclencher quand l'Entité attaque sa cible avec succès.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                "on_kill": {"description": "Evenement à déclencher quand l'Entité tue sa cible avec succès.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                "outer_boundary_time_increase": {"type": "number", "description": "Temps (en secondes) à ajouter au recalcul du chemin d'attaque lorsque la cible est au-delà du 'path_outer_boundary'."},
                "path_fail_time_increase": {"type": "number", "description": "Temps (en secondes) à ajouter au recalcul du chemin d'attaque lorsque cette Entité ne peut pas se déplacer le long du chemin actuel."},
                "path_inner_boundary": {"type": "number", "description": "Distance à laquelle augmenter le recalcul du chemin d'attaque par 'inner_boundary_tick_increase'."},
                "path_outer_boundary": {"type": "number", "description": "Distance à laquelle augmenter le recalcul du chemin d'attaque par 'outer_boundary_tick_increase'."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "random_stop_interval": {"type": "integer", "description": "Cette Entité aura 1 chance sur N d'arrêter son attaque en cours, où N = 'random_stop_interval'."},
                "reach_multiplier": {"type": "number", "description": "Utilisé avec la taille de base de l'Entité pour déterminer la distance minimale de la cible avant d'essayer d'infliger des dégâts d'attaque."},
                "require_complete_path": {"type": "boolean", "description": "Active/désactive la nécessité d'avoir un chemin complet de l'Entité à la cible lors de l'utilisation de ce comportement d'attaque au corps à corps."},
                "set_persistent": {"type": "boolean", "description": "Permet à l'Entité d'être définie pour persister lors du ciblage d'un joueur."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité attaquante lorsqu'elle se dirige vers la cible."},
                "target_dist": {"type": "number", "description": "PAS DE DOCUMENTATION."},
                "track_target": {"type": "boolean", "description": "Permet à l'Entité de suivre la cible de l'attaque, même si l'Entité n'a aucune détection."},
                "x_max_rotation": {"type": "number", "description": "Rotation maximale (en degrés), sur l'axe X, cette Entité peut tourner en essayant de regarder la cible."},
                "y_max_head_rotation": {"type": "number", "description": "Rotation maximale (en degrés), sur l'axe Y, cette Entité peut faire pivoter sa tête tout en essayant de regarder la cible."}
            }},
            "minecraft:behavior.stomp_turtle_egg": {"type": "object", "description": "Oblige l'Entité à cibler et à piétiner les oeufs de tortue lorsqu'elle en détecte.", "properties": {
                "goal_radius": {"type": "number", "description": "La distance en blocs au sein de l'Entité considère qu'elle a atteint l'objectif. Il s'agit de la 'marge de manœuvre' pour empêcher l'IA de rebondir en essayant d'atteindre un endroit spécifique."},
                "interval": {"type": "integer", "description": "Une valeur aléatoire pour déterminer quand se déplacer de manière aléatoire quelque part. Cela a une chance de 1/intervalle de choisir cet objectif."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "search_height": {"type": "integer", "description": "La hauteur en blocs que l'Entité cherchera des œufs de tortue vers lesquels se déplacer."},
                "search_range": {"type": "integer", "description": "La distance en blocs vers laquelle l'Entité recherchera les œufs de tortue vers lesquels se déplacer."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité attaquante lorsqu'elle se dirige vers la cible."}
            }},
            "minecraft:behavior.stroll_towards_village": {"type": "object", "description": "Oblige l'Entité à naviguer et à rechercher un village voisin.", "properties": {
                "cooldown_time": {"type": "number", "description": "Temps en secondes que l'Entité doit attendre avant d'utiliser Goal encore une fois."},
                "goal_radius": {"type": "number", "description": "La distance en blocs au sein de l'Entité considère qu'elle a atteint l'objectif. Il s'agit de la 'marge de manœuvre' pour empêcher l'IA de rebondir en essayant d'atteindre un endroit spécifique."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "search_range": {"type": "integer", "description": "La distance en blocs pour rechercher des points à l'interieur des villages. Si <= 0, trouver le village le plus proche quelle que soit la distance."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité attaquante lorsqu'elle se dirige vers la cible."},
                "start_chance": {"type": "number", "description": "La chance que l'Entité commence ce Goal entre 0 et 1."}
            }},
            "minecraft:behavior.summon_entity": {"type": "object", "description": "Permet à l'Entité d'attaquer le joueur en faisant apparaitre d'autres entités.", "properties": {
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "summon_choices": {"type": "array", "description": "Liste des sorts que l'Entité peut utiliser pour invoquer des entités.", "items": {"type": "object", "properties": {
                    "cast_duration": {"type": "number", "description": "Temps en secondes que prendra le lancement du sort."},
                    "cooldown_time": {"type": "number", "description": "Temps en secondes que l'Entité doit attendre avant de réutiliser ce sort."},
                    "do_casting": {"type": "boolean", "description": "Si 'true', l'Entité fera les animations de lancement et fera des particules de sorts."},
                    "filters": {"description": "Filtres qui doivent être validé.", "$ref": "#/definitions/minecraft_filter-ref"},
                    "max_activation_range": {"type": "number", "description": "La limite supérieure de la distance d'activation en blocs pour ce sort ne doit pas être négative."},
                    "min_activation_range": {"type": "number", "description": "La limite inférieure de la distance d'activation en blocs pour ce sort ne doit pas être négative."},
                    "particle_color": {"type": "string", "description": "Couleur des particules à afficher lors de l'envoi de l'événement (Format héxadécimal RGBA)."},
                    "start_sound_event": {"type": "string", "description": "Le son à jouer durant l'utilisation de ce sort."},
                    "weight": {"type": "number", "description": "Poids de ce sort. Contrôle la probabilité que l'Entité choisisse ce sort lorsqu'elle en lance un."},
                    "sequence": {"type": "array", "description": "Listes des étapes du sort.", "items": {"type": "object", "properties": {
                        "base_delay": {"type": "number", "description": "Temps d'attente en secondes avant le début de cette étape"},
                        "delay_per_summon": {"type": "number", "description": "Durée en secondes avant que chaque entité ne soit invoquée à cette étape"},
                        "entity_lifespan": {"type": "number", "description": "Durée en secondes pendant laquelle l'Entité générée sera en vie. Une valeur de -1,0 signifie qu'il restera en vie aussi longtemps qu'il le pourra."},
                        "entity_type": {"type": "string", "description": "L'entité à faire apparaitre."},
                        "num_entities_spawned": {"type": "integer", "description": "Le nombre d'Entités à faire apparaitre dans cette étape."},
                        "shape": {"type": "string", "description": "La forme de base de cette étape.", "enum": ["circle", "line"]},
                        "size": {"type": "number", "description": "La taille de base de l'Entité."},
                        "sound_event": {"type": "string", "description": "L'événement de son à jouer dans cet étape."},
                        "summon_cap": {"type": "integer", "description": "Nombre maximum d'entités invoquées à un moment donné."},
                        "summon_cap_radius": {"type": "number", "description": "Rayon maximum où les entités d'invocation peuvent apparaître"},
                        "target": {"type": "string", "description": "La cible du sort. C'est ici que le sort commencera (la ligne commencera ici, le cercle sera centré ici)", "enum": ["self"]}
                    }}}
                }}}
            }},
            "minecraft:behavior.swell": {"type": "object", "description": "Oblige l'Entité à grandir en taille lorsqu'elle est approchée et à revenir à la normale après une certaine distance.", "properties": {
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "stop_distance": {"type": "number","description": "Cette Entité cesse de grossir lorsqu'une cible s'est éloignée d'au moins autant de blocs."},
                "start_distance": {"type": "number", "description": "Cette Entité commence à grossir lorsqu'une cible se trouve à au moins autant de pâtés de maisons."}
            }},
            "minecraft:behavior.swim_idle": {"type": "object", "description": "Permet à l'Entité de rester inactive si elle nage. L'Entité doit être dans l'eau.", "properties": {
                "idle_time": {"type": "number", "description": "Durée (en secondes) pour rester inactif."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "success_rate": {"type": "number", "description": "Pourcentage de chance que l'Entité restera inactive."}
            }},
            "minecraft:behavior.swim_up_for_breath": {"type": "object", "description": "Permet à l'Entité d'essayer de se déplacer vers l'air une fois qu'elle est sur le point d'épuiser sa respiration. Nécessite 'minecraft:breathable'", "properties": {
                "material_type": {"type": "string", "description": "Le type de materiel du bloc de liquide à trouver pour l'entité qui a épuisé sa respiration.", "enum": ["Any", "Water", "Lava"]},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "search_height": {"type": "integer", "description": "La hauteur (en blocs) au-dessus de la position actuelle de la foule à laquelle elle recherchera un bloc aérien valide vers lequel se déplacer. Si aucun bloc valide ne peut être trouvé, la foule se déplacera vers la position située à ce nombre de blocs au-dessus d'elle."},
                "search_radius": {"type": "integer", "description": "Le rayon (en blocs) autour de la position actuelle de la foule dans lequel elle recherchera un bloc aérien valide vers lequel se déplacer."},
                "speed_mod": {"type": "number", "description": "Multiplicateur de la vitesse de mouvement quand l'Entité utilise ce goal."}
            }},
            "minecraft:behavior.swim_wander": {"type": "object", "description": "Permet à l'Entité de se promener en nageant, lorsqu'elle ne recherche pas son chemin.", "properties": {
                "interval": {"type": "number", "description": "Pourcentage de chances de commencer à errer, quand vous ne cherchez pas votre chemin."},
                "look_ahead": {"type": "number", "description": "Distance à parcourir pour éviter les obstacles lors de l'errance."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité attaquante lorsqu'elle se dirige vers la cible."},
                "wander_time": {"type": "number", "description": "Durée (en secondes) d'errance après le démarrage réussi du comportement d'errance."}
            }},
            "minecraft:behavior.swim_with_entity": {"type": "object", "description": "Permet à l'Entité de suivre une autre entité. Les deux entités doivent nager, c'est à dire dans l'eau.", "properties": {
                "catch_up_multiplier": {"type": "number", "description": "Le multiplicateur par lequel la vitesse de cette Entité est modifiée lorsqu'elle correspond à la direction d'une autre entité."},
                "catch_up_threshold": {"type": "number", "description": "Distance, par rapport à l'entité suivie, à laquelle cette Entité accélérera pour atteindre cette entité."},
                "chance_to_stop": {"type": "number", "description": "Pourcentage de chances d'arrêter de suivre l'entité actuelle, s'il chevauche une autre entité ou s'il ne nage pas."},
                "entity_types": {"type": "array", "description": "Définit les entités qui sont valide à suivre.", "items": {"type": "object", "properties": {
                    "filters": {"description": "Les conditions de filtres.", "$ref": "#/definitions/minecraft_filter-ref"},
                    "max_dist": {"type": "number", "description": "Pour être un choix de cible valide, le type de cible ne peut pas être plus éloigné de cette Entité que 'max_dist'."},
                    "must_see": {"type": "boolean", "description": "Détermine si la validité de la cible nécessite que cette Entité soit à portée uniquement, ou à la fois à portée et en vue."},
                    "must_see_forget_duration": {"type": "number", "description": "Temps (en secondes) pendant lequel la cible ne doit pas être vue par cette Entité pour devenir invalide. Utilisé uniquement si « must_see » est vrai."},
                    "reevaluate_description": {"type": "boolean", "description": "Si c'est vrai, le mob cessera d'être ciblée si elle ne remplit plus les conditions."}
                }}},
                "match_direction_threshold": {"type": "number", "description": "Distance, par rapport à l'entité suivie, à laquelle cette Entité tentera de suivre la direction de cette entité."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "search_range": {"type": "number", "description": "Rayon autour de cette Entité pour rechercher une autre entité à suivre."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité attaquante lorsqu'elle se dirige vers la cible."},
                "state_check_interval": {"type": "number", "description": "Temps (en secondes) entre les contrôles pour déterminer si cette Entité doit rattraper l'entité suivie ou correspondre à la direction de l'entité suivie."},
                "stop_distance": {"type": "number", "description": "Distance, par rapport à l'entité suivie, à laquelle cette Entité cessera de suivre cette entité."},
                "success_rate": {"type": "number", "description": "Pourcentage de chance de commencer à suivre une autre entité."}
            }},
            "minecraft:behavior.swoop_attack": {"type": "object", "description": "Permet à l'Entité d'attaquer en utilisant le comportement d'attaque par swoop. Idéal pour une utilisation avec des entités volantes. Le comportement se termine si l'Entité subit une collision horizontale ou est touchée.", "properties": {
                "damage_reach": {"type": "number", "description": "Ajouté à la taille de base de l'Entité, pour déterminer la distance maximale autorisée de la cible, lorsque vous essayez d'infliger des dégâts d'attaque."},
                "delay_range": {"type": "array", "description": "Période de temps de recharge minimale et maximale (en secondes) entre chaque tentative d'attaque par swoop.", "items": [{"type": "number"}, {"type": "number"}]},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité attaquante lorsqu'elle se dirige vers la cible."}
            }},
            "minecraft:behavior.take_flower": {"type": "object", "description": "Permet à l'Entité d'accepter des fleurs d'une autre entité avec le comportement 'minecraft:offer_flower'.", "properties": {
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."}
            }},
            "minecraft:behavior.target_when_pushed": {"type": "object", "description": "Oblige l'Entité à cibler l'Entité qui l'a poussée.", "properties": {
                "entity_types": {"type": "array", "description": "Listes des Entités que cette Entité considérera come cible.", "items": {"type": "object", "properties": {
                    "cooldown": {"type": "number", "description": "Le temps en secondes pendant lequel l'Entité effrayera (en les faisant sauter) quand elle eternue."},
                    "filters": {"description": "Les filtres de test pour les entités.", "$ref": "#/definitions/minecraft_filter-ref"},
                    "max_dist": {"type": "number", "description": "Pour être un choix de cible valide, le type de cible ne peut pas être plus éloigné de cette Entité que 'max_dist'."},
                    "must_see": {"type": "boolean", "description": "Détermine si la validité de la cible nécessite que cette Entité soit à portée uniquement, ou à la fois à portée et en vue."},
                    "must_see_forget_duration": {"type": "number", "description": "Temps (en secondes) pendant lequel la cible ne doit pas être vue par cette Entité pour devenir invalide. Utilisé uniquement si « must_see » est vrai."},
                    "reevaluate_description": {"type": "boolean", "description": "Si c'est vrai, le mob cessera d'être ciblée si elle ne remplit plus les conditions."},
                    "sprint_speed_multiplier": {"type": "number", "description": "Multiplicateur pour la vitesse de course. Une valeur de 1,0 signifie que la vitesse est inchangée"},
                    "walk_speed_multiplier": {"type": "number", "description": "Multiplicateur de la vitesse de marche. Une valeur de 1,0 signifie que la vitesse est inchangée"}
                }}},
                "percent_chance": {"type": "number", "description": "Probabilité que l'Entité ciblera l'entité qui l'a poussée. (0-100)"},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."}
            }},
            "minecraft:behavior.teleport_to_owner": {"type": "object", "description": "Permet à une Entité de se téléporter vers son propriétaire.", "properties": {
                "cooldown": {"type": "number", "description": "Temps en secondes pour que l'entité puisse se téléporter de nouveau."}, 
                "filters": {"description": "Conditions qui doivent être remplies pour que le comportement démarre.", "$ref": "#/definitions/minecraft_filter-ref"},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."}
            }},
            "minecraft:behavior.tempt": {"type": "object", "description": "Permet à l'Entité de se laisser tenter par la nourriture qu'elle aime.", "properties": {
                "can_get_scared": {"type": "boolean", "description": "Si 'true', l'Entité peut cesser d'être tentée si le joueur se déplace trop vite à proximité de cette Entité."},
                "can_tempt_vertically": {"type": "boolean", "description": "Si 'true', la distance verticale par rapport au joueur sera prise en compte lors de la tentation."},
                "can_tempt_while_ridden": {"type": "boolean", "description": "Si 'true', l'Entité peut être tentée même si elle a un passager (en gros si elle est chevauchée.)"},
                "items": {"type": "array", "description": "Les Items auquels l'Entité peut se laisser tenté.", "items": {"type": "string"}},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "sound_interval": {"type": "array", "description": "Range de ticks aléatoires pour attendre entres les sons de tentation.", "items": [{"type": "number"}, {"type": "number"}]},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité attaquante lorsqu'elle se dirige vers la cible."},
                "tempt_sound": {"type": "string", "description": "Le son à joué pendant que l'Entité est tentée."},
                "within_radius": {"type": "number", "description": "Distance e blocs que l'Entité peut être tentée par un joueur tenant un item qu'il aime."}
            }},
            "minecraft:behavior.timer_flag_1": {"type": "object", "description": "Déclenche un événement lorsque ce comportement démarre, puis attend un certain temps avant de s'arrêter. Lors de l'arrêt en raison de ce delai d'attente ou en raison d'une interruption par un autre comportement, déclenche un autre événement. 'query.timer_flag_1' renverra 1.0 sur le client et le serveur lorsque ce comportement est en cours d'execution, et 0.0 sinon.", "properties": {
                "control_flags": {"type": "array", "description": "AUCUNE DOCUMENTATION.", "items": {
                    "type": "string", "enum": ["move", "look"]
                }},
                "cooldown_range": {"type": "array", "description": "La plage de temps de recharge de l'objectif, en secondes.", "items": [{"type": "number"}, {"type": "number"}]},
                "duration_range": {"type": "array", "description": "La plage de durée de l'objectif, en secondes.", "items": [{"type": "number"}, {"type": "number"}]},
                "on_end": {"description": "Evénement à executer quand le Goal se finit.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                "on_start": {"description": "Evénement à executer quand le Goal commence.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."}
            }},
            "minecraft:behavior.timer_flag_2": {"type": "object", "description": "Déclenche un événement lorsque ce comportement démarre, puis attend un certain temps avant de s'arrêter. Lors de l'arrêt en raison de ce delai d'attente ou en raison d'une interruption par un autre comportement, déclenche un autre événement. 'query.timer_flag_2' renverra 1.0 sur le client et le serveur lorsque ce comportement est en cours d'execution, et 0.0 sinon.", "properties": {
                "control_flags": {"type": "array", "description": "AUCUNE DOCUMENTATION.", "items": {
                    "type": "string", "enum": ["move", "look"]
                }},
                "cooldown_range": {"type": "array", "description": "La plage de temps de recharge de l'objectif, en secondes.", "items": [{"type": "number"}, {"type": "number"}]},
                "duration_range": {"type": "array", "description": "La plage de durée de l'objectif, en secondes.", "items": [{"type": "number"}, {"type": "number"}]},
                "on_end": {"description": "Evénement à executer quand le Goal se finit.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                "on_start": {"description": "Evénement à executer quand le Goal commence.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."}
            }},
            "minecraft:behavior.timer_flag_3": {"type": "object", "description": "Déclenche un événement lorsque ce comportement démarre, puis attend un certain temps avant de s'arrêter. Lors de l'arrêt en raison de ce delai d'attente ou en raison d'une interruption par un autre comportement, déclenche un autre événement. 'query.timer_flag_3' renverra 1.0 sur le client et le serveur lorsque ce comportement est en cours d'execution, et 0.0 sinon.", "properties": {
                "control_flags": {"type": "array", "description": "AUCUNE DOCUMENTATION.", "items": {
                    "type": "string", "enum": ["move", "look"]
                }},
                "cooldown_range": {"type": "array", "description": "La plage de temps de recharge de l'objectif, en secondes.", "items": [{"type": "number"}, {"type": "number"}]},
                "duration_range": {"type": "array", "description": "La plage de durée de l'objectif, en secondes.", "items": [{"type": "number"}, {"type": "number"}]},
                "on_end": {"description": "Evénement à executer quand le Goal se finit.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                "on_start": {"description": "Evénement à executer quand le Goal commence.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."}
            }},
            "minecraft:behavior.trade_interest": {"type": "object", "description": "Permet à l'Entité de regarder un joueur qui détient un item échangeable.", "properties": {
                "carried_item_switch_time": {"type": "number", "description": "La durée maximale en secondes pendant laquelle le commerçant conservera un item avant de tenter de l'échanger contre un autre item faisant l'objet du même échange."},
                "cooldown": {"type": "number", "description": "Le temps en secondes avant que le trader puisse à nouveau utiliser cet objectif."},
                "interest_time": {"type": "number", "description": "La durée maximale en secondes pendant laquelle le commerçant souhaite afficher ses items commerciaux."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "remove_item_time": {"type": "number", "description": "Le temps maximum en secondes pendant lequel le commerçant attendra lorsque vous n'aurez plus d'items à échanger."},
                "within_radius": {"type": "number", "description": "Distance en blocs, cette Entité peut être intéressée par un joueur détenant un item qu'il aime."}
            }},
            "minecraft:behavior.trade_with_player": {"type": "object", "description": "Permet au joueur d'échanger avec cette Entité. Lorsque l'objectif démarre, la navigation de l'Entité s'arrête.", "properties": {
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "filters": {"description": "Conditions qui doivent être remplies pour que le comportement démarre.", "$ref": "#/definitions/minecraft_filter-ref"},
                "max_distance_from_player": {"type": "number", "description": "La distance maximale entre l'Entité et le joueur avant de quitter le Goal."}
            }},
            "minecraft:behavior.vex_copy_owner_target": {"type": "object", "description": "Permet à l'Entité de cibler la même entité que son propriétaire cible.", "properties": {
                "entity_types": {"type": "array", "description": "Liste des entités à partir desquelles ce groupe peut copier le propriétaire.", "items": {"type": "object", "properties": {
                    "cooldown": {"type": "number", "description": "Le temps en secondes pendant lequel l'Entité effrayera (en les faisant sauter) quand elle eternue."},
                    "filters": {"description": "Les filtres de test pour les entités.", "$ref": "#/definitions/minecraft_filter-ref"},
                    "max_dist": {"type": "number", "description": "Pour être un choix de cible valide, le type de cible ne peut pas être plus éloigné de cette Entité que 'max_dist'."},
                    "must_see": {"type": "boolean", "description": "Détermine si la validité de la cible nécessite que cette Entité soit à portée uniquement, ou à la fois à portée et en vue."},
                    "must_see_forget_duration": {"type": "number", "description": "Temps (en secondes) pendant lequel la cible ne doit pas être vue par cette Entité pour devenir invalide. Utilisé uniquement si « must_see » est vrai."},
                    "reevaluate_description": {"type": "boolean", "description": "Si c'est vrai, le mob cessera d'être ciblée si elle ne remplit plus les conditions."},
                    "sprint_speed_multiplier": {"type": "number", "description": "Multiplicateur pour la vitesse de course. Une valeur de 1,0 signifie que la vitesse est inchangée"},
                    "walk_speed_multiplier": {"type": "number", "description": "Multiplicateur de la vitesse de marche. Une valeur de 1,0 signifie que la vitesse est inchangée"}
                }}},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."}
            }},
            "minecraft:behavior.vex_random_move": {"type": "object", "description": "Permet à l'Entité de se déplacer de manière aléatoire comme le Vex.", "properties": {
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."}
            }},
            "minecraft:behavior.wither_random_attack_pos_goal": {"type": "object", "description": "Permet au Wither de lancer des attaques aléatoires. Uniquement utilisable par le Wither.", "properties": {
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."}
            }},
            "minecraft:behavior.wither_target_highest_damage": {"type": "object", "description": "Permet au Wither de concentrer ses attaques sur l'entité qui lui a infligé le plus de dégâts. Uniquement utilisable par le Wither.", "properties": {
                "entity_types": {"type": "array", "description": "Liste des types d'entités que le Wither prend en compte pour déterminer qui lui a infligé le plus de dégâts", "items": {"type": "object", "properties": {
                    "cooldown": {"type": "number", "description": "Le temps en secondes pendant lequel l'Entité effrayera (en les faisant sauter) quand elle eternue."},
                    "filters": {"description": "Les filtres de test pour les entités.", "$ref": "#/definitions/minecraft_filter-ref"},
                    "max_dist": {"type": "number", "description": "Pour être un choix de cible valide, le type de cible ne peut pas être plus éloigné de cette Entité que 'max_dist'."},
                    "must_see": {"type": "boolean", "description": "Détermine si la validité de la cible nécessite que cette Entité soit à portée uniquement, ou à la fois à portée et en vue."},
                    "must_see_forget_duration": {"type": "number", "description": "Temps (en secondes) pendant lequel la cible ne doit pas être vue par cette Entité pour devenir invalide. Utilisé uniquement si « must_see » est vrai."},
                    "reevaluate_description": {"type": "boolean", "description": "Si c'est vrai, le mob cessera d'être ciblée si elle ne remplit plus les conditions."},
                    "sprint_speed_multiplier": {"type": "number", "description": "Multiplicateur pour la vitesse de course. Une valeur de 1,0 signifie que la vitesse est inchangée"},
                    "walk_speed_multiplier": {"type": "number", "description": "Multiplicateur de la vitesse de marche. Une valeur de 1,0 signifie que la vitesse est inchangée"}
                }}},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."}
            }},
            "minecraft:behavior.work": {"type": "object", "description": "Permet à l'Entité d'utiliser son point d'intérêt (POI) sur son point de travail.", "properties": {
                "active_time": {"type": "integer", "description": "Nombre de ticks pendant lequels l'Entité restera sur son lieu de travail."},
                "can_work_in_rain": {"type": "boolean", "description": "Si 'true', l'Entité peut travailler sur son site de travail POI s'il pleut."},
                "goal_cooldown": {"type": "integer", "description": "Le nombre de ticks pendant lesquels l'objectif sera en temps de recharge avant de pouvoir être réutilisé."},
                "on_arrival": {"description": "Evénement à executer quand l'Entité atteint son site de travail.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                "sound_delay_max": {"type": "integer", "description": "L'intervalle maximum dans lequel un son sera joué."},
                "sound_delay_min": {"type": "integer", "description": "L'intervalle minimum dans lequel un son sera joué."},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité attaquante lorsqu'elle se dirige vers la cible."},
                "work_in_rain_tolerance": {"type": "integer", "description": "Si 'can_work_in_rain' est faux, c'est le nombre maximum de ticks restants dans le but où la pluie n'interrompra pas le but."},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."}
            }},
            "minecraft:behavior.work_composter": {"type": "object", "description": "Permet à l'Entité d'utiliser le POI du composteur pour convertir l'excès de graines en farine d'os.", "properties": {
                "active_time": {"type": "integer", "description": "Nombre de ticks pendant lequels l'Entité restera sur son lieu de travail."},
                "block_interaction_max": {"type": "integer", "description": "Le nombre maximum de fois où l'Entité interagira avec le composteur."},
                "can_empty_composter": {"type": "boolean", "description": "Détermine si l'Entité peut vider un composteur plein."},
                "can_fill_composter": {"type": "boolean", "description": "Détermine si l'Entité peut ajouter des items à un composteur étant donné qu'il n'est pas plein."},
                "can_work_in_rain": {"type": "boolean", "description": "Si 'true', l'Entité peut travailler sur son site de travail POI s'il pleut."},
                "goal_cooldown": {"type": "integer", "description": "Le nombre de ticks pendant lesquels l'objectif sera en temps de recharge avant de pouvoir être réutilisé."},
                "items_per_use_max": {"type": "integer", "description": "Le nombre maximum d'items pouvant être ajoutés au composteur par interaction de bloc."},
                "min_item_count": {"type": "integer", "description": "Limite la quantité de chaque item compostable que l'Entité peut utiliser. Tout montant détenu au-delà de ce nombre sera composté si possible."},
                "on_arrival": {"description": "Evénement à executer quand l'Entité atteint son site de travail.", "$ref": "#/definitions/trigger_event_parameters-ref"},
                "priority": {"type": "integer", "description": "Plus la priorité est élevée, plus tôt ce comportement sera exécuté comme objectif."},
                "sound_delay_max": {"type": "integer", "description": "INUTILISE"},
                "sound_delay_min": {"type": "integer", "description": "INUTILISE"},
                "speed_multiplier": {"type": "number", "description": "Ce multiplicateur modifie la vitesse de l'Entité attaquante lorsqu'elle se dirige vers la cible."},
                "use_block_max": {"type": "integer", "description": "L'intervalle maximum pendant lequel l'Entité interagira avec le composteur."},
                "use_block_min": {"type": "integer", "description": "L'intervalle minimum pendant lequel l'Entité interagira avec le composteur."},
                "work_in_rain_tolerance": {"type": "integer", "description": "Si 'can_work_in_rain' est faux, c'est le nombre maximum de ticks restants dans le but où la pluie n'interrompra pas le but."}
            }}
        }},

        "events-def": {"type": "object", "description": "Evénements déclenchables sur l'Entité.", "properties": {
            "minecraft:entity_born": {"type": "object", "description": "L'événement qui se déclenche quand l'Entité est née d'une reproduction de deux entités.", "properties": {
                "filters": {"description": "Execute ce set de réponses d'événements si les conditions de filtres sont validés.", "$ref": "#/definitions/minecraft_filter-ref"},
                "add": {"$ref": "#/definitions/event_response_add-ref"},
                "remove": {"$ref": "#/definitions/event_response_remove-ref"},
                "triggger": {"$ref": "#/definitions/event_response_trigger-ref"},
                "set_property": {"$ref": "#/definitions/event_response_set_property-ref"},
                "queue_command": {"$ref": "#/definitions/event_response_queue_command-ref"},
                "randomize": {"$ref": "#/definitions/event_response_randomize-ref"},
                "sequence": {"$ref": "#/definitions/event_response_sequence-ref"},
                "emit_vibration": {"$ref": "#/definitions/event_response_emit_vibration-ref"},
                "execute_event_on_home_block": {"$ref": "#/definitions/event_response_execute_event_on_home_block-ref"},
                "reset_target": {"$ref": "#/definitions/event_response_reset_target-ref"},
                "play_sound": {"$ref": "#/definitions/event_response_play_sound-ref"}
            }},
            "minecraft:entity_spawned": {"type": "object", "description": "L'événement qui se déclenche quand l'Entité est apparait. Ne s'execute pas quand elle est invoqué avec '/summon'.", "properties": {
                "filters": {"description": "Execute ce set de réponses d'événements si les conditions de filtres sont validés.", "$ref": "#/definitions/minecraft_filter-ref"},
                "add": {"$ref": "#/definitions/event_response_add-ref"},
                "remove": {"$ref": "#/definitions/event_response_remove-ref"},
                "triggger": {"$ref": "#/definitions/event_response_trigger-ref"},
                "set_property": {"$ref": "#/definitions/event_response_set_property-ref"},
                "queue_command": {"$ref": "#/definitions/event_response_queue_command-ref"},
                "randomize": {"$ref": "#/definitions/event_response_randomize-ref"},
                "sequence": {"$ref": "#/definitions/event_response_sequence-ref"},
                "emit_vibration": {"$ref": "#/definitions/event_response_emit_vibration-ref"},
                "execute_event_on_home_block": {"$ref": "#/definitions/event_response_execute_event_on_home_block-ref"},
                "reset_target": {"$ref": "#/definitions/event_response_reset_target-ref"},
                "play_sound": {"$ref": "#/definitions/event_response_play_sound-ref"}
            }},
            "minecraft:entity_transformed": {"type": "object", "description": "L'événement qui se déclenche quand l'entité se transforme en cette Entité.", "properties": {
                "filters": {"description": "Execute ce set de réponses d'événements si les conditions de filtres sont validés.", "$ref": "#/definitions/minecraft_filter-ref"},
                "add": {"$ref": "#/definitions/event_response_add-ref"},
                "remove": {"$ref": "#/definitions/event_response_remove-ref"},
                "triggger": {"$ref": "#/definitions/event_response_trigger-ref"},
                "set_property": {"$ref": "#/definitions/event_response_set_property-ref"},
                "queue_command": {"$ref": "#/definitions/event_response_queue_command-ref"},
                "randomize": {"$ref": "#/definitions/event_response_randomize-ref"},
                "sequence": {"$ref": "#/definitions/event_response_sequence-ref"},
                "emit_vibration": {"$ref": "#/definitions/event_response_emit_vibration-ref"},
                "execute_event_on_home_block": {"$ref": "#/definitions/event_response_execute_event_on_home_block-ref"},
                "reset_target": {"$ref": "#/definitions/event_response_reset_target-ref"},
                "play_sound": {"$ref": "#/definitions/event_response_play_sound-ref"}
            }},
            "minecraft:on_prime": {"type": "object", "description": "L'événement qui se déclenche quand l'Entoité est amorcée et prête à exploser.", "properties": {
                "filters": {"description": "Execute ce set de réponses d'événements si les conditions de filtres sont validés.", "$ref": "#/definitions/minecraft_filter-ref"},
                "add": {"$ref": "#/definitions/event_response_add-ref"},
                "remove": {"$ref": "#/definitions/event_response_remove-ref"},
                "triggger": {"$ref": "#/definitions/event_response_trigger-ref"},
                "set_property": {"$ref": "#/definitions/event_response_set_property-ref"},
                "queue_command": {"$ref": "#/definitions/event_response_queue_command-ref"},
                "randomize": {"$ref": "#/definitions/event_response_randomize-ref"},
                "sequence": {"$ref": "#/definitions/event_response_sequence-ref"},
                "emit_vibration": {"$ref": "#/definitions/event_response_emit_vibration-ref"},
                "execute_event_on_home_block": {"$ref": "#/definitions/event_response_execute_event_on_home_block-ref"},
                "reset_target": {"$ref": "#/definitions/event_response_reset_target-ref"},
                "play_sound": {"$ref": "#/definitions/event_response_play_sound-ref"}
            }}
           },
            "additionalProperties": {"type": "object", "properties": {
                "filters": {"description": "Execute ce set de réponses d'événements si les conditions de filtres sont validés.", "$ref": "#/definitions/minecraft_filter-ref"},
                "add": {"$ref": "#/definitions/event_response_add-ref"},
                "remove": {"$ref": "#/definitions/event_response_remove-ref"},
                "triggger": {"$ref": "#/definitions/event_response_trigger-ref"},
                "set_property": {"$ref": "#/definitions/event_response_set_property-ref"},
                "queue_command": {"$ref": "#/definitions/event_response_queue_command-ref"},
                "randomize": {"$ref": "#/definitions/event_response_randomize-ref"},
                "sequence": {"$ref": "#/definitions/event_response_sequence-ref"},
                "execute_event_on_home_block": {"$ref": "#/definitions/event_response_execute_event_on_home_block-ref"},
                "reset_target": {"$ref": "#/definitions/event_response_reset_target-ref"},
                "play_sound": {"$ref": "#/definitions/event_response_play_sound-ref"}
            }}
        },
        
        "event_response_add-ref": {"type": "object", "description": "Ajoute des 'component_groups' définit, à l'Entité.", "properties": {
            "component_groups": {"type": "array", "description": "Les 'compoent_groups' à ajouter.", "items": {"type": "string"}}
        }},
        "event_response_remove-ref": {"type": "object", "description": "Enlève des 'component_groups' définit, à l'Entité.", "properties": {
            "component_groups": {"type": "array", "description": "Les 'compoent_groups' à enlever.", "items": {"type": "string"}}
        }},
        "event_response_trigger-ref": {"type": "object", "description": "Déclenche un autre événement selon des conditions.", "properties": {
            "filters": {"description": "Filtre de test pour l'execution de l'événement.", "$ref": "#/definitions/minecraft_filter-ref"},
            "event": {"type": "string", "description": "L'Evenement à déclencher."},
            "target": {"type": "string", "description": "La cible qui subira l'Evenement.", "enum": ["block", "damager", "other", "parent", "player", "self", "target"]}
        }},
        "event_response_set_property-ref": {"type": "object", "description": "Définit la valeur des propeiétés d'Entités spécifiés.",
            "additionalProperties": {"anyOf": [{"type": "number"}, {"type": "boolean"}, {"type": "string"}]}
        },
        "event_response_queue_command-ref": {"type": "object", "description": "Permet de mettre en file d'atteinte une ou des commandes slash qui seront exécutées à la fin du tick courant.", "properties": {
            "command": {"type": "string", "description": "La comande slash à exécuter."},
            "command_array": {"type": "array", "description": "Les commandes slash à exécuter.", "items": {"type": "string"}},
            "target": {"type": "string", "description": "La cible qui subira la commande.", "enum": ["block", "damager", "other", "parent", "player", "self", "target"]}
        }},
        "event_response_randomize-ref": {"type": "array", "description": "Contient différents set de réponses d'événements composé de chacun d'un poids de chance, dont un seul sera exécuter aléatoirement.", "items": {"type": "object", "properties": {
            "weight": {"type": "number", "description": "Le poids de chance de ce set de réponse d'événement."},
            "filters": {"description": "Execute ce set de réponses d'événements si les conditions de filtres sont validés.", "$ref": "#/definitions/minecraft_filter-ref"},
            "add": {"$ref": "#/definitions/event_response_add-ref"},
            "remove": {"$ref": "#/definitions/event_response_remove-ref"},
            "triggger": {"$ref": "#/definitions/event_response_trigger-ref"},
            "set_property": {"$ref": "#/definitions/event_response_set_property-ref"},
            "queue_command": {"$ref": "#/definitions/event_response_queue_command-ref"},
            "randomize": {"$ref": "#/definitions/event_response_randomize-ref"},
            "sequence": {"$ref": "#/definitions/event_response_sequence-ref"},
            "execute_event_on_home_block": {"$ref": "#/definitions/event_response_execute_event_on_home_block-ref"},
            "reset_target": {"$ref": "#/definitions/event_response_reset_target-ref"},
            "play_sound": {"$ref": "#/definitions/event_response_play_sound-ref"}
        }}},
        "event_response_sequence-ref": {"type": "array", "description": "Utilisé pour executer chaque set de réponses d'événements qu'elle contient.", "items": {"type": "object", "properties": {
            "filters": {"description": "Execute ce set de réponses d'événements si les conditions de filtres sont validés.", "$ref": "#/definitions/minecraft_filter-ref"},
            "add": {"$ref": "#/definitions/event_response_add-ref"},
            "remove": {"$ref": "#/definitions/event_response_remove-ref"},
            "triggger": {"$ref": "#/definitions/event_response_trigger-ref"},
            "set_property": {"$ref": "#/definitions/event_response_set_property-ref"},
            "queue_command": {"$ref": "#/definitions/event_response_queue_command-ref"},
            "randomize": {"$ref": "#/definitions/event_response_randomize-ref"},
            "sequence": {"$ref": "#/definitions/event_response_sequence-ref"},
            "execute_event_on_home_block": {"$ref": "#/definitions/event_response_execute_event_on_home_block-ref"},
            "reset_target": {"$ref": "#/definitions/event_response_reset_target-ref"},
            "play_sound": {"$ref": "#/definitions/event_response_play_sound-ref"}
        }}},
        "event_response_emit_vibration-ref": {"type": "object", "description": "Permet à l'entité d'éméttre une vibration", "properties": {
            "vibration": {"type": "string", "enum": ["entity_act"], "description": "Le type de vibration à émettre."}
        }},
        "event_response_execute_event_on_home_block-ref": {"type": "object", "description": "Permet à l'Entité d'interagir avec le bloc à sa position de maison. L'événement est déclenché sur le bloc à cet emplacement précis.", "properties": {
            "event": {"type": "string", "description": "L'Evenement à déclencher."}
        }},
        "event_response_reset_target-ref": {"type": "object", "description": "Permet à l'Entité de réinitialiser sa cible."},
        "event_response_play_sound-ref": {
            "description": "Permet à l'Entité d'émettre un son.",
            "type": "object",
            "required": ["sound"],
            "properties": {
                "sound": {
                    "description": "Le son à jouer qui se jouera à la position de l'Entité.",
                    "type": "string"
                }
            }
        },
        "event_response_emit_particle-ref": {
            "description": "Permet à l'Entité d'émettre une particule.",
            "type": "object",
            "required": ["particle"],
            "properties": {
                "particle": {
                    "description": "La particule à émettre.",
                    "type": "string"
                }
            }
        },


        "trigger_event_parameters-ref": {"anyOf": [
            {"type": "object", "properties": {
                "event": {"type": "string", "description": "L'Evenement à déclencher."},
                "target": {"type": "string", "description": "La cible qui subira l'Evenement.", "enum": ["baby", "block", "damager", "other", "parent", "player", "self", "target"]}
            }},
            {"type": "array", "items": {"type": "object", "properties": {
                "event": {"type": "string", "description": "L'Evenement à déclencher."},
                "target": {"type": "string", "description": "La cible qui subira l'Evenement.", "enum": ["baby", "block", "damager", "other", "parent", "player", "self", "target"]}
            }}}
        ]},
        "minecraft_filter-ref": {"type": "object", "properties": {
            "none_of": {"type": "array", "description": "Aucune des conditions ne doivent être rempli.", "items": {"$ref": "#/definitions/minecraft_filter-ref"}},
            "any_of": {"type": "array", "description": "Au moins une des conditions doivent être rempli.", "items": {"$ref": "#/definitions/minecraft_filter-ref"}},
            "all_of": {"type": "array", "description": "Toutes les conditions doivent être rempli.", "items": {"$ref": "#/definitions/minecraft_filter-ref"}},
            "test": {"type": "string", "description": "Le Test à effectuer.", "anyOf": [
                {"enum": ["actor_health"], "description": "Teste le nombre de PV."},
                {"enum": ["all_slots_empty"], "description": "Renvoie True lorsque l'emplacement d'inventaire spécifié du Sujet est complètement vide."},
                {"enum": ["any_slot_empty"], "description": "Renvoie True lorsque l'emplacement d'inventaire spécifié du Sujet a au moins un emplacement vide."},
                {"enum": ["bool_property"], "description": "Renvoie True quand la propriété d'Entité de type Boolean (ou Component avec aucune propriété) correspond avec la valeur fournit."},
                {"enum": ["clock_time"], "description": "Compare l'heure actuelle avec une valeur flottante comprise entre 0.0 et 1.0 (0.0 = Midi, 0.25 = Coucher du soleil, 0.5 = Minuit, 0.75 = Lever du soleil.)"},
                {"enum": ["distance_to_nearest_player"], "description": "Compare la distance jusqu'au joueur le plus proche avec une valeur flottante."},
                {"enum": ["enum_property"], "description": "Renvoie True quand la propriété d'Entité de type Enum (ou Component avec aucune propriété) correspond avec la valeur fournit."},
                {"enum": ["float_property"], "description": "Renvoie True quand la propriété d'Entité de type Float (ou Component avec aucune propriété) correspond avec la valeur fournit."},
                {"enum": ["has_ability"], "description": "Renvoie True si le Sujet a l'abilité spécifié."},
                {"enum": ["has_biome_tag"], "description": "Teste si le biome auquel le Sujet s'y trouve a le tag spécifié."},
                {"enum": ["has_component"], "description": "Renvoie True si le Sujet a le component spécifié."},
                {"enum": ["has_container_open"], "description": "Renvoie True lorsque le sujet Joueur est en train d'ouvrir un conteneur."},
                {"enum": ["has_damage"], "description": "Renvoie True lorsque le Sujet Entité reçoit le type de dégat spécifié."},
                {"enum": ["has_damaged_equipment"], "description": "Teste la présence d'un Item spécifié endomagé dans le type d'emplacement d'inventaire spécifié du Sujet."},
                {"enum": ["has_equipment"], "description": "Teste la présence d'un Item spécifié se trouve dans le type d'emplacement d'inventaire spécifié su Sujet."},
                {"enum": ["has_mob_effect"], "description": "Teste si le sujet Entité a l'effet de potion spécifié."},
                {"enum": ["has_nametag"], "description": "Teste si le sujet a reçu un nom personalisé."},
                {"enum": ["has_property"], "description": "Teste la présence d'une propriété d'Entité sur le Sujet."},
                {"enum": ["has_ranged_weapon"], "description": "Renvoie True lorsque le sujet Entité est en train de tenir une arme à distance comme un arc ou une arbalète."},
                {"enum": ["has_silk_touch"], "description": "Teste si le sujet tient un Item avec l'enchantement Délicatesse."},
                {"enum": ["has_tag"], "description": "Renvoie True so le sujet a le tag spécifié."},
                {"enum": ["has_target"], "description": "Renvoie True si le sujet Entité a une cible valide."},
                {"enum": ["has_trade_supply"], "description": "Teste si la Cible a encore de l'approvisionnement commercial."},
                {"enum": ["hourly_clock_time"], "description": "Compare l'heure actuelle sur 24 heures avec une valeur Int dans la range [0, 24000]"},
                {"enum": ["in_block"], "description": "Renvoie True lorsque le sujet Entité est à l'intérieur du type de Block spécifié."},
                {"enum": ["in_caravan"], "description": "Renvoie True si le sujet Entité est dans une caravane."},
                {"enum": ["in_clouds"], "description": "Renvoie True si le sujet Entité est dans les nuages."},
                {"enum": ["in_contact_with_water"], "description": "Renvoie True lorsque le sujet Entité est en contact avec l'eau : l'eau, pluie, splash bottle d'eau."},
                {"enum": ["in_lava"], "description": "Renvoie True lorsque le sujet Entité est dans la lave."},
                {"enum": ["in_nether"], "description": "Renvoie True si le sujet Entité est dans le Nether."},
                {"enum": ["in_overworld"], "description": "Renvoie True si le sujet Entité est dans l'Overworld."},
                {"enum": ["in_water"], "description": "Renvoie True lorsque le sujet Entité est dans l'eau."},
                {"enum": ["in_water_or_rain"], "description": "Renvoie True lorsque le sujet Entité est dans l'eau ou sous la pluie."},
                {"enum": ["inactivity_timer"], "description": "Teste si la durée en secondes spécifié d'inactivité pour la désapparition a été atteinte."},
                {"enum": ["int_property"], "description": "Renvoie True quand la propriété d'Entité de type Integer (ou Component avec aucune propriété) correspond avec la valeur fournit."},
                {"enum": ["is_altitude"], "description": "Teste si l'atitude actuelle par rapport à une valeur fournie. 0 = niveau d'altitude de la Bedrock."},
                {"enum": ["is_avoiding_mobs"], "description": "Renvoie True si le sujet Entité fuit les autres Mobs."},
                {"enum": ["is_baby"], "description": "Renvoie True si le sujet Entité est un bébé."},
                {"enum": ["is_biome"], "description": "Teste si le Sujet se trouve actuellement dans le Biome spécifié."},
                {"enum": ["is_block"], "description": "Renvoie True lorsque le sujet Bloc est du type spécifié."},
                {"enum": ["is_brightness"], "description": "Teste le luminosité actuelle par rapport à une valeur dournie dans la plage (0.0f, 1.0f)"},
                {"enum": ["is_climbing"], "description": "Renvoie True si le sujet Entité grimpe."},
                {"enum": ["is_color"], "description": "Renvoie True si le sujet Entité est de la couleur spécifiée."},
                {"enum": ["is_daytime"], "description": "Renvoie True s'il fait jour."},
                {"enum": ["is_difficulty"], "description": "Teste le niveau de difficulté actuel du monde."},
                {"enum": ["is_family"], "description": "Renvoie True si le sujet Entité est un membre de la famille spécifié."},
                {"enum": ["is_game_rule"], "description": "Teste si la Gamerule spécifié est active."},
                {"enum": ["is_humid"], "description": "Teste si le sujet est dans une zone avec de l'humidité."},
                {"enum": ["is_immobile"], "description": "Renvoie True si le sujet Entité est immobile. Une Entité est immobile si elle n'a pas de AI Goals, si elle vient de changer de dimension ou si c'est un Mob n'a pas de Vie."},
                {"enum": ["is_in_village"], "description": "Teste si le sujet se trouve à l'intérieur des limites d'un village."},
                {"enum": ["is_leashed"], "description": "Renvoie True si le sujet est en laisse."},
                {"enum": ["is_leashed_to"], "description": "Renvoie True si le sujet Entité est attaché à l'Entité appelante."},
                {"enum": ["is_mark_variant"], "description": "Renvoie True si le sujet Entité à le nombre mark_variant spécifié."},
                {"enum": ["is_missing_health"], "description": "Teste s'il manque de la vie au sujet Entité."},
                {"enum": ["is_moving"], "description": "Renvoie True si le sujet Entité bouge."},
                {"enum": ["is_owner"], "description": "Renvoie True si le sujet Entité est le propriétaire de l'Entité appelante."},
                {"enum": ["is_panicking"], "description": "Teste si le sujet panique."},
                {"enum": ["is_persistent"], "description": "Teste si la persistance du sujet correspond à la valeur booléenne transmise."},
                {"enum": ["is_raider"], "description": "Teste si le sujet est un chevaucheur."},
                {"enum": ["is_riding"], "description": "Renvoie True si le sujet Entité chevauche une autre Entité."},
                {"enum": ["is_sitting"], "description": "Teste si le sujet est assis."},
                {"enum": ["is_skin_id"], "description": "Renvoie True, si le sujet Entité a la propriété de skin_id spécifié."},
                {"enum": ["is_sleeping"], "description": "Renvoie True si le sujet Entité dort."},
                {"enum": ["is_sneak_held"], "description": "Renvoie True si le sujet Entité a l'entrée de sneak tenu."},
                {"enum": ["is_sneaking"], "description": "Renvoie True si le sujet Entité sneak."},
                {"enum": ["is_snow_covered"], "description": "Teste si le sujet est dans une zone avec des couches de neiges."},
                {"enum": ["is_sprinting"], "description": "Teste si le sujet court."},
                {"enum": ["is_target"], "description": "Renvoie True si le sujet Entité est la cible de l'Entité appelant."},
                {"enum": ["is_temperature_type"], "description": "Teste si le type de température correspond à celle spécifié."},
                {"enum": ["is_temperature_value"], "description": "Teste si la température actuelle correspond à la valeut spécifié dans la range (0.0, 1.0) où 0.0f est la plus froide des températures et 1.0f la plus chaude."},
                {"enum": ["is_underground"], "description": "Renvoie True lorsque le sujet Entité est sous terre. Une Entité est considéré comm étant sous terre si elle est recouverte de blocs non solides."},
                {"enum": ["is_underwater"], "description": "Renvoie True si le sujet Entité est sous l'eau. Une Entité est consiédré comme sous l'eau si elle est complètement recouverte de blocs d'eau."},
                {"enum": ["is_variant"], "description": "Renvoie True si le sujet Entité a la valeur du component 'variant' qui correspond à la valeur fourni."},
                {"enum": ["is_visible"], "description": "Renvoie True si le sujet Entité est visible."},
                {"enum": ["is_waterlogged"], "description": "Teste si le sjet Bloc est submergé d'eau."},
                {"enum": ["light_level"], "description": "Teste si le Mob se trouve en dehors de la plage de niveaux de lumière spécifiée (0, 16)."},
                {"enum": ["moon_intensity"], "description": "Compare l'intensité actuelle de la lune avec une valeur dans la range (0.0, 1.0)"},
                {"enum": ["moon_phase"], "description": "Compare la phase actuelle de la lune avec une valeur etière dans la range (0, 7)."},
                {"enum": ["on_fire"], "description": "Teste si le sujet est en feu."},
                {"enum": ["on_ground"], "description": "Renvoie True lorsque le sujet Entité est sur le sol."},
                {"enum": ["on_hot_block"], "description": "Teste si le sujet est sur un bloc chaud."},
                {"enum": ["on_ladder"], "description": "Renvoie True lorsque le sujet Entité est sur une échelle."},
                {"enum": ["owner_distance"], "description": "Renvoie la distance entre cette Entité et son propriétaire."},
                {"enum": ["random_chance"], "description": "Renvoie True si la chance aléatoire obtient 0 hors d'une plage maximale spécifiée."},
                {"enum": ["rider_count"], "description": "Renvoie le nombre de chevauchers sur ce sujet Entité."},
                {"enum": ["surface_mob"], "description": "Teste si le sujet est un mob de surface."},
                {"enum": ["taking_fire_damage"], "description": "Teste si le sujet subit des dégâts de feu. Nécessite le component 'damage_sensor'."},
                {"enum": ["target_distance"], "description": "Teste la distance entre l'Entité appelante et sa cible."},
                {"enum": ["trusts"], "description": "Renvoie vrai si le sujet est approuvé par l'Entité."},
                {"enum": ["was_last_hurt_by"], "description": "Teste si le sujet est le dernier joueur qui a attaqué le sujet dans les 400 dernières secondes, ou le dernier Mob à l'avoir fait dans les dernières 60 secondes."},
                {"enum": ["weather"], "description": "Teste la météo actuelle dans la dimension par rapport à la valeur météo spécifié."},
                {"enum": ["weather_at_position"], "description": "Teste la météo acutelle, dans la position de l'Acteur, par rapport à la valeur de météo fourni."}
            ]},
            "domain": {"description": "Le Domaine du Test.", "anyOf": [
                {"type": "string"},
                {"type": "string", "description": "L'emplacement d'Equipement à tester.", "enum": ["any", "armor", "body", "feet", "hand", "head", "inventory", "leg", "torso"]}
            ]},
            "operator": {"type": "string", "description": "La comparaison à appliquer avec 'value'.", "anyOf": [
                {"enum": ["!=", "<>", "not"], "description": "Teste pour l'inégalité."},
                {"enum": ["<"], "description": "Teste pour une valeur inférieure à la valeur."},
                {"enum": ["<="], "description": "Teste pour une valeur inférieure ou égale à la valeur."},
                {"enum": ["=", "==", "equals"], "description": "Teste pour l'égalité."},
                {"enum": [">"], "description": "Teste pour une valeur supérieure à la valeur."},
                {"enum": [">="], "description": "Teste pour une valeur supérieure ou égale à la valeur."}
            ]},
            "subject": {"type": "string", "description": "Le Sujet pour le Test.", "anyOf": [
                {"enum": ["block"], "description": "Le Bloc impliqué dans l'interaction."},
                {"enum": ["damager"], "description": "L'Entité qui a subit des dégâts dans l'interaction."},
                {"enum": ["other"], "description": "L'autre sujet de l'interaction. Pas celui qui execute l'appelle de ce filtre de test."},
                {"enum": ["parent"], "description": "Le Parent actuel de l'appelant."},
                {"enum": ["player"], "description": "Le Joueur impliqué dans l'interaction."},
                {"enum": ["self"], "description": "L'appelant de ce filtre de test."},
                {"enum": ["target"], "description": "La cible actuelle de l'appelant."}
            ]},
            "value": {"description": "La valeur pour le Test.", "anyOf": [
                {"type": "integer"},
                {"type": "string", "description": "L'emplacement d'Equipement à tester.", "enum": ["any", "armor", "feet", "hand", "head", "inventory", "leg", "torso"]},
                {"type": "boolean"},
                {"type": "number"},
                {"type": "string", "description": "Le Type d'Abilité à tester.", "enum": ["flySpeed", "flying", "instabuild", "invulnerable", "lightning", "mayfly", "mute", "noclip", "walkSpeed", "worldbuilder"]},
                {"type": "string"},
                {"type": "string", "description": "Le Type de Dégats à tester.", "enum": [
                    "all", "anvil", "block_explosion", "contact", "drowning", "entity_attack", "entity_explosion", "fall", "falling_block", "fatal", "fire", "fire_tick", "fly_into_wall", 
                    "lava", "magic", "none", "override", "piston", "projectile", "self_destruct", "sonic_boom", "stalactite", "stalagmite", "starve", "suffocation", "thorns", 
                    "void", "wither"
                ]},
                {"type": "string", "description": "La palette de couleur à tester.", "enum": [
                    "black", "blue", "brown", "cyan", "gray", "green", "light_blue", "light_green", "magenta", "orange", "pink", "purple", "red", "silver", "white", "yellow"
                ]},
                {"type": "string", "description": "Le niveau de difficulté à tester.", "enum": ["peaceful", "easy", "normal", "hard"]},
                {"type": "string", "description": "Le type de température à tester.", "enum": ["cold", "mild", "ocean", "warm"]}
            ]}
        }}
    }
}

