{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "type": "object",
    "required": ["format_version", "tiers"],
    "properties": {
        "format_version": {"$ref": "#/definitions/format_version-def"},
        "tiers": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "num_to_select": {"type": "number"},
                                "trades": {"$ref": "#/definitions/trades_def"}
                            }
                        }
                    },
                    "total_exp_required": {"type": "number"},
                    "trades": {"$ref": "#/definitions/trades_def"}
                }
            }
        }
    },
    "definitions": {
        "format_version-def": {"type": "string", "pattern": "^\\d+\\.\\d+\\.\\d+$", "description": "La version du Format Ã  utiliser."},
        "trades_def": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "wants": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "anyOf": [
                                {
                                    "properties": {
                                        "choice": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "item": {"type": "string"},
                                                    "quantity": {
                                                        "oneOf": [
                                                            {
                                                                "type": "object",
                                                                "properties": {
                                                                    "min": {"type": "number"},
                                                                    "max": {"type": "number"}
                                                                }
                                                            },
                                                            {"type": "number"}
                                                        ]
                                                    },
                                                    "price_multiplier": {"type": "number"},
                                                    "functions": {"$ref": "#/definitions/functions_def"}
                                                }
                                            }
                                        }
                                    }
                                },
                                {
                                    "properties": {
                                        "item": {"type": "string"},
                                        "quantity": {
                                            "oneOf": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "min": {"type": "number"},
                                                        "max": {"type": "number"}
                                                    }
                                                },
                                                {"type": "number"}
                                            ]
                                        },
                                        "price_multiplier": {"type": "number"},
                                        "functions": {"$ref": "#/definitions/functions_def"}
                                    }
                                }
                            ]
                        }
                    },
                    "gives": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "item": {"type": "string"},
                                "quantity": {
                                    "oneOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "min": {"type": "number"},
                                                "max": {"type": "number"}
                                            }
                                        },
                                        {"type": "number"}
                                    ]
                                },
                                "functions": {"$ref": "#/definitions/functions_def"}
                            }
                        }
                    },
                    "max_uses": {"type": "number"},
                    "reward_exp": {"type": "boolean"},
                    "trader_exp": {"type": "number"}
                }
            }
        },
        "functions_def": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "function": {
                        "type": "string",
                        "enum": [
                            "enchant_book_for_trading", "enchant_random_gear", "enchant_randomly", "enchant_with_levels", "specific_enchants", "looting_enchant",
                            "random_aux_value", "random_block_state", "random_dye", "set_actor_id", "set_banner_details", "set_book_contents", "set_count",
                            "set_damage", "set_data", "set_data_from_color_index", "set_lore", "set_name", "exploration_map", "fill_container", "furnace_smelt",
                            "trader_material_type", "set_ominous_bottle_amplifier", "set_armor_trim", "set_potion"
                        ]
                    }
                },
                "dependencies": {
                    "function": {
                        "oneOf": [
                            {
                                "properties": {
                                    "function": {"enum": ["enchant_book_for_trading", "random_dye", "set_data_from_color_index", "furnace_smelt", "trader_material_type"]}
                                }
                            },
                            {
                                "properties": {
                                    "function": {"enum": ["enchant_book_for_trading"]},
                                    "base_cost": {"type": "number"},
                                    "base_random_cost": {"type": "number"},
                                    "per_level_random_cost": {"type": "number"},
                                    "per_level_cost": {"type": "number"}
                                }
                            },
                            {
                                "properties": {
                                    "function": {"enum": ["enchant_random_gear"]},
                                    "chance": {"type": "number"}
                                }
                            },
                            {
                                "properties": {
                                    "function": {"enum": ["enchant_randomly", "enchant_with_levels"]},
                                    "treasure": {"type": "boolean"}
                                }
                            },
                            {
                                "properties": {
                                    "function": {"enum": ["enchant_with_levels"]},
                                    "levels": {
                                        "type": "object", 
                                        "properties": {
                                            "min": {"type": "number"},
                                            "max": {"type": "number"}
                                        }
                                    }
                                }
                            },
                            {
                                "properties": {
                                    "function": {"enum": ["specific_enchants"]},
                                    "enchants": {
                                        "type": "array",
                                        "items": {
                                            "oneOf": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {"type": "string"},
                                                        "level": {"type": "number"}
                                                    }
                                                },
                                                {"type": "string"}
                                            ]
                                        }
                                    }
                                }
                            },
                            {
                                "properties": {
                                    "function": {"enum": ["looting_enchant", "set_count"]},
                                    "count": {
                                        "oneOf": [
                                            {
                                                "type": "object", 
                                                "properties": {
                                                    "min": {"type": "number"},
                                                    "max": {"type": "number"}
                                                }
                                            },
                                            {"type": "number"}
                                        ]
                                    }
                                }
                            },
                            {
                                "properties": {
                                    "function": {"enum": ["random_aux_value", "random_block_state"]},
                                    "values": {
                                        "type": "object", 
                                        "properties": {
                                            "min": {"type": "number"},
                                            "max": {"type": "number"}
                                        }
                                    }
                                }
                            },
                            {
                                "properties": {
                                    "function": {"enum": ["random_block_state"]},
                                    "block_state": {"type": "string"}
                                }
                            },
                            {
                                "properties": {
                                    "function": {"enum": ["set_actor_id"]},
                                    "id": {"type": "string"}
                                }
                            },
                            {
                                "properties": {
                                    "function": {"enum": ["set_banner_details"]},
                                    "type": {"type": "number", "const": 1}
                                }
                            },
                            {
                                "properties": {
                                    "function": {"enum": ["set_book_contents"]},
                                    "author": {"type": "string"},
                                    "title": {"type": "string"},
                                    "pages": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            {
                                "properties": {
                                    "function": {"enum": ["set_damage"]},
                                    "damage": {
                                        "oneOf": [
                                            {
                                                "type": "object", 
                                                "properties": {
                                                    "min": {"type": "number"},
                                                    "max": {"type": "number"}
                                                }
                                            },
                                            {"type": "number"}
                                        ]
                                    }
                                }
                            },
                            {
                                "properties": {
                                    "function": {"enum": ["set_data"]},
                                    "data": {"type": "number"}
                                }
                            },
                            {
                                "properties": {
                                    "function": {"enum": ["set_lore"]},
                                    "lore": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            {
                                "properties": {
                                    "function": {"enum": ["set_name"]},
                                    "name": {"type": "string"}
                                }
                            },
                            {
                                "properties": {
                                    "function": {"enum": ["exploration_map"]},
                                    "destination": {
                                        "type": "string", 
                                        "enum": [
                                            "buriedtreasure", "endcity", "fortress", "mansion", "mineshaft", "monument", "pillageroutpost",
                                            "ruins", "shipwreck", "stronghold", "temple", "village", "trial_chambers"
                                        ]
                                    }
                                }
                            },
                            {
                                "properties": {
                                    "function": {"enum": ["fill_container"]},
                                    "loot_table": {"type": "string"},
                                    "set_name": {"type": "string"}
                                }
                            },
                            {
                                "properties": {
                                    "function": {"enum": ["set_ominous_bottle_amplifier"]},
                                    "amplifier": {
                                        "oneOf": [
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "min": {"type": "integer"},
                                                    "max": {"type": "integer"}
                                                }
                                            },
                                            {"type": "integer"}
                                        ]
                                    }
                                }
                            },
                            {
                                "properties": {
                                    "function": {"enum": ["set_armor_trim"]},
                                    "material": {
                                        "anyOf": [
                                            {"type": "string", "enum": ["amethyst", "copper", "diamond", "emerald", "gold", "iron", "lapis", "netherite", "quartz", "redstone"]},
                                            {"type": "string"}
                                        ]
                                    },
                                    "pattern": {
                                        "anyOf": [
                                            {
                                                "type": "string", 
                                                "enum": [
                                                    "sentry", "vex", "wild", "coast", "dune", "wayfinder", "raiser", "shaper", "host", "ward", "silence", "tide", "snout",
                                                    "rib", "eye", "spire", "flow", "bolt"
                                                ]
                                            },
                                            {"type": "string"}
                                        ]
                                    }
                                }
                            },
                            {
                                "properties": {
                                    "function": {"enum": ["set_potion"]},
                                    "id": {"type": "string", "enum": [
                                        "water", "mundane", "long_mundane", "thick", "awkward", "nightvision", "long_nightvision", "invisibility", "long_invisibility", 
                                        "leaping", "long_leaping", "strong_leaping", "fire_resistance", "long_fire_resistance", "swiftness", "long_swiftness", "strong_swiftness", 
                                        "slowness", "long_slowness", "strong_slowness", "water_breathing", "long_water_breathing", "healing", "strong_healing", "harming", 
                                        "strong_harming", "poison", "long_poison", "strong_poison", "regeneration", "long_regeneration", "strong_regeneration", "strength", 
                                        "long_strength", "strong_strength", "weakness", "long_weakness", "wither", "turtle_master", "long_turtle_master", "strong_turtle_master", 
                                        "slow_falling", "long_slow_falling", "wind_charged", "weaving", "oozing", "infested"
                                    ]}
                                }
                            }
                        ]
                    }
                }
            }
        }
    }
}